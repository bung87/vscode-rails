// This file generated through ./bin/gen_symbols.js,Do NOT modify it!
import trie from 'trie-prefix-tree';
const list = [
    "abstractcontroller",
    "abstractcontroller::actionnotfound",
    "abstractcontroller::actionnotfound::correction",
    "abstractcontroller::base",
    "abstractcontroller::caching",
    "abstractcontroller::caching::classmethods",
    "abstractcontroller::caching::configmethods",
    "abstractcontroller::caching::fragments",
    "abstractcontroller::caching::fragments::classmethods",
    "abstractcontroller::callbacks",
    "abstractcontroller::callbacks::classmethods",
    "abstractcontroller::collector",
    "abstractcontroller::doublerendererror",
    "abstractcontroller::helpers",
    "abstractcontroller::helpers::classmethods",
    "abstractcontroller::helpers::missinghelpererror",
    "abstractcontroller::railties",
    "abstractcontroller::railties::routeshelpers",
    "abstractcontroller::rendering",
    "abstractcontroller::translation",
    "abstractcontroller::urlfor",
    "abstractcontroller::urlfor::classmethods",
    "actioncable",
    "actioncable::channel",
    "actioncable::channel::base",
    "actioncable::channel::broadcasting",
    "actioncable::channel::broadcasting::classmethods",
    "actioncable::channel::callbacks",
    "actioncable::channel::callbacks::classmethods",
    "actioncable::channel::channelstub",
    "actioncable::channel::connectionstub",
    "actioncable::channel::naming",
    "actioncable::channel::naming::classmethods",
    "actioncable::channel::noninferrablechannelerror",
    "actioncable::channel::periodictimers",
    "actioncable::channel::periodictimers::classmethods",
    "actioncable::channel::streams",
    "actioncable::channel::testcase",
    "actioncable::channel::testcase::behavior",
    "actioncable::channel::testcase::behavior::classmethods",
    "actioncable::connection",
    "actioncable::connection::assertions",
    "actioncable::connection::authorization",
    "actioncable::connection::authorization::unauthorizederror",
    "actioncable::connection::base",
    "actioncable::connection::identification",
    "actioncable::connection::identification::classmethods",
    "actioncable::connection::internalchannel",
    "actioncable::connection::noninferrableconnectionerror",
    "actioncable::connection::streameventloop",
    "actioncable::connection::taggedloggerproxy",
    "actioncable::connection::testcase",
    "actioncable::connection::testcase::behavior",
    "actioncable::connection::testcase::behavior::classmethods",
    "actioncable::connection::testconnection",
    "actioncable::connection::testcookiejar",
    "actioncable::connection::testrequest",
    "actioncable::helpers",
    "actioncable::helpers::actioncablehelper",
    "actioncable::remoteconnections",
    "actioncable::remoteconnections::remoteconnection",
    "actioncable::remoteconnections::remoteconnection::invalididentifierserror",
    "actioncable::server",
    "actioncable::server::base",
    "actioncable::server::broadcasting",
    "actioncable::server::broadcasting::broadcaster",
    "actioncable::server::configuration",
    "actioncable::server::worker",
    "actioncable::server::worker::activerecordconnectionmanagement",
    "actioncable::subscriptionadapter",
    "actioncable::subscriptionadapter::async",
    "actioncable::subscriptionadapter::async::asyncsubscribermap",
    "actioncable::subscriptionadapter::base",
    "actioncable::subscriptionadapter::postgresql",
    "actioncable::subscriptionadapter::postgresql::listener",
    "actioncable::subscriptionadapter::redis",
    "actioncable::subscriptionadapter::redis::listener",
    "actioncable::subscriptionadapter::subscribermap",
    "actioncable::subscriptionadapter::test",
    "actioncable::testcase",
    "actioncable::testhelper",
    "actioncable::version",
    "actioncontroller",
    "actioncontroller::api",
    "actioncontroller::apirendering",
    "actioncontroller::base",
    "actioncontroller::caching",
    "actioncontroller::conditionalget",
    "actioncontroller::conditionalget::classmethods",
    "actioncontroller::contentsecuritypolicy",
    "actioncontroller::contentsecuritypolicy::classmethods",
    "actioncontroller::cookies",
    "actioncontroller::datastreaming",
    "actioncontroller::defaultheaders",
    "actioncontroller::defaultheaders::classmethods",
    "actioncontroller::etagwithflash",
    "actioncontroller::etagwithtemplatedigest",
    "actioncontroller::flash",
    "actioncontroller::flash::classmethods",
    "actioncontroller::formbuilder",
    "actioncontroller::formbuilder::classmethods",
    "actioncontroller::head",
    "actioncontroller::helpers",
    "actioncontroller::helpers::classmethods",
    "actioncontroller::httpauthentication",
    "actioncontroller::httpauthentication::basic",
    "actioncontroller::httpauthentication::basic::controllermethods",
    "actioncontroller::httpauthentication::basic::controllermethods::classmethods",
    "actioncontroller::httpauthentication::digest",
    "actioncontroller::httpauthentication::digest::controllermethods",
    "actioncontroller::httpauthentication::token",
    "actioncontroller::httpauthentication::token::controllermethods",
    "actioncontroller::implicitrender",
    "actioncontroller::instrumentation",
    "actioncontroller::instrumentation::classmethods",
    "actioncontroller::live",
    "actioncontroller::live::classmethods",
    "actioncontroller::live::clientdisconnected",
    "actioncontroller::live::sse",
    "actioncontroller::livetestresponse",
    "actioncontroller::logsubscriber",
    "actioncontroller::logging",
    "actioncontroller::logging::classmethods",
    "actioncontroller::metal",
    "actioncontroller::mimeresponds",
    "actioncontroller::mimeresponds::collector",
    "actioncontroller::missingrenderer",
    "actioncontroller::parameterencoding",
    "actioncontroller::parameterencoding::classmethods",
    "actioncontroller::parametermissing",
    "actioncontroller::parametermissing::correction",
    "actioncontroller::parameters",
    "actioncontroller::paramswrapper",
    "actioncontroller::paramswrapper::options",
    "actioncontroller::paramswrapper::options::classmethods",
    "actioncontroller::permissionspolicy",
    "actioncontroller::permissionspolicy::classmethods",
    "actioncontroller::railties",
    "actioncontroller::railties::helpers",
    "actioncontroller::redirecting",
    "actioncontroller::renderer",
    "actioncontroller::renderers",
    "actioncontroller::renderers::all",
    "actioncontroller::renderers::classmethods",
    "actioncontroller::rendering",
    "actioncontroller::rendering::classmethods",
    "actioncontroller::requestforgeryprotection",
    "actioncontroller::requestforgeryprotection::classmethods",
    "actioncontroller::requestforgeryprotection::protectionmethods",
    "actioncontroller::requestforgeryprotection::protectionmethods::exception",
    "actioncontroller::requestforgeryprotection::protectionmethods::nullsession",
    "actioncontroller::requestforgeryprotection::protectionmethods::resetsession",
    "actioncontroller::rescue",
    "actioncontroller::respondtomismatcherror",
    "actioncontroller::streaming",
    "actioncontroller::strongparameters",
    "actioncontroller::testcase",
    "actioncontroller::testcase::behavior",
    "actioncontroller::testcase::behavior::classmethods",
    "actioncontroller::testing",
    "actioncontroller::unfilteredparameters",
    "actioncontroller::unpermittedparameters",
    "actioncontroller::urlfor",
    "actioncontroller::urlgenerationerror",
    "actioncontroller::urlgenerationerror::correction",
    "actiondispatch",
    "actiondispatch::assertionresponse",
    "actiondispatch::assertions",
    "actiondispatch::assertions::responseassertions",
    "actiondispatch::assertions::routingassertions",
    "actiondispatch::callbacks",
    "actiondispatch::contentsecuritypolicy",
    "actiondispatch::contentsecuritypolicy::middleware",
    "actiondispatch::contentsecuritypolicy::request",
    "actiondispatch::cookies",
    "actiondispatch::cookies::chainedcookiejars",
    "actiondispatch::debugexceptions",
    "actiondispatch::debuglocks",
    "actiondispatch::exceptionwrapper",
    "actiondispatch::executor",
    "actiondispatch::filehandler",
    "actiondispatch::flash",
    "actiondispatch::flash::flashhash",
    "actiondispatch::flash::requestmethods",
    "actiondispatch::hostauthorization",
    "actiondispatch::http",
    "actiondispatch::http::cache",
    "actiondispatch::http::cache::request",
    "actiondispatch::http::cache::response",
    "actiondispatch::http::filterparameters",
    "actiondispatch::http::filterredirect",
    "actiondispatch::http::headers",
    "actiondispatch::http::mimenegotiation",
    "actiondispatch::http::mimenegotiation::invalidtype",
    "actiondispatch::http::parameters",
    "actiondispatch::http::parameters::classmethods",
    "actiondispatch::http::parameters::parseerror",
    "actiondispatch::http::url",
    "actiondispatch::http::uploadedfile",
    "actiondispatch::integration",
    "actiondispatch::integration::requesthelpers",
    "actiondispatch::integration::runner",
    "actiondispatch::integration::session",
    "actiondispatch::integrationtest",
    "actiondispatch::integrationtest::behavior",
    "actiondispatch::integrationtest::behavior::classmethods",
    "actiondispatch::integrationtest::urloptions",
    "actiondispatch::journey",
    "actiondispatch::journey::format",
    "actiondispatch::journey::formatter",
    "actiondispatch::journey::formatter::missingroute",
    "actiondispatch::journey::formatter::routewithparams",
    "actiondispatch::journey::parser",
    "actiondispatch::journey::route",
    "actiondispatch::journey::route::verbmatchers",
    "actiondispatch::journey::route::verbmatchers::all",
    "actiondispatch::journey::route::verbmatchers::unknown",
    "actiondispatch::middlewarestack",
    "actiondispatch::middlewarestack::instrumentationproxy",
    "actiondispatch::middlewarestack::middleware",
    "actiondispatch::permissionspolicy",
    "actiondispatch::permissionspolicy::middleware",
    "actiondispatch::permissionspolicy::request",
    "actiondispatch::publicexceptions",
    "actiondispatch::railsentitystore",
    "actiondispatch::railsentitystore::rack",
    "actiondispatch::railsentitystore::rack::cache",
    "actiondispatch::railsentitystore::rack::cache::entitystore",
    "actiondispatch::railsmetastore",
    "actiondispatch::railsmetastore::rack",
    "actiondispatch::railsmetastore::rack::cache",
    "actiondispatch::railsmetastore::rack::cache::metastore",
    "actiondispatch::reloader",
    "actiondispatch::remoteip",
    "actiondispatch::remoteip::getip",
    "actiondispatch::remoteip::ipspoofattackerror",
    "actiondispatch::request",
    "actiondispatch::requestencoder",
    "actiondispatch::requestencoder::identityencoder",
    "actiondispatch::requestid",
    "actiondispatch::response",
    "actiondispatch::response::rackbody",
    "actiondispatch::routing",
    "actiondispatch::routing::consoleformatter",
    "actiondispatch::routing::consoleformatter::base",
    "actiondispatch::routing::consoleformatter::expanded",
    "actiondispatch::routing::consoleformatter::sheet",
    "actiondispatch::routing::htmltableformatter",
    "actiondispatch::routing::mapper",
    "actiondispatch::routing::mapper::base",
    "actiondispatch::routing::mapper::concerns",
    "actiondispatch::routing::mapper::customurls",
    "actiondispatch::routing::mapper::httphelpers",
    "actiondispatch::routing::mapper::resources",
    "actiondispatch::routing::mapper::scoping",
    "actiondispatch::routing::pathredirect",
    "actiondispatch::routing::polymorphicroutes",
    "actiondispatch::routing::redirection",
    "actiondispatch::routing::routeset",
    "actiondispatch::routing::routeset::customurlhelper",
    "actiondispatch::routing::routeset::dispatcher",
    "actiondispatch::routing::routeset::generator",
    "actiondispatch::routing::routeset::mountedhelpers",
    "actiondispatch::routing::routeset::namedroutecollection",
    "actiondispatch::routing::routeset::namedroutecollection::urlhelper",
    "actiondispatch::routing::routeset::namedroutecollection::urlhelper::optimizedurlhelper",
    "actiondispatch::routing::routeset::staticdispatcher",
    "actiondispatch::routing::routewrapper",
    "actiondispatch::routing::urlfor",
    "actiondispatch::ssl",
    "actiondispatch::session",
    "actiondispatch::session::abstractsecurestore",
    "actiondispatch::session::abstractstore",
    "actiondispatch::session::cachestore",
    "actiondispatch::session::compatibility",
    "actiondispatch::session::cookiestore",
    "actiondispatch::session::cookiestore::sessionid",
    "actiondispatch::session::memcachestore",
    "actiondispatch::session::stalesessioncheck",
    "actiondispatch::showexceptions",
    "actiondispatch::static",
    "actiondispatch::systemtestcase",
    "actiondispatch::systemtesting",
    "actiondispatch::systemtesting::testhelpers",
    "actiondispatch::systemtesting::testhelpers::screenshothelper",
    "actiondispatch::testprocess",
    "actiondispatch::testprocess::fixturefile",
    "actiondispatch::testrequest",
    "actiondispatch::testresponse",
    "actionmailbox",
    "actionmailbox::base",
    "actionmailbox::basecontroller",
    "actionmailbox::callbacks",
    "actionmailbox::engine",
    "actionmailbox::inboundemail",
    "actionmailbox::inboundemail::incineratable",
    "actionmailbox::inboundemail::incineratable::incineration",
    "actionmailbox::inboundemail::messageid",
    "actionmailbox::inboundemail::routable",
    "actionmailbox::inboundemails",
    "actionmailbox::incinerationjob",
    "actionmailbox::ingresses",
    "actionmailbox::ingresses::mailgun",
    "actionmailbox::ingresses::mailgun::inboundemailscontroller",
    "actionmailbox::ingresses::mailgun::inboundemailscontroller::authenticator",
    "actionmailbox::ingresses::mandrill",
    "actionmailbox::ingresses::mandrill::inboundemailscontroller",
    "actionmailbox::ingresses::mandrill::inboundemailscontroller::authenticator",
    "actionmailbox::ingresses::postmark",
    "actionmailbox::ingresses::postmark::inboundemailscontroller",
    "actionmailbox::ingresses::relay",
    "actionmailbox::ingresses::relay::inboundemailscontroller",
    "actionmailbox::ingresses::sendgrid",
    "actionmailbox::ingresses::sendgrid::inboundemailscontroller",
    "actionmailbox::relayer",
    "actionmailbox::relayer::result",
    "actionmailbox::router",
    "actionmailbox::router::route",
    "actionmailbox::router::routingerror",
    "actionmailbox::routing",
    "actionmailbox::routingjob",
    "actionmailbox::testcase",
    "actionmailbox::testhelper",
    "actionmailbox::version",
    "actionmailer",
    "actionmailer::base",
    "actionmailer::base::lateattachmentsproxy",
    "actionmailer::collector",
    "actionmailer::deliverymethods",
    "actionmailer::deliverymethods::classmethods",
    "actionmailer::inlinepreviewinterceptor",
    "actionmailer::logsubscriber",
    "actionmailer::mailhelper",
    "actionmailer::messagedelivery",
    "actionmailer::noninferrablemailererror",
    "actionmailer::parameterized",
    "actionmailer::parameterized::classmethods",
    "actionmailer::preview",
    "actionmailer::previews",
    "actionmailer::previews::classmethods",
    "actionmailer::rescuable",
    "actionmailer::testcase",
    "actionmailer::testcase::behavior",
    "actionmailer::testcase::behavior::classmethods",
    "actionmailer::testcase::cleartestdeliveries",
    "actionmailer::testhelper",
    "actionmailer::version",
    "actiontext",
    "actiontext::attachable",
    "actiontext::attachables",
    "actiontext::attachables::contentattachment",
    "actiontext::attachables::missingattachable",
    "actiontext::attachables::remoteimage",
    "actiontext::attachment",
    "actiontext::attachmentgallery",
    "actiontext::attachments",
    "actiontext::attachments::caching",
    "actiontext::attachments::minification",
    "actiontext::attachments::trixconversion",
    "actiontext::attribute",
    "actiontext::content",
    "actiontext::contenthelper",
    "actiontext::engine",
    "actiontext::fixtureset",
    "actiontext::fragment",
    "actiontext::htmlconversion",
    "actiontext::plaintextconversion",
    "actiontext::richtext",
    "actiontext::serialization",
    "actiontext::systemtesthelper",
    "actiontext::taghelper",
    "actiontext::trixattachment",
    "actiontext::version",
    "actionview",
    "actionview::abstractrenderer",
    "actionview::abstractrenderer::renderedcollection",
    "actionview::abstractrenderer::renderedcollection::emptycollection",
    "actionview::base",
    "actionview::cacheexpiry",
    "actionview::cacheexpiry::executor",
    "actionview::context",
    "actionview::digestor",
    "actionview::digestor::injected",
    "actionview::digestor::missing",
    "actionview::digestor::node",
    "actionview::digestor::nulllogger",
    "actionview::digestor::partial",
    "actionview::filesystemresolver",
    "actionview::fixtureresolver",
    "actionview::helpers",
    "actionview::helpers::activemodelhelper",
    "actionview::helpers::activemodelinstancetag",
    "actionview::helpers::assettaghelper",
    "actionview::helpers::asseturlhelper",
    "actionview::helpers::atomfeedhelper",
    "actionview::helpers::cachehelper",
    "actionview::helpers::capturehelper",
    "actionview::helpers::csphelper",
    "actionview::helpers::csrfhelper",
    "actionview::helpers::datehelper",
    "actionview::helpers::debughelper",
    "actionview::helpers::formbuilder",
    "actionview::helpers::formhelper",
    "actionview::helpers::formoptionshelper",
    "actionview::helpers::formtaghelper",
    "actionview::helpers::javascripthelper",
    "actionview::helpers::numberhelper",
    "actionview::helpers::numberhelper::invalidnumbererror",
    "actionview::helpers::outputsafetyhelper",
    "actionview::helpers::renderinghelper",
    "actionview::helpers::sanitizehelper",
    "actionview::helpers::taghelper",
    "actionview::helpers::tags",
    "actionview::helpers::tags::actiontext",
    "actionview::helpers::texthelper",
    "actionview::helpers::translationhelper",
    "actionview::helpers::urlhelper",
    "actionview::helpers::urlhelper::classmethods",
    "actionview::layouts",
    "actionview::layouts::classmethods",
    "actionview::logsubscriber",
    "actionview::lookupcontext",
    "actionview::lookupcontext::detailscache",
    "actionview::lookupcontext::viewpaths",
    "actionview::nullresolver",
    "actionview::partialiteration",
    "actionview::partialrenderer",
    "actionview::recordidentifier",
    "actionview::renderer",
    "actionview::rendering",
    "actionview::rendering::classmethods",
    "actionview::resolver",
    "actionview::resolver::cache",
    "actionview::resolver::cache::smallcache",
    "actionview::resolver::path",
    "actionview::routingurlfor",
    "actionview::syntaxerrorintemplate",
    "actionview::template",
    "actionview::template::handlers",
    "actionview::template::handlers::builder",
    "actionview::template::handlers::erb",
    "actionview::template::handlers::html",
    "actionview::template::handlers::raw",
    "actionview::template::sources",
    "actionview::template::sources::file",
    "actionview::template::types",
    "actionview::template::types::type",
    "actionview::testcase",
    "actionview::testcase::behavior",
    "actionview::testcase::behavior::classmethods",
    "actionview::testcase::behavior::locals",
    "actionview::testcase::behavior::renderedviewscollection",
    "actionview::testcase::testcontroller",
    "actionview::unboundtemplate",
    "actionview::version",
    "actionview::viewpaths",
    "actionview::viewpaths::classmethods",
    "activejob",
    "activejob::arguments",
    "activejob::arguments::hash",
    "activejob::base",
    "activejob::callbacks",
    "activejob::callbacks::classmethods",
    "activejob::core",
    "activejob::core::classmethods",
    "activejob::deserializationerror",
    "activejob::enqueuing",
    "activejob::enqueuing::classmethods",
    "activejob::exceptions",
    "activejob::exceptions::classmethods",
    "activejob::execution",
    "activejob::execution::classmethods",
    "activejob::queueadapter",
    "activejob::queueadapter::classmethods",
    "activejob::queueadapters",
    "activejob::queueadapters::asyncadapter",
    "activejob::queueadapters::backburneradapter",
    "activejob::queueadapters::delayedjobadapter",
    "activejob::queueadapters::inlineadapter",
    "activejob::queueadapters::queadapter",
    "activejob::queueadapters::queueclassicadapter",
    "activejob::queueadapters::resqueadapter",
    "activejob::queueadapters::sidekiqadapter",
    "activejob::queueadapters::sneakersadapter",
    "activejob::queueadapters::suckerpunchadapter",
    "activejob::queueadapters::testadapter",
    "activejob::queuename",
    "activejob::queuename::classmethods",
    "activejob::queuepriority",
    "activejob::queuepriority::classmethods",
    "activejob::serializationerror",
    "activejob::serializers",
    "activejob::serializers::objectserializer",
    "activejob::testcase",
    "activejob::testhelper",
    "activejob::testhelper::testqueueadapter",
    "activejob::testhelper::testqueueadapter::classmethods",
    "activejob::version",
    "activemodel",
    "activemodel::attributeassignment",
    "activemodel::attributemethods",
    "activemodel::attributemethods::classmethods",
    "activemodel::attributemethods::classmethods::codegenerator",
    "activemodel::attributes",
    "activemodel::attributes::classmethods",
    "activemodel::callbacks",
    "activemodel::conversion",
    "activemodel::deprecationhandlingdetailshash",
    "activemodel::deprecationhandlingmessagearray",
    "activemodel::deprecationhandlingmessagehash",
    "activemodel::dirty",
    "activemodel::error",
    "activemodel::errors",
    "activemodel::forbiddenattributeserror",
    "activemodel::lint",
    "activemodel::lint::tests",
    "activemodel::missingattributeerror",
    "activemodel::model",
    "activemodel::name",
    "activemodel::naming",
    "activemodel::nestederror",
    "activemodel::rangeerror",
    "activemodel::securepassword",
    "activemodel::securepassword::classmethods",
    "activemodel::securepassword::instancemethodsonactivation",
    "activemodel::serialization",
    "activemodel::serializers",
    "activemodel::serializers::json",
    "activemodel::strictvalidationfailed",
    "activemodel::translation",
    "activemodel::type",
    "activemodel::type::boolean",
    "activemodel::type::helpers",
    "activemodel::type::helpers::acceptsmultiparametertime",
    "activemodel::type::helpers::acceptsmultiparametertime::instancemethods",
    "activemodel::type::helpers::mutable",
    "activemodel::type::helpers::numeric",
    "activemodel::type::helpers::timevalue",
    "activemodel::type::helpers::timezone",
    "activemodel::type::registration",
    "activemodel::type::registry",
    "activemodel::type::value",
    "activemodel::unknownattributeerror",
    "activemodel::version",
    "activemodel::validationerror",
    "activemodel::validations",
    "activemodel::validations::acceptancevalidator",
    "activemodel::validations::acceptancevalidator::lazilydefineattributes",
    "activemodel::validations::callbacks",
    "activemodel::validations::callbacks::classmethods",
    "activemodel::validations::classmethods",
    "activemodel::validations::helpermethods",
    "activemodel::validator",
    "activerecord",
    "activerecord::activejobrequirederror",
    "activerecord::activerecorderror",
    "activerecord::adapternotfound",
    "activerecord::adapternotspecified",
    "activerecord::adaptertimeout",
    "activerecord::aggregations",
    "activerecord::aggregations::classmethods",
    "activerecord::associationnotfounderror",
    "activerecord::associationnotfounderror::correction",
    "activerecord::associationtypemismatch",
    "activerecord::associations",
    "activerecord::associations::classmethods",
    "activerecord::associations::collectionproxy",
    "activerecord::attributeassignment",
    "activerecord::attributeassignmenterror",
    "activerecord::attributemethods",
    "activerecord::attributemethods::beforetypecast",
    "activerecord::attributemethods::classmethods",
    "activerecord::attributemethods::dirty",
    "activerecord::attributemethods::primarykey",
    "activerecord::attributemethods::primarykey::classmethods",
    "activerecord::attributemethods::query",
    "activerecord::attributemethods::read",
    "activerecord::attributemethods::serialization",
    "activerecord::attributemethods::serialization::classmethods",
    "activerecord::attributemethods::serialization::columnnotserializableerror",
    "activerecord::attributemethods::timezoneconversion",
    "activerecord::attributemethods::write",
    "activerecord::attributes",
    "activerecord::attributes::classmethods",
    "activerecord::autosaveassociation",
    "activerecord::base",
    "activerecord::batches",
    "activerecord::batches::batchenumerator",
    "activerecord::calculations",
    "activerecord::callbacks",
    "activerecord::callbacks::classmethods",
    "activerecord::configurationerror",
    "activerecord::connectionadapters",
    "activerecord::connectionadapters::abstractadapter",
    "activerecord::connectionadapters::abstractadapter::version",
    "activerecord::connectionadapters::abstractmysqladapter",
    "activerecord::connectionadapters::column",
    "activerecord::connectionadapters::columnmethods",
    "activerecord::connectionadapters::connectionhandler",
    "activerecord::connectionadapters::connectionpool",
    "activerecord::connectionadapters::connectionpool::queue",
    "activerecord::connectionadapters::connectionpool::reaper",
    "activerecord::connectionadapters::databaselimits",
    "activerecord::connectionadapters::databasestatements",
    "activerecord::connectionadapters::deduplicable",
    "activerecord::connectionadapters::deduplicable::classmethods",
    "activerecord::connectionadapters::mysql",
    "activerecord::connectionadapters::mysql::columnmethods",
    "activerecord::connectionadapters::mysql::databasestatements",
    "activerecord::connectionadapters::mysql::table",
    "activerecord::connectionadapters::mysql::tabledefinition",
    "activerecord::connectionadapters::mysql2adapter",
    "activerecord::connectionadapters::nullcolumn",
    "activerecord::connectionadapters::postgresql",
    "activerecord::connectionadapters::postgresql::altertable",
    "activerecord::connectionadapters::postgresql::columnmethods",
    "activerecord::connectionadapters::postgresql::databasestatements",
    "activerecord::connectionadapters::postgresql::oid",
    "activerecord::connectionadapters::postgresql::oid::bit",
    "activerecord::connectionadapters::postgresql::oid::bit::data",
    "activerecord::connectionadapters::postgresql::quoting",
    "activerecord::connectionadapters::postgresql::schemastatements",
    "activerecord::connectionadapters::postgresql::table",
    "activerecord::connectionadapters::postgresql::tabledefinition",
    "activerecord::connectionadapters::postgresql::typemetadata",
    "activerecord::connectionadapters::postgresqladapter",
    "activerecord::connectionadapters::querycache",
    "activerecord::connectionadapters::querycache::connectionpoolconfiguration",
    "activerecord::connectionadapters::quoting",
    "activerecord::connectionadapters::realtransaction",
    "activerecord::connectionadapters::sqlite3",
    "activerecord::connectionadapters::sqlite3::databasestatements",
    "activerecord::connectionadapters::sqlite3::tabledefinition",
    "activerecord::connectionadapters::sqlite3adapter",
    "activerecord::connectionadapters::savepointtransaction",
    "activerecord::connectionadapters::savepoints",
    "activerecord::connectionadapters::schemacache",
    "activerecord::connectionadapters::schemastatements",
    "activerecord::connectionadapters::sqltypemetadata",
    "activerecord::connectionadapters::table",
    "activerecord::connectionadapters::tabledefinition",
    "activerecord::connectionadapters::transactionstate",
    "activerecord::connectionhandling",
    "activerecord::connectionnotestablished",
    "activerecord::connectiontimeouterror",
    "activerecord::core",
    "activerecord::core::classmethods",
    "activerecord::core::inspectionmask",
    "activerecord::countercache",
    "activerecord::countercache::classmethods",
    "activerecord::dangerousattributeerror",
    "activerecord::databasealreadyexists",
    "activerecord::databaseconfigurations",
    "activerecord::databaseconfigurations::hashconfig",
    "activerecord::databaseconfigurations::invalidconfigurationerror",
    "activerecord::databaseconfigurations::urlconfig",
    "activerecord::deadlocked",
    "activerecord::delegatedtype",
    "activerecord::destroyassociationasyncerror",
    "activerecord::destroyassociationasyncjob",
    "activerecord::dynamicmatchers",
    "activerecord::dynamicmatchers::findby",
    "activerecord::dynamicmatchers::findbybang",
    "activerecord::dynamicmatchers::method",
    "activerecord::eagerloadpolymorphicerror",
    "activerecord::enum",
    "activerecord::environmentmismatcherror",
    "activerecord::exclusiveconnectiontimeouterror",
    "activerecord::explain",
    "activerecord::findermethods",
    "activerecord::fixtureset",
    "activerecord::fixtureset::classcache",
    "activerecord::hasmanythroughassociationnotfounderror",
    "activerecord::hasmanythroughassociationnotfounderror::correction",
    "activerecord::immutablerelation",
    "activerecord::inheritance",
    "activerecord::inheritance::classmethods",
    "activerecord::integration",
    "activerecord::integration::classmethods",
    "activerecord::invalidforeignkey",
    "activerecord::inverseofassociationnotfounderror",
    "activerecord::inverseofassociationnotfounderror::correction",
    "activerecord::irreversiblemigration",
    "activerecord::irreversibleordererror",
    "activerecord::lockwaittimeout",
    "activerecord::locking",
    "activerecord::locking::optimistic",
    "activerecord::locking::optimistic::classmethods",
    "activerecord::locking::pessimistic",
    "activerecord::logsubscriber",
    "activerecord::middleware",
    "activerecord::middleware::databaseselector",
    "activerecord::migration",
    "activerecord::migration::checkpending",
    "activerecord::migration::commandrecorder",
    "activerecord::migration::compatibility",
    "activerecord::migration::compatibility::v4_2",
    "activerecord::migration::compatibility::v4_2::tabledefinition",
    "activerecord::migration::compatibility::v5_0",
    "activerecord::migration::compatibility::v5_0::tabledefinition",
    "activerecord::migration::compatibility::v5_1",
    "activerecord::migration::compatibility::v5_2",
    "activerecord::migration::compatibility::v5_2::commandrecorder",
    "activerecord::migration::compatibility::v5_2::tabledefinition",
    "activerecord::migration::compatibility::v6_0",
    "activerecord::migration::compatibility::v6_0::referencedefinition",
    "activerecord::migration::compatibility::v6_0::tabledefinition",
    "activerecord::mismatchedforeignkey",
    "activerecord::modelschema",
    "activerecord::modelschema::classmethods",
    "activerecord::multiparameterassignmenterrors",
    "activerecord::nestedattributes",
    "activerecord::nestedattributes::classmethods",
    "activerecord::nestedattributes::toomanyrecords",
    "activerecord::nodatabaseerror",
    "activerecord::notouching",
    "activerecord::notouching::classmethods",
    "activerecord::notnullviolation",
    "activerecord::persistence",
    "activerecord::persistence::classmethods",
    "activerecord::predicatebuilder",
    "activerecord::predicatebuilder::basehandler",
    "activerecord::preparedstatementcacheexpired",
    "activerecord::preparedstatementinvalid",
    "activerecord::queryaborted",
    "activerecord::querycache",
    "activerecord::querycache::classmethods",
    "activerecord::querycanceled",
    "activerecord::querymethods",
    "activerecord::querymethods::wherechain",
    "activerecord::querying",
    "activerecord::rangeerror",
    "activerecord::readonlyerror",
    "activerecord::readonlyrecord",
    "activerecord::readonlyattributes",
    "activerecord::readonlyattributes::classmethods",
    "activerecord::recordinvalid",
    "activerecord::recordnotdestroyed",
    "activerecord::recordnotfound",
    "activerecord::recordnotsaved",
    "activerecord::recordnotunique",
    "activerecord::reflection",
    "activerecord::reflection::classmethods",
    "activerecord::reflection::macroreflection",
    "activerecord::relation",
    "activerecord::relation::recordfetchwarning",
    "activerecord::result",
    "activerecord::rollback",
    "activerecord::sanitization",
    "activerecord::sanitization::classmethods",
    "activerecord::schema",
    "activerecord::scoping",
    "activerecord::scoping::default",
    "activerecord::scoping::default::classmethods",
    "activerecord::scoping::named",
    "activerecord::scoping::named::classmethods",
    "activerecord::securetoken",
    "activerecord::securetoken::classmethods",
    "activerecord::securetoken::minimumlengtherror",
    "activerecord::serialization",
    "activerecord::serializationfailure",
    "activerecord::serializationtypemismatch",
    "activerecord::signedid",
    "activerecord::signedid::classmethods",
    "activerecord::spawnmethods",
    "activerecord::staleobjecterror",
    "activerecord::statementcache",
    "activerecord::statementcache::partialquerycollector",
    "activerecord::statementinvalid",
    "activerecord::statementtimeout",
    "activerecord::store",
    "activerecord::store::classmethods",
    "activerecord::strictloadingviolationerror",
    "activerecord::subclassnotfound",
    "activerecord::suppressor",
    "activerecord::suppressor::classmethods",
    "activerecord::tablenotspecified",
    "activerecord::tasks",
    "activerecord::tasks::databasetasks",
    "activerecord::testfixtures",
    "activerecord::testfixtures::classmethods",
    "activerecord::timestamp",
    "activerecord::transactionisolationerror",
    "activerecord::transactionrollbackerror",
    "activerecord::transactions",
    "activerecord::transactions::classmethods",
    "activerecord::translation",
    "activerecord::type",
    "activerecord::type::adapterspecificregistry",
    "activerecord::type::biginteger",
    "activerecord::type::binary",
    "activerecord::type::boolean",
    "activerecord::type::date",
    "activerecord::type::datetime",
    "activerecord::type::decimal",
    "activerecord::type::decorationregistration",
    "activerecord::type::float",
    "activerecord::type::immutablestring",
    "activerecord::type::integer",
    "activerecord::type::internal",
    "activerecord::type::internal::timezone",
    "activerecord::type::json",
    "activerecord::type::registration",
    "activerecord::type::string",
    "activerecord::type::time",
    "activerecord::type::value",
    "activerecord::typeconflicterror",
    "activerecord::unknownattributeerror",
    "activerecord::unknownattributereference",
    "activerecord::unknownprimarykey",
    "activerecord::version",
    "activerecord::validations",
    "activerecord::validations::classmethods",
    "activerecord::valuetoolong",
    "activerecord::wrappeddatabaseexception",
    "activestorage",
    "activestorage::analyzejob",
    "activestorage::analyzer",
    "activestorage::analyzer::imageanalyzer",
    "activestorage::analyzer::videoanalyzer",
    "activestorage::attached",
    "activestorage::attached::many",
    "activestorage::attached::model",
    "activestorage::attached::one",
    "activestorage::attachment",
    "activestorage::basecontroller",
    "activestorage::basejob",
    "activestorage::blob",
    "activestorage::blob::analyzable",
    "activestorage::blob::identifiable",
    "activestorage::blob::representable",
    "activestorage::blobs",
    "activestorage::blobs::proxycontroller",
    "activestorage::blobs::redirectcontroller",
    "activestorage::directuploadscontroller",
    "activestorage::diskcontroller",
    "activestorage::error",
    "activestorage::filenotfounderror",
    "activestorage::filename",
    "activestorage::integrityerror",
    "activestorage::invariableerror",
    "activestorage::logsubscriber",
    "activestorage::mirrorjob",
    "activestorage::preview",
    "activestorage::preview::unprocessederror",
    "activestorage::previewer",
    "activestorage::previewer::mupdfpreviewer",
    "activestorage::previewer::popplerpdfpreviewer",
    "activestorage::previewer::videopreviewer",
    "activestorage::purgejob",
    "activestorage::reflection",
    "activestorage::reflection::activerecordextensions",
    "activestorage::reflection::activerecordextensions::classmethods",
    "activestorage::representations",
    "activestorage::representations::proxycontroller",
    "activestorage::representations::redirectcontroller",
    "activestorage::service",
    "activestorage::service::azurestorageservice",
    "activestorage::service::diskservice",
    "activestorage::service::gcsservice",
    "activestorage::service::mirrorservice",
    "activestorage::service::s3service",
    "activestorage::setcurrent",
    "activestorage::transformers",
    "activestorage::transformers::imageprocessingtransformer",
    "activestorage::transformers::transformer",
    "activestorage::unpreviewableerror",
    "activestorage::unrepresentableerror",
    "activestorage::version",
    "activestorage::variant",
    "activestorage::variantrecord",
    "activestorage::variantwithrecord",
    "activestorage::variation",
    "activesupport",
    "activesupport::actionableerror",
    "activesupport::actionableerror::classmethods",
    "activesupport::actionableerror::nonactionable",
    "activesupport::arrayinquirer",
    "activesupport::autoload",
    "activesupport::backtracecleaner",
    "activesupport::benchmarkable",
    "activesupport::cache",
    "activesupport::cache::connectionpoollike",
    "activesupport::cache::filestore",
    "activesupport::cache::memcachestore",
    "activesupport::cache::memorystore",
    "activesupport::cache::memorystore::default_coder",
    "activesupport::cache::nullstore",
    "activesupport::cache::rediscachestore",
    "activesupport::cache::store",
    "activesupport::cache::strategy",
    "activesupport::cache::strategy::localcache",
    "activesupport::cache::strategy::localcache::localstore",
    "activesupport::cachingkeygenerator",
    "activesupport::callbacks",
    "activesupport::callbacks::classmethods",
    "activesupport::callbacks::conditionals",
    "activesupport::callbacks::conditionals::value",
    "activesupport::callbacks::filters",
    "activesupport::callbacks::filters::after",
    "activesupport::callbacks::filters::before",
    "activesupport::comparewithrange",
    "activesupport::concern",
    "activesupport::concurrency",
    "activesupport::concurrency::loadinterlockawaremonitor",
    "activesupport::concurrency::sharelock",
    "activesupport::configurable",
    "activesupport::configurable::classmethods",
    "activesupport::configurable::configuration",
    "activesupport::configurationfile",
    "activesupport::configurationfile::formaterror",
    "activesupport::currentattributes",
    "activesupport::dependencies",
    "activesupport::dependencies::classcache",
    "activesupport::dependencies::interlock",
    "activesupport::dependencies::loadable",
    "activesupport::dependencies::watchstack",
    "activesupport::dependencies::zeitwerkintegration",
    "activesupport::dependencies::zeitwerkintegration::decorations",
    "activesupport::dependencies::zeitwerkintegration::inflector",
    "activesupport::dependencies::zeitwerkintegration::requiredependency",
    "activesupport::deprecation",
    "activesupport::deprecation::behavior",
    "activesupport::deprecation::deprecatedconstantaccessor",
    "activesupport::deprecation::deprecatedconstantproxy",
    "activesupport::deprecation::deprecatedinstancevariableproxy",
    "activesupport::deprecation::deprecatedobjectproxy",
    "activesupport::deprecation::disallowed",
    "activesupport::deprecation::methodwrapper",
    "activesupport::deprecation::reporting",
    "activesupport::deprecationexception",
    "activesupport::descendantstracker",
    "activesupport::duration",
    "activesupport::duration::iso8601parser",
    "activesupport::duration::iso8601parser::parsingerror",
    "activesupport::encryptedconfiguration",
    "activesupport::encryptedfile",
    "activesupport::encryptedfile::invalidkeylengtherror",
    "activesupport::encryptedfile::missingcontenterror",
    "activesupport::encryptedfile::missingkeyerror",
    "activesupport::eventedfileupdatechecker",
    "activesupport::eventedfileupdatechecker::core",
    "activesupport::executionwrapper",
    "activesupport::executor",
    "activesupport::fileupdatechecker",
    "activesupport::forktracker",
    "activesupport::forktracker::coreext",
    "activesupport::forktracker::coreextprivate",
    "activesupport::gzip",
    "activesupport::gzip::stream",
    "activesupport::hashwithindifferentaccess",
    "activesupport::inflector",
    "activesupport::inflector::inflections",
    "activesupport::inflector::inflections::uncountables",
    "activesupport::inheritableoptions",
    "activesupport::json",
    "activesupport::keygenerator",
    "activesupport::lazyloadhooks",
    "activesupport::logsubscriber",
    "activesupport::logsubscriber::testhelper",
    "activesupport::logsubscriber::testhelper::mocklogger",
    "activesupport::logger",
    "activesupport::logger::simpleformatter",
    "activesupport::loggersilence",
    "activesupport::messageencryptor",
    "activesupport::messageencryptor::invalidmessage",
    "activesupport::messageverifier",
    "activesupport::messageverifier::invalidsignature",
    "activesupport::messages",
    "activesupport::messages::rotator",
    "activesupport::messages::rotator::encryptor",
    "activesupport::messages::rotator::verifier",
    "activesupport::multibyte",
    "activesupport::multibyte::chars",
    "activesupport::multibyte::unicode",
    "activesupport::notifications",
    "activesupport::notifications::event",
    "activesupport::notifications::fanout",
    "activesupport::notifications::fanout::subscribers",
    "activesupport::notifications::fanout::subscribers::eventobject",
    "activesupport::notifications::instrumenter",
    "activesupport::numberhelper",
    "activesupport::numericwithformat",
    "activesupport::orderedhash",
    "activesupport::orderedoptions",
    "activesupport::parameterfilter",
    "activesupport::perthreadregistry",
    "activesupport::proxyobject",
    "activesupport::rangewithformat",
    "activesupport::reloader",
    "activesupport::rescuable",
    "activesupport::rescuable::classmethods",
    "activesupport::safebuffer",
    "activesupport::safebuffer::safeconcaterror",
    "activesupport::securecomparerotator",
    "activesupport::securityutils",
    "activesupport::stringinquirer",
    "activesupport::subscriber",
    "activesupport::taggedlogging",
    "activesupport::testcase",
    "activesupport::testing",
    "activesupport::testing::assertions",
    "activesupport::testing::constantlookup",
    "activesupport::testing::declarative",
    "activesupport::testing::filefixtures",
    "activesupport::testing::isolation",
    "activesupport::testing::isolation::forking",
    "activesupport::testing::isolation::subprocess",
    "activesupport::testing::parallelization",
    "activesupport::testing::parallelization::server",
    "activesupport::testing::parallelization::worker",
    "activesupport::testing::setupandteardown",
    "activesupport::testing::setupandteardown::classmethods",
    "activesupport::testing::timehelpers",
    "activesupport::timewithzone",
    "activesupport::timezone",
    "activesupport::version",
    "activesupport::xmlconverter",
    "activesupport::xmlconverter::disallowedtype",
    "activesupport::xmlmini",
    "activesupport::xmlmini_libxmlsax",
    "activesupport::xmlmini_libxmlsax::hashbuilder",
    "activesupport::xmlmini_nokogirisax",
    "activesupport::xmlmini_nokogirisax::hashbuilder",
    "arel",
    "arel::nodes",
    "array",
    "benchmark",
    "bigdecimal",
    "class",
    "date",
    "dateandtime",
    "dateandtime::calculations",
    "dateandtime::compatibility",
    "dateandtime::zones",
    "datetime",
    "delegator",
    "digest",
    "digest::uuid",
    "erb",
    "erb::util",
    "enumerable",
    "exception",
    "falseclass",
    "file",
    "float",
    "hash",
    "io",
    "integer",
    "kernel",
    "loaderror",
    "mail",
    "mail::address",
    "mail::message",
    "method",
    "mime",
    "mime::alltype",
    "mime::mimes",
    "mime::nulltype",
    "mime::type",
    "mime::type::invalidmimetype",
    "minitest",
    "minitest::backtracefilterwithfallback",
    "minitest::suppressedsummaryreporter",
    "module",
    "module::concerning",
    "module::delegationerror",
    "nameerror",
    "nilclass",
    "numeric",
    "object",
    "process",
    "rails",
    "rails::api",
    "rails::api::edgetask",
    "rails::api::repotask",
    "rails::api::stabletask",
    "rails::api::task",
    "rails::appbuilder",
    "rails::application",
    "rails::application::bootstrap",
    "rails::application::configuration",
    "rails::application::defaultmiddlewarestack",
    "rails::application::finisher",
    "rails::application::finisher::interlockhook",
    "rails::application::finisher::mutexhook",
    "rails::application::routesreloader",
    "rails::backtracecleaner",
    "rails::command",
    "rails::command::actions",
    "rails::command::base",
    "rails::command::db",
    "rails::command::db::system",
    "rails::command::helpers",
    "rails::command::helpers::editor",
    "rails::conductor",
    "rails::configuration",
    "rails::configuration::middlewarestackproxy",
    "rails::console",
    "rails::console::backtracecleaner",
    "rails::consolemethods",
    "rails::dbconsole",
    "rails::engine",
    "rails::engine::configuration",
    "rails::engine::railties",
    "rails::engine::updater",
    "rails::generators",
    "rails::generators::actions",
    "rails::generators::activemodel",
    "rails::generators::appbase",
    "rails::generators::appbase::gemfileentry",
    "rails::generators::appgenerator",
    "rails::generators::base",
    "rails::generators::benchmarkgenerator",
    "rails::generators::db",
    "rails::generators::db::system",
    "rails::generators::migration",
    "rails::generators::namedbase",
    "rails::generators::testcase",
    "rails::generators::testing",
    "rails::generators::testing::assertions",
    "rails::generators::testing::behaviour",
    "rails::generators::testing::behaviour::classmethods",
    "rails::generators::testing::setupandteardown",
    "rails::info",
    "rails::initializable",
    "rails::initializable::classmethods",
    "rails::initializable::collection",
    "rails::initializable::initializer",
    "rails::paths",
    "rails::paths::path",
    "rails::paths::root",
    "rails::pluginbuilder",
    "rails::rack",
    "rails::rack::logger",
    "rails::rails",
    "rails::rails::conductor",
    "rails::rails::conductor::actionmailbox",
    "rails::rails::conductor::actionmailbox::inboundemails",
    "rails::rails::conductor::actionmailbox::inboundemails::sourcescontroller",
    "rails::rails::conductor::actionmailbox::inboundemailscontroller",
    "rails::rails::conductor::actionmailbox::reroutescontroller",
    "rails::railtie",
    "rails::railtie::configurable",
    "rails::railtie::configurable::classmethods",
    "rails::railtie::configuration",
    "rails::secrets",
    "rails::secrets::missingkeyerror",
    "rails::server",
    "rails::server::options",
    "rails::sourceannotationextractor",
    "rails::sourceannotationextractor::annotation",
    "rails::version",
    "range",
    "regexp",
    "securerandom",
    "string",
    "symbol",
    "time",
    "trueclass",
    "uri",
    "unboundmethod",
    "activemodel::name#!~()",
    "activesupport::duration#%()",
    "activesupport::safebuffer#%()",
    "activesupport::duration#*()",
    "activesupport::safebuffer#*()",
    "activesupport::duration#+()",
    "activesupport::safebuffer#+()",
    "activesupport::timewithzone#+()",
    "rails::initializable::collection#+()",
    "activesupport::duration#-()",
    "activesupport::timewithzone#-()",
    "rails::engine::railties#-()",
    "time#-()",
    "activerecord::connectionadapters::deduplicable#-@()",
    "activesupport::duration#/()",
    "activemodel::attributemethods::classmethods::codegenerator#<<()",
    "activemodel::deprecationhandlingmessagearray#<<()",
    "activerecord::associations::collectionproxy#<<()",
    "activerecord::statementcache::partialquerycollector#<<()",
    "activesupport::inflector::inflections::uncountables#<<()",
    "activesupport::notifications::event#<<()",
    "activesupport::safebuffer#<<()",
    "activesupport::testing::parallelization::server#<<()",
    "mime::mimes#<<()",
    "rails::paths::path#<<()",
    "activemodel::name#<=>()",
    "activerecord::connectionadapters::abstractadapter::version#<=>()",
    "activerecord::core#<=>()",
    "activestorage::filename#<=>()",
    "activesupport::duration#<=>()",
    "activesupport::timewithzone#<=>()",
    "activesupport::timezone#<=>()",
    "date#<=>()",
    "datetime#<=>()",
    "time#<=>()",
    "actioncontroller::parameters#==()",
    "actiondispatch::middlewarestack::middleware#==()",
    "actiontext::content#==()",
    "actionview::filesystemresolver#==()",
    "actionview::template::types::type#==()",
    "activemodel::name#==()",
    "activemodel::type::value#==()",
    "activemodel::validations::acceptancevalidator::lazilydefineattributes#==()",
    "activerecord::associations::collectionproxy#==()",
    "activerecord::core#==()",
    "activerecord::reflection::macroreflection#==()",
    "activerecord::relation#==()",
    "activesupport::duration#==()",
    "mail::address#==()",
    "mime::type#==()",
    "activemodel::name#===()",
    "activesupport::comparewithrange#===()",
    "mime::type#===()",
    "time::===()",
    "activemodel::name#=~()",
    "activesupport::timezone#=~()",
    "mime::type#=~()",
    "actiondispatch::request#get()",
    "actiondispatch::request#post()",
    "actioncontroller::parameters#[]()",
    "actiondispatch::flash::flashhash#[]()",
    "actiondispatch::http::headers#[]()",
    "actiondispatch::middlewarestack#[]()",
    "actionview::template::types::[]()",
    "actionview::template::types::type::[]()",
    "activemodel::errors#[]()",
    "activerecord::attributemethods#[]()",
    "activerecord::connectionadapters::tabledefinition#[]()",
    "activerecord::databaseconfigurations#[]()",
    "activerecord::fixtureset#[]()",
    "activerecord::fixtureset::classcache#[]()",
    "activerecord::migration::[]()",
    "activerecord::result#[]()",
    "activesupport::dependencies::classcache#[]()",
    "activesupport::hashwithindifferentaccess::[]()",
    "activesupport::hashwithindifferentaccess#[]()",
    "activesupport::orderedoptions#[]()",
    "activesupport::safebuffer#[]()",
    "activesupport::timezone::[]()",
    "mime::[]()",
    "rails::paths::root#[]()",
    "actioncontroller::parameters#[]=()",
    "actiondispatch::flash::flashhash#[]=()",
    "actiondispatch::http::headers#[]=()",
    "actionmailer::base::lateattachmentsproxy#[]=()",
    "activemodel::deprecationhandlingmessagehash#[]=()",
    "activerecord::attributemethods#[]=()",
    "activerecord::fixtureset#[]=()",
    "activesupport::hashwithindifferentaccess#[]=()",
    "activesupport::orderedoptions#[]=()",
    "activesupport::safebuffer#[]=()",
    "rails::paths::root#[]=()",
    "actiontext::serialization#_dump()",
    "activesupport::orderedoptions#_get()",
    "abstractcontroller::helpers#_helpers()",
    "actionview::rendering::classmethods#_helpers()",
    "abstractcontroller::helpers::classmethods#_helpers_for_modification()",
    "abstractcontroller::callbacks::classmethods#_insert_callbacks()",
    "actionview::context#_layout_for()",
    "actionview::helpers::renderinghelper#_layout_for()",
    "abstractcontroller::rendering#_normalize_args()",
    "abstractcontroller::callbacks::classmethods#_normalize_callback_options()",
    "abstractcontroller::rendering#_normalize_options()",
    "actionview::context#_prepare_context()",
    "abstractcontroller::rendering#_process_options()",
    "activerecord::attributemethods::read#_read_attribute()",
    "actioncontroller::renderers#_render_to_body_with_renderer()",
    "actioncontroller::renderers::_render_with_renderer_method_name()",
    "abstractcontroller::urlfor#_routes()",
    "abstractcontroller::urlfor::classmethods#_routes()",
    "actionview::rendering::classmethods#_routes()",
    "actionview::testcase::behavior#_routes()",
    "actiondispatch::routing::urlfor#_routes_context()",
    "actionview::base#_run()",
    "actionview::lookupcontext::detailscache#_set_detail()",
    "actioncontroller::paramswrapper::options::classmethods#_set_wrapper_options()",
    "actionview::testcase::behavior#_test_case()",
    "actionview::helpers::formbuilder::_to_partial_path()",
    "actionview::helpers::urlhelper::classmethods#_url_for_modules()",
    "actionview::viewpaths::classmethods#_view_paths()",
    "actionview::viewpaths::classmethods#_view_paths=()",
    "actiondispatch::routing::urlfor#_with_routes()",
    "actiondispatch::response#abort()",
    "abstractcontroller::base::abstract!()",
    "activerecord::inheritance::classmethods#abstract_class?()",
    "rails::railtie::abstract_railtie?()",
    "actiondispatch::testrequest#accept=()",
    "activestorage::analyzer::accept?()",
    "activestorage::analyzer::imageanalyzer::accept?()",
    "activestorage::analyzer::videoanalyzer::accept?()",
    "activestorage::previewer::accept?()",
    "activestorage::previewer::mupdfpreviewer::accept?()",
    "activestorage::previewer::popplerpdfpreviewer::accept?()",
    "activestorage::previewer::videopreviewer::accept?()",
    "actiondispatch::requestencoder::identityencoder#accept_header()",
    "actiondispatch::http::mimenegotiation#accepts()",
    "activerecord::nestedattributes::classmethods#accepts_nested_attributes_for()",
    "activerecord::attributemethods#accessed_fields()",
    "activerecord::type::json#accessor()",
    "activesupport::inflector::inflections#acronym()",
    "actioncontroller::metal::action()",
    "actiondispatch::routing::routewrapper#action()",
    "activesupport::actionableerror::classmethods#action()",
    "actiondispatch::testrequest#action=()",
    "actioncable::helpers::actioncablehelper#action_cable_meta_tag()",
    "actionview::layouts#action_has_layout?()",
    "abstractcontroller::base::action_methods()",
    "abstractcontroller::base#action_methods()",
    "abstractcontroller::urlfor::classmethods#action_methods()",
    "actioncable::channel::base::action_methods()",
    "abstractcontroller::base#action_name()",
    "activerecord::connectionadapters::abstractadapter#active?()",
    "activerecord::connectionadapters::mysql2adapter#active?()",
    "activerecord::connectionadapters::postgresqladapter#active?()",
    "activerecord::connectionadapters::sqlite3adapter#active?()",
    "activerecord::connectionadapters::connectionpool#active_connection?()",
    "activerecord::connectionadapters::connectionhandler#active_connections?()",
    "activesupport::testing::parallelization::server#active_workers?()",
    "object#acts_like?()",
    "date#acts_like_date?()",
    "datetime#acts_like_date?()",
    "string#acts_like_string?()",
    "activesupport::timewithzone#acts_like_time?()",
    "datetime#acts_like_time?()",
    "time#acts_like_time?()",
    "activerecord::databaseconfigurations::hashconfig#adapter()",
    "activerecord::connectionadapters::abstractadapter#adapter_name()",
    "actioncontroller::renderers::add()",
    "actiondispatch::http::headers#add()",
    "actionview::testcase::behavior::renderedviewscollection#add()",
    "activemodel::errors#add()",
    "activerecord::connectionadapters::connectionpool::queue#add()",
    "activerecord::connectionadapters::schemacache#add()",
    "activesupport::inflector::inflections::uncountables#add()",
    "rails::paths::root#add()",
    "activerecord::connectionadapters::schemastatements#add_belongs_to()",
    "activerecord::statementcache::partialquerycollector#add_bind()",
    "activerecord::statementcache::partialquerycollector#add_binds()",
    "actioncable::subscriptionadapter::postgresql::listener#add_channel()",
    "actioncable::subscriptionadapter::redis::listener#add_channel()",
    "actioncable::subscriptionadapter::subscribermap#add_channel()",
    "activerecord::connectionadapters::schemastatements#add_check_constraint()",
    "activerecord::connectionadapters::transactionstate#add_child()",
    "activerecord::connectionadapters::schemastatements#add_column()",
    "actionmailer::deliverymethods::classmethods#add_delivery_method()",
    "activesupport::subscriber::add_event_subscriber()",
    "activesupport::backtracecleaner#add_filter()",
    "actioncontroller::flash::classmethods#add_flash_types()",
    "activerecord::connectionadapters::schemastatements#add_foreign_key()",
    "activerecord::connectionadapters::schemastatements#add_index()",
    "activerecord::connectionadapters::schemastatements#add_reference()",
    "actioncontroller::add_renderer()",
    "actionmailbox::router#add_route()",
    "actionmailbox::router#add_routes()",
    "rails::generators::base::add_shebang_option!()",
    "activesupport::backtracecleaner#add_silencer()",
    "rails::generators::actions#add_source()",
    "actioncable::subscriptionadapter::async::asyncsubscribermap#add_subscriber()",
    "actioncable::subscriptionadapter::subscribermap#add_subscriber()",
    "actioncable::connection::taggedloggerproxy#add_tags()",
    "activerecord::connectionadapters::schemastatements#add_timestamps()",
    "activerecord::connectionadapters::databasestatements#add_transaction_record()",
    "activemodel::errors#added?()",
    "activesupport::timewithzone#advance()",
    "date#advance()",
    "datetime#advance()",
    "time#advance()",
    "actiondispatch::callbacks::after()",
    "activesupport::duration#after()",
    "rails::initializable::initializer#after()",
    "dateandtime::calculations#after?()",
    "abstractcontroller::callbacks::classmethods#after_action()",
    "rails::generators::appgenerator#after_bundle()",
    "activesupport::reloader::after_class_unload()",
    "activerecord::transactions::classmethods#after_commit()",
    "activerecord::callbacks::classmethods#after_create()",
    "activerecord::transactions::classmethods#after_create_commit()",
    "activerecord::callbacks::classmethods#after_destroy()",
    "activerecord::transactions::classmethods#after_destroy_commit()",
    "activejob::callbacks::classmethods#after_enqueue()",
    "activerecord::callbacks::classmethods#after_find()",
    "activesupport::testing::parallelization::worker#after_fork()",
    "activerecord::callbacks::classmethods#after_initialize()",
    "rails::railtie::configuration#after_initialize()",
    "activejob::callbacks::classmethods#after_perform()",
    "actionmailbox::callbacks#after_processing()",
    "activesupport::currentattributes::after_reset()",
    "activerecord::transactions::classmethods#after_rollback()",
    "activerecord::callbacks::classmethods#after_save()",
    "activerecord::transactions::classmethods#after_save_commit()",
    "actioncable::channel::callbacks::classmethods#after_subscribe()",
    "activesupport::testing::timehelpers#after_teardown()",
    "activerecord::callbacks::classmethods#after_touch()",
    "actioncable::channel::callbacks::classmethods#after_unsubscribe()",
    "activerecord::callbacks::classmethods#after_update()",
    "activerecord::transactions::classmethods#after_update_commit()",
    "activemodel::validations::callbacks::classmethods#after_validation()",
    "minitest::suppressedsummaryreporter#aggregated_results()",
    "activesupport::duration#ago()",
    "activesupport::timewithzone#ago()",
    "date#ago()",
    "datetime#ago()",
    "time#ago()",
    "actiondispatch::flash::flashhash#alert()",
    "actiondispatch::flash::flashhash#alert=()",
    "activemodel::attributemethods::classmethods#alias_attribute()",
    "module#alias_attribute()",
    "actioncontroller::mimeresponds::collector#all()",
    "actionmailer::collector#all()",
    "actionmailer::preview::all()",
    "activerecord::scoping::named::classmethods#all()",
    "activesupport::timezone::all()",
    "rails::generators::activemodel::all()",
    "mime::alltype#all?()",
    "mime::type#all?()",
    "activerecord::connectionadapters::connectionhandler#all_connection_pools()",
    "dateandtime::calculations#all_day()",
    "actioncontroller::helpers::classmethods#all_helpers_from_path()",
    "dateandtime::calculations#all_month()",
    "rails::paths::root#all_paths()",
    "dateandtime::calculations#all_quarter()",
    "dateandtime::calculations#all_week()",
    "dateandtime::calculations#all_year()",
    "activesupport::notifications::event#allocations()",
    "activesupport::deprecation::reporting#allow()",
    "activerecord::connectionadapters::databaselimits#allowed_index_name_length()",
    "activestorage::blob::analyzable#analyze()",
    "activestorage::blob::analyzable#analyze_later()",
    "activestorage::analyzer::analyze_later?()",
    "activestorage::blob::analyzable#analyzed?()",
    "activerecord::querymethods#and()",
    "activerecord::querymethods#annotate()",
    "actionview::syntaxerrorintemplate#annotated_source_code()",
    "rails::application::configuration#annotations()",
    "activerecord::migration#announce()",
    "module#anonymous?()",
    "actioncontroller::mimeresponds::collector#any()",
    "actionmailer::collector#any()",
    "actionview::lookupcontext::viewpaths#any?()",
    "activerecord::associations::collectionproxy#any?()",
    "activerecord::relation#any?()",
    "activesupport::arrayinquirer#any?()",
    "actioncontroller::requestforgeryprotection#any_authenticity_token_valid?()",
    "actioncontroller::mimeresponds::collector#any_response?()",
    "actionview::lookupcontext::viewpaths#any_templates?()",
    "activerecord::connectionadapters::connectionpool::queue#any_waiting?()",
    "rails::api::repotask#api_dir()",
    "rails::api::task#api_main()",
    "rails::generators::api_only!()",
    "rails::application::configuration#api_only=()",
    "actiondispatch::routing::mapper::resources#api_only?()",
    "actiondispatch::integrationtest::behavior#app()",
    "actiondispatch::integrationtest::behavior::classmethods#app()",
    "rails::appbuilder#app()",
    "rails::consolemethods#app()",
    "rails::engine#app()",
    "rails::pluginbuilder#app()",
    "actiondispatch::integrationtest::behavior::classmethods#app=()",
    "rails::railtie::configuration#app_generators()",
    "rails::railtie::configuration#app_middleware()",
    "activerecord::associations::collectionproxy#append()",
    "abstractcontroller::callbacks::classmethods#append_after_action()",
    "abstractcontroller::callbacks::classmethods#append_around_action()",
    "actiontext::content#append_attachables()",
    "abstractcontroller::callbacks::classmethods#append_before_action()",
    "actioncontroller::instrumentation#append_info_to_payload()",
    "actionview::viewpaths#append_view_path()",
    "actionview::viewpaths::classmethods#append_view_path()",
    "rails::application()",
    "rails::generators::actions#application()",
    "rails::generators::namedbase#application_name()",
    "actiondispatch::exceptionwrapper#application_trace()",
    "rails::generators::testing::behaviour::classmethods#arguments()",
    "abstractcontroller::callbacks::classmethods#around_action()",
    "activerecord::callbacks::classmethods#around_create()",
    "activerecord::callbacks::classmethods#around_destroy()",
    "activejob::callbacks::classmethods#around_enqueue()",
    "activejob::callbacks::classmethods#around_perform()",
    "actionmailbox::callbacks#around_processing()",
    "activerecord::callbacks::classmethods#around_save()",
    "activerecord::callbacks::classmethods#around_update()",
    "actioncontroller::parameters#as_json()",
    "actiontext::attachable#as_json()",
    "actiontext::content#as_json()",
    "activemodel::errors#as_json()",
    "activemodel::serializers::json#as_json()",
    "activestorage::filename#as_json()",
    "activesupport::timewithzone#as_json()",
    "exception#as_json()",
    "actioncable::channel::testcase::behavior#assert_broadcast_on()",
    "actioncable::testhelper#assert_broadcast_on()",
    "actioncable::channel::testcase::behavior#assert_broadcasts()",
    "actioncable::testhelper#assert_broadcasts()",
    "activesupport::testing::assertions#assert_changes()",
    "rails::generators::testing::assertions#assert_class_method()",
    "activesupport::testing::assertions#assert_difference()",
    "rails::generators::testing::assertions#assert_directory()",
    "actionmailer::testhelper#assert_emails()",
    "actionmailer::testhelper#assert_enqueued_email_with()",
    "actionmailer::testhelper#assert_enqueued_emails()",
    "activejob::testhelper#assert_enqueued_jobs()",
    "activejob::testhelper#assert_enqueued_with()",
    "rails::generators::testing::assertions#assert_field_default_value()",
    "rails::generators::testing::assertions#assert_field_type()",
    "rails::generators::testing::assertions#assert_file()",
    "actiondispatch::assertions::routingassertions#assert_generates()",
    "actioncable::channel::testcase::behavior#assert_has_stream()",
    "actioncable::channel::testcase::behavior#assert_has_stream_for()",
    "rails::generators::testing::assertions#assert_instance_method()",
    "rails::generators::testing::assertions#assert_method()",
    "rails::generators::testing::assertions#assert_migration()",
    "actioncable::testhelper#assert_no_broadcasts()",
    "activesupport::testing::assertions#assert_no_changes()",
    "activesupport::testing::assertions#assert_no_difference()",
    "rails::generators::testing::assertions#assert_no_directory()",
    "actionmailer::testhelper#assert_no_emails()",
    "actionmailer::testhelper#assert_no_enqueued_emails()",
    "activejob::testhelper#assert_no_enqueued_jobs()",
    "rails::generators::testing::assertions#assert_no_file()",
    "rails::generators::testing::assertions#assert_no_migration()",
    "activejob::testhelper#assert_no_performed_jobs()",
    "actioncable::channel::testcase::behavior#assert_no_streams()",
    "activesupport::testing::assertions#assert_not()",
    "activesupport::testing::assertions#assert_nothing_raised()",
    "activejob::testhelper#assert_performed_jobs()",
    "activejob::testhelper#assert_performed_with()",
    "actiondispatch::assertions::routingassertions#assert_recognizes()",
    "actiondispatch::assertions::responseassertions#assert_redirected_to()",
    "actioncable::connection::assertions#assert_reject_connection()",
    "actiondispatch::assertions::responseassertions#assert_response()",
    "actiondispatch::assertions::routingassertions#assert_routing()",
    "hash#assert_valid_keys()",
    "activemodel::type::value#assert_valid_value()",
    "actionview::helpers::asseturlhelper#asset_path()",
    "actionview::helpers::asseturlhelper#asset_url()",
    "rails::pluginbuilder#assets_manifest()",
    "activemodel::attributeassignment#assign_attributes()",
    "actiondispatch::testprocess#assigns()",
    "activesupport::hashwithindifferentaccess#assoc()",
    "activerecord::connectionadapters::schemastatements#assume_migrated_upto_version()",
    "activesupport::timezone#at()",
    "string#at()",
    "time::at()",
    "date#at_beginning_of_day()",
    "datetime#at_beginning_of_day()",
    "time#at_beginning_of_day()",
    "datetime#at_beginning_of_hour()",
    "time#at_beginning_of_hour()",
    "datetime#at_beginning_of_minute()",
    "time#at_beginning_of_minute()",
    "dateandtime::calculations#at_beginning_of_month()",
    "dateandtime::calculations#at_beginning_of_quarter()",
    "dateandtime::calculations#at_beginning_of_week()",
    "dateandtime::calculations#at_beginning_of_year()",
    "date#at_end_of_day()",
    "datetime#at_end_of_day()",
    "time#at_end_of_day()",
    "datetime#at_end_of_hour()",
    "time#at_end_of_hour()",
    "datetime#at_end_of_minute()",
    "time#at_end_of_minute()",
    "dateandtime::calculations#at_end_of_month()",
    "dateandtime::calculations#at_end_of_quarter()",
    "dateandtime::calculations#at_end_of_week()",
    "dateandtime::calculations#at_end_of_year()",
    "date#at_midday()",
    "datetime#at_midday()",
    "time#at_midday()",
    "date#at_middle_of_day()",
    "datetime#at_middle_of_day()",
    "time#at_middle_of_day()",
    "date#at_midnight()",
    "datetime#at_midnight()",
    "time#at_midnight()",
    "date#at_noon()",
    "datetime#at_noon()",
    "time#at_noon()",
    "time::at_with_coercion()",
    "time::at_without_coercion()",
    "actionview::helpers::atomfeedhelper#atom_feed()",
    "file::atomic_write()",
    "actioncable::connection::streameventloop#attach()",
    "activestorage::attached::many#attach()",
    "activestorage::attached::one#attach()",
    "activesupport::subscriber::attach_to()",
    "actiontext::attachable#attachable_content_type()",
    "actiontext::attachable#attachable_filename()",
    "actiontext::attachable#attachable_filesize()",
    "actiontext::attachable#attachable_metadata()",
    "actiontext::attachables::contentattachment#attachable_plain_text_representation()",
    "actiontext::attachables::remoteimage#attachable_plain_text_representation()",
    "actiontext::engine#attachable_plain_text_representation()",
    "actiontext::attachable#attachable_sgid()",
    "actiontext::content#attachables()",
    "activestorage::attached::many#attached?()",
    "activestorage::attached::one#attached?()",
    "actiontext::fixtureset::attachment()",
    "activestorage::attached::one#attachment()",
    "actiontext::content#attachment_galleries()",
    "actionmailer::base#attachments()",
    "actionmailer::mailhelper#attachments()",
    "actiontext::attachmentgallery#attachments()",
    "actiontext::content#attachments()",
    "activestorage::attached::many#attachments()",
    "actiondispatch::filehandler#attempt()",
    "module#attr_internal()",
    "module#attr_internal_accessor()",
    "module#attr_internal_reader()",
    "module#attr_internal_writer()",
    "activerecord::readonlyattributes::classmethods#attr_readonly()",
    "activemodel::attributes::classmethods#attribute()",
    "activerecord::attributes::classmethods#attribute()",
    "activesupport::currentattributes::attribute()",
    "activemodel::attributemethods::classmethods#attribute_alias()",
    "activemodel::attributemethods::classmethods#attribute_alias?()",
    "activerecord::attributemethods::dirty#attribute_before_last_save()",
    "activerecord::attributemethods::dirty#attribute_change_to_be_saved()",
    "activerecord::attributemethods#attribute_for_inspect()",
    "activerecord::attributemethods::dirty#attribute_in_database()",
    "activemodel::validations::classmethods#attribute_method?()",
    "activerecord::attributemethods::classmethods#attribute_method?()",
    "activemodel::attributemethods::classmethods#attribute_method_affix()",
    "activemodel::attributemethods::classmethods#attribute_method_prefix()",
    "activemodel::attributemethods::classmethods#attribute_method_suffix()",
    "activemodel::attributemethods#attribute_missing()",
    "activemodel::attributes::classmethods#attribute_names()",
    "activemodel::errors#attribute_names()",
    "activerecord::attributemethods#attribute_names()",
    "activerecord::attributemethods::classmethods#attribute_names()",
    "activerecord::attributemethods#attribute_present?()",
    "actiontext::trixattachment#attributes()",
    "activerecord::attributemethods#attributes()",
    "activemodel::attributeassignment#attributes=()",
    "activerecord::attributemethods::beforetypecast#attributes_before_type_cast()",
    "activemodel::error#attributes_for_hash()",
    "activerecord::attributemethods::dirty#attributes_in_database()",
    "rails::generators::namedbase#attributes_names()",
    "activestorage::blob#audio?()",
    "actionview::helpers::asseturlhelper#audio_path()",
    "actionview::helpers::assettaghelper#audio_tag()",
    "actionview::helpers::asseturlhelper#audio_url()",
    "actioncontroller::httpauthentication::basic#auth_param()",
    "actioncontroller::httpauthentication::basic#auth_scheme()",
    "actioncontroller::httpauthentication::basic#authenticate()",
    "actioncontroller::httpauthentication::digest#authenticate()",
    "actioncontroller::httpauthentication::token#authenticate()",
    "actioncontroller::httpauthentication::basic::controllermethods#authenticate_or_request_with_http_basic()",
    "actioncontroller::httpauthentication::digest::controllermethods#authenticate_or_request_with_http_digest()",
    "actioncontroller::httpauthentication::token::controllermethods#authenticate_or_request_with_http_token()",
    "actioncontroller::httpauthentication::basic::controllermethods#authenticate_with_http_basic()",
    "actioncontroller::httpauthentication::digest::controllermethods#authenticate_with_http_digest()",
    "actioncontroller::httpauthentication::token::controllermethods#authenticate_with_http_token()",
    "actionmailbox::ingresses::mailgun::inboundemailscontroller::authenticator#authenticated?()",
    "actionmailbox::ingresses::mandrill::inboundemailscontroller::authenticator#authenticated?()",
    "actioncontroller::httpauthentication::digest#authentication_header()",
    "actioncontroller::httpauthentication::basic#authentication_request()",
    "actioncontroller::httpauthentication::digest#authentication_request()",
    "actioncontroller::httpauthentication::token#authentication_request()",
    "actiondispatch::request#authorization()",
    "actionview::helpers::assettaghelper#auto_discovery_link_tag()",
    "activesupport::autoload#autoload()",
    "activesupport::autoload#autoload_at()",
    "rails::paths::root#autoload_once()",
    "rails::engine::configuration#autoload_once_paths()",
    "rails::engine::configuration#autoload_paths()",
    "rails::paths::root#autoload_paths()",
    "activesupport::autoload#autoload_under()",
    "rails::application::configuration#autoloader=()",
    "rails::autoloaders()",
    "activesupport::autoload#autoloads()",
    "activerecord::reflection::macroreflection#autosave=()",
    "abstractcontroller::base#available_action?()",
    "activerecord::calculations#average()",
    "actiondispatch::response#await_commit()",
    "actiondispatch::response#await_sent()",
    "activesupport::xmlmini#backend()",
    "activesupport::xmlmini#backend=()",
    "rails::backtrace_cleaner()",
    "rails::command::base::banner()",
    "rails::generators::base::banner()",
    "activestorage::filename#base()",
    "securerandom::base36()",
    "securerandom::base58()",
    "activerecord::inheritance::classmethods#base_class()",
    "activerecord::inheritance::classmethods#base_class?()",
    "rails::command::base::base_name()",
    "rails::generators::base::base_name()",
    "rails::generators::base::base_root()",
    "activemodel::attributemethods::classmethods::codegenerator::batch()",
    "mail::message#bcc_addresses()",
    "actioncable::connection::base#beat()",
    "activerecord::persistence#becomes()",
    "activerecord::persistence#becomes!()",
    "actiondispatch::callbacks::before()",
    "actionview::cacheexpiry::executor#before()",
    "activesupport::duration#before()",
    "rails::initializable::initializer#before()",
    "dateandtime::calculations#before?()",
    "abstractcontroller::callbacks::classmethods#before_action()",
    "activesupport::reloader::before_class_unload()",
    "rails::railtie::configuration#before_configuration()",
    "activerecord::callbacks::classmethods#before_create()",
    "activerecord::callbacks::classmethods#before_destroy()",
    "rails::railtie::configuration#before_eager_load()",
    "activejob::callbacks::classmethods#before_enqueue()",
    "rails::railtie::configuration#before_initialize()",
    "activejob::callbacks::classmethods#before_perform()",
    "actionmailbox::callbacks#before_processing()",
    "activesupport::currentattributes::before_reset()",
    "activerecord::callbacks::classmethods#before_save()",
    "actioncable::channel::callbacks::classmethods#before_subscribe()",
    "actioncable::channel::callbacks::classmethods#before_unsubscribe()",
    "activerecord::callbacks::classmethods#before_update()",
    "activemodel::validations::callbacks::classmethods#before_validation()",
    "activerecord::connectionadapters::abstractmysqladapter#begin_db_transaction()",
    "activerecord::connectionadapters::databasestatements#begin_db_transaction()",
    "activerecord::connectionadapters::postgresql::databasestatements#begin_db_transaction()",
    "activerecord::connectionadapters::abstractmysqladapter#begin_isolated_db_transaction()",
    "activerecord::connectionadapters::databasestatements#begin_isolated_db_transaction()",
    "activerecord::connectionadapters::postgresql::databasestatements#begin_isolated_db_transaction()",
    "activerecord::connectionadapters::sqlite3::databasestatements#begin_isolated_db_transaction()",
    "date#beginning_of_day()",
    "datetime#beginning_of_day()",
    "time#beginning_of_day()",
    "datetime#beginning_of_hour()",
    "time#beginning_of_hour()",
    "datetime#beginning_of_minute()",
    "time#beginning_of_minute()",
    "dateandtime::calculations#beginning_of_month()",
    "dateandtime::calculations#beginning_of_quarter()",
    "date::beginning_of_week()",
    "dateandtime::calculations#beginning_of_week()",
    "date::beginning_of_week=()",
    "dateandtime::calculations#beginning_of_year()",
    "activesupport::deprecation::behavior#behavior()",
    "activesupport::deprecation::behavior#behavior=()",
    "activerecord::associations::classmethods#belongs_to()",
    "activerecord::connectionadapters::sqlite3::tabledefinition#belongs_to()",
    "activerecord::connectionadapters::table#belongs_to()",
    "activerecord::connectionadapters::tabledefinition#belongs_to()",
    "rails::initializable::initializer#belongs_to?()",
    "activesupport::benchmarkable#benchmark()",
    "activesupport::timewithzone#between?()",
    "activerecord::connectionadapters::postgresql::columnmethods#bigserial()",
    "rails::appbuilder#bin()",
    "rails::pluginbuilder#bin()",
    "rails::appbuilder#bin_when_updating()",
    "activerecord::connectionadapters::postgresql::oid::bit::data#binary?()",
    "rails::initializable::initializer#bind()",
    "actionview::unboundtemplate#bind_locals()",
    "activerecord::connectionadapters::postgresql::columnmethods#bit()",
    "activerecord::connectionadapters::postgresql::columnmethods#bit_varying()",
    "activerecord::databaseconfigurations#blank?()",
    "activerecord::relation#blank?()",
    "activestorage::attached::one#blank?()",
    "activesupport::timewithzone#blank?()",
    "falseclass#blank?()",
    "nilclass#blank?()",
    "object#blank?()",
    "string#blank?()",
    "trueclass#blank?()",
    "activerecord::connectionadapters::mysql::columnmethods#blob()",
    "activestorage::attached::many#blobs()",
    "actiondispatch::contentsecuritypolicy#block_all_mixed_content()",
    "actionmailer::mailhelper#block_format()",
    "actiondispatch::request#body()",
    "actiondispatch::response#body()",
    "actiondispatch::response::rackbody#body()",
    "actionview::abstractrenderer::renderedcollection::emptycollection#body()",
    "actiondispatch::response#body=()",
    "actiondispatch::response#body_parts()",
    "actionmailbox::base#bounce_with()",
    "activerecord::connectionadapters::postgresql::columnmethods#box()",
    "actioncable::server::broadcasting#broadcast()",
    "actioncable::server::broadcasting::broadcaster#broadcast()",
    "actioncable::subscriptionadapter::base#broadcast()",
    "actioncable::subscriptionadapter::subscribermap#broadcast()",
    "actioncable::subscriptionadapter::test#broadcast()",
    "actioncable::channel::broadcasting::classmethods#broadcast_to()",
    "actioncable::server::broadcasting#broadcaster_for()",
    "actioncable::channel::broadcasting::classmethods#broadcasting_for()",
    "actioncable::subscriptionadapter::test#broadcasts()",
    "actiondispatch::contentsecuritypolicy#build()",
    "actiondispatch::middlewarestack#build()",
    "actiondispatch::middlewarestack::middleware#build()",
    "actiondispatch::permissionspolicy#build()",
    "actionview::resolver::path::build()",
    "activerecord::associations::collectionproxy#build()",
    "activerecord::relation#build()",
    "activesupport::callbacks::filters::after::build()",
    "activesupport::callbacks::filters::before::build()",
    "activesupport::duration::build()",
    "rails::generators::activemodel::build()",
    "actiondispatch::middlewarestack::middleware#build_instrumented()",
    "activejob::queueadapters::queueclassicadapter#build_queue()",
    "actioncontroller::testcase::behavior#build_response()",
    "rails::application::defaultmiddlewarestack#build_stack()",
    "actionview::helpers::taghelper::build_tag_values()",
    "actionview::rendering::classmethods#build_view_context_class()",
    "actionview::helpers::formbuilder#button()",
    "actionview::helpers::formtaghelper#button_tag()",
    "actionview::helpers::urlhelper#button_to()",
    "numeric#byte()",
    "numeric#bytes()",
    "abstractcontroller::caching#cache()",
    "actionview::helpers::cachehelper#cache()",
    "activerecord::connectionadapters::querycache#cache()",
    "activerecord::querycache::classmethods#cache()",
    "activerecord::tasks::databasetasks#cache_dump_filename()",
    "activerecord::fixtureset::cache_fixtures()",
    "activerecord::fixtureset::cache_for_connection()",
    "actionview::helpers::cachehelper#cache_fragment_name()",
    "actionview::helpers::cachehelper#cache_if()",
    "actiontext::attachments::caching#cache_key()",
    "activerecord::integration#cache_key()",
    "activerecord::relation#cache_key()",
    "activerecord::integration#cache_key_with_version()",
    "activerecord::relation#cache_key_with_version()",
    "actionview::logsubscriber#cache_message()",
    "abstractcontroller::caching::configmethods#cache_store()",
    "abstractcontroller::caching::configmethods#cache_store=()",
    "actionview::base::cache_template_loading()",
    "actionview::base::cache_template_loading=()",
    "actionview::helpers::cachehelper#cache_unless()",
    "activerecord::integration#cache_version()",
    "activerecord::relation#cache_version()",
    "activerecord::fixtureset::cached_fixtures()",
    "activerecord::associations::collectionproxy#calculate()",
    "activerecord::calculations#calculate()",
    "actiondispatch::remoteip::getip#calculate_ip()",
    "actioncable::server::base#call()",
    "actiondispatch::callbacks#call()",
    "actiondispatch::contentsecuritypolicy::middleware#call()",
    "actiondispatch::cookies#call()",
    "actiondispatch::debugexceptions#call()",
    "actiondispatch::debuglocks#call()",
    "actiondispatch::executor#call()",
    "actiondispatch::filehandler#call()",
    "actiondispatch::hostauthorization#call()",
    "actiondispatch::middlewarestack::instrumentationproxy#call()",
    "actiondispatch::permissionspolicy::middleware#call()",
    "actiondispatch::publicexceptions#call()",
    "actiondispatch::remoteip#call()",
    "actiondispatch::requestid#call()",
    "actiondispatch::showexceptions#call()",
    "actiondispatch::static#call()",
    "actionmailer::preview::call()",
    "actionview::template::handlers::builder#call()",
    "actionview::template::handlers::erb::call()",
    "actionview::template::handlers::erb#call()",
    "actionview::template::handlers::html#call()",
    "actionview::template::handlers::raw#call()",
    "activerecord::middleware::databaseselector#call()",
    "activerecord::migration::checkpending#call()",
    "activesupport::callbacks::conditionals::value#call()",
    "activesupport::logger::simpleformatter#call()",
    "rails::engine#call()",
    "rails::rack::logger#call()",
    "rails::rack::logger#call_app()",
    "string#camelcase()",
    "activesupport::inflector#camelize()",
    "string#camelize()",
    "actiontext::attachment#caption()",
    "actionview::helpers::capturehelper#capture()",
    "activemodel::type::value#cast()",
    "activemodel::type::value#cast_value()",
    "module#cattr_accessor()",
    "module#cattr_reader()",
    "module#cattr_writer()",
    "mail::message#cc_addresses()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#cdata_block()",
    "actionview::helpers::taghelper#cdata_section()",
    "time#ceil()",
    "activerecord::connectionadapters::table#change()",
    "activesupport::encryptedfile#change()",
    "activesupport::timewithzone#change()",
    "date#change()",
    "datetime#change()",
    "time#change()",
    "activerecord::connectionadapters::schemastatements#change_column()",
    "activerecord::connectionadapters::schemastatements#change_column_comment()",
    "activerecord::connectionadapters::schemastatements#change_column_default()",
    "activerecord::connectionadapters::schemastatements#change_column_null()",
    "activerecord::connectionadapters::table#change_default()",
    "activerecord::connectionadapters::table#change_null()",
    "activerecord::connectionadapters::schemastatements#change_table()",
    "activerecord::connectionadapters::schemastatements#change_table_comment()",
    "activemodel::dirty#changed()",
    "activemodel::dirty#changed?()",
    "activemodel::type::value#changed?()",
    "activerecord::attributemethods::dirty#changed_attribute_names_to_save()",
    "activemodel::dirty#changed_attributes()",
    "activerecord::autosaveassociation#changed_for_autosave?()",
    "activemodel::type::value#changed_in_place?()",
    "activerecord::type::json#changed_in_place?()",
    "activemodel::dirty#changes()",
    "activemodel::dirty#changes_applied()",
    "activerecord::attributemethods::dirty#changes_to_save()",
    "actioncable::channel::testcase::behavior::classmethods#channel_class()",
    "actioncable::channel::naming::classmethods#channel_name()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#characters()",
    "actiondispatch::response#charset()",
    "activerecord::connectionadapters::abstractmysqladapter#charset()",
    "activerecord::tasks::databasetasks#charset()",
    "actiondispatch::response#charset=()",
    "activerecord::tasks::databasetasks#charset_current()",
    "actionview::helpers::formbuilder#check_box()",
    "actionview::helpers::formhelper#check_box()",
    "actionview::helpers::formtaghelper#check_box_tag()",
    "rails::generators::namedbase::check_class_collision()",
    "activerecord::connectionadapters::table#check_constraint()",
    "activerecord::connectionadapters::tabledefinition#check_constraint()",
    "activerecord::connectionadapters::abstractmysqladapter#check_constraints()",
    "activerecord::connectionadapters::schemastatements#check_constraints()",
    "activerecord::migration::check_pending!()",
    "activerecord::tasks::databasetasks#check_protected_environments!()",
    "activerecord::tasks::databasetasks#check_schema_file()",
    "activerecord::tasks::databasetasks#check_target_version()",
    "activerecord::connectionadapters::connectionpool#checkin()",
    "activerecord::connectionadapters::connectionpool#checkout()",
    "activerecord::databaseconfigurations::hashconfig#checkout_timeout()",
    "rails::paths::path#children()",
    "activerecord::connectionadapters::postgresql::columnmethods#cidr()",
    "activerecord::connectionadapters::postgresql::columnmethods#circle()",
    "activerecord::connectionadapters::postgresql::columnmethods#citext()",
    "datetime::civil_from_format()",
    "activesupport::deprecation::deprecatedconstantproxy#class()",
    "class#class_attribute()",
    "kernel#class_eval()",
    "activesupport::concern#class_methods()",
    "rails::generators::namedbase#class_name()",
    "actionview::helpers::taghelper#class_names()",
    "rails::generators::namedbase#class_path()",
    "activesupport::inflector#classify()",
    "string#classify()",
    "activesupport::backtracecleaner#clean()",
    "activesupport::cache::filestore#cleanup()",
    "activesupport::cache::memorystore#cleanup()",
    "activesupport::cache::nullstore#cleanup()",
    "activesupport::cache::rediscachestore#cleanup()",
    "activesupport::cache::store#cleanup()",
    "actioncontroller::instrumentation#cleanup_view_runtime()",
    "actioncable::subscriptionadapter::test#clear()",
    "actiondispatch::flash::flashhash#clear()",
    "activemodel::deprecationhandlingmessagearray#clear()",
    "activerecord::associations::collectionproxy#clear()",
    "activerecord::connectionadapters::connectionpool::queue#clear()",
    "activesupport::cache::filestore#clear()",
    "activesupport::cache::memcachestore#clear()",
    "activesupport::cache::memorystore#clear()",
    "activesupport::cache::nullstore#clear()",
    "activesupport::cache::rediscachestore#clear()",
    "activesupport::cache::store#clear()",
    "activesupport::cache::strategy::localcache::localstore#clear()",
    "activesupport::descendantstracker::clear()",
    "activesupport::inflector::inflections#clear()",
    "activerecord::connectionadapters::schemacache#clear!()",
    "activesupport::dependencies::classcache#clear!()",
    "abstractcontroller::base::clear_action_methods!()",
    "actioncable::channel::base::clear_action_methods!()",
    "activerecord::connectionadapters::connectionhandler#clear_active_connections!()",
    "activerecord::connectionadapters::connectionhandler#clear_all_connections!()",
    "activemodel::dirty#clear_attribute_changes()",
    "actionview::cacheexpiry#clear_cache()",
    "actionview::resolver#clear_cache()",
    "activerecord::connectionadapters::abstractadapter#clear_cache!()",
    "actionview::cacheexpiry#clear_cache_if_necessary()",
    "activemodel::dirty#clear_changes_information()",
    "activerecord::connectionadapters::schemacache#clear_data_source_cache!()",
    "abstractcontroller::helpers::classmethods#clear_helpers()",
    "actioncable::subscriptionadapter::test#clear_messages()",
    "activerecord::connectionadapters::querycache#clear_query_cache()",
    "activerecord::connectionhandling#clear_query_caches_for_current_thread()",
    "activerecord::connectionadapters::connectionpool#clear_reloadable_connections()",
    "activerecord::connectionadapters::connectionhandler#clear_reloadable_connections!()",
    "activerecord::connectionadapters::connectionpool#clear_reloadable_connections!()",
    "activerecord::tasks::databasetasks#clear_schema_cache()",
    "activemodel::validations::classmethods#clear_validators!()",
    "activerecord::connectionadapters::postgresql::schemastatements#client_min_messages()",
    "activerecord::connectionadapters::postgresql::schemastatements#client_min_messages=()",
    "activerecord::core#clone()",
    "activesupport::safebuffer#clone_empty()",
    "actioncable::connection::base#close()",
    "actioncontroller::live::sse#close()",
    "actiondispatch::http::uploadedfile#close()",
    "actiondispatch::response#close()",
    "actiondispatch::response::rackbody#close()",
    "activerecord::connectionadapters::abstractadapter#close()",
    "activesupport::gzip::stream#close()",
    "actiondispatch::response#code()",
    "actiondispatch::assertionresponse#code_and_name()",
    "activerecord::connectionadapters::abstractmysqladapter#collation()",
    "activerecord::connectionadapters::postgresql::schemastatements#collation()",
    "activerecord::tasks::databasetasks#collation()",
    "activerecord::tasks::databasetasks#collation_current()",
    "actiondispatch::routing::mapper::resources#collection()",
    "actionview::helpers::formbuilder#collection_check_boxes()",
    "actionview::helpers::formoptionshelper#collection_check_boxes()",
    "actionview::helpers::formbuilder#collection_radio_buttons()",
    "actionview::helpers::formoptionshelper#collection_radio_buttons()",
    "actionview::helpers::formbuilder#collection_select()",
    "actionview::helpers::formoptionshelper#collection_select()",
    "activesupport::logsubscriber#color()",
    "actionview::helpers::formbuilder#color_field()",
    "actionview::helpers::formhelper#color_field()",
    "actionview::helpers::formtaghelper#color_field_tag()",
    "rails::application::configuration#colorize_logging()",
    "rails::application::configuration#colorize_logging=()",
    "activerecord::connectionadapters::columnmethods#column()",
    "activerecord::connectionadapters::table#column()",
    "activerecord::connectionadapters::tabledefinition#column()",
    "activerecord::modelschema::classmethods#column_defaults()",
    "activerecord::connectionadapters::schemastatements#column_exists?()",
    "activerecord::connectionadapters::table#column_exists?()",
    "activerecord::modelschema::classmethods#column_for_attribute()",
    "activerecord::connectionadapters::postgresql::quoting#column_name_matcher()",
    "activerecord::connectionadapters::postgresql::quoting#column_name_with_order_matcher()",
    "activerecord::modelschema::classmethods#column_names()",
    "activerecord::connectionadapters::schemacache#columns()",
    "activerecord::connectionadapters::schemastatements#columns()",
    "activerecord::connectionadapters::tabledefinition#columns()",
    "activerecord::modelschema::classmethods#columns()",
    "activerecord::connectionadapters::schemacache#columns_hash()",
    "activerecord::connectionadapters::schemacache#columns_hash?()",
    "abstractcontroller::caching::fragments#combined_fragment_cache_key()",
    "rails::command::base::command_name()",
    "rails::command::command_type()",
    "rails::generators::command_type()",
    "activerecord::connectionadapters::realtransaction#commit()",
    "activerecord::connectionadapters::savepointtransaction#commit()",
    "actiondispatch::response#commit!()",
    "activerecord::connectionadapters::transactionstate#commit!()",
    "activerecord::connectionadapters::databasestatements#commit_db_transaction()",
    "activerecord::connectionadapters::postgresql::databasestatements#commit_db_transaction()",
    "actiondispatch::request#commit_flash()",
    "actiondispatch::response#committed?()",
    "activerecord::connectionadapters::transactionstate#committed?()",
    "actioncontroller::parameters#compact()",
    "activesupport::hashwithindifferentaccess#compact()",
    "actioncontroller::parameters#compact!()",
    "actioncontroller::parameters#compact_blank()",
    "enumerable#compact_blank()",
    "actioncontroller::parameters#compact_blank!()",
    "hash#compact_blank!()",
    "activesupport::timewithzone#comparable_time()",
    "date#compare_with_coercion()",
    "time#compare_with_coercion()",
    "actioncontroller::requestforgeryprotection#compare_with_global_token()",
    "actioncontroller::requestforgeryprotection#compare_with_real_token()",
    "date#compare_without_coercion()",
    "time#compare_without_coercion()",
    "activesupport::configurable::configuration#compile_methods!()",
    "activesupport::configurable::configuration::compile_methods!()",
    "actionview::base#compiled_method_container()",
    "activerecord::querycache::complete()",
    "rails::application::finisher::interlockhook::complete()",
    "rails::application::finisher::mutexhook#complete()",
    "activesupport::executionwrapper#complete!()",
    "activerecord::connectionadapters::transactionstate#completed?()",
    "rails::api::repotask#component_root_dir()",
    "activesupport::multibyte::chars#compose()",
    "activesupport::multibyte::unicode#compose()",
    "activerecord::aggregations::classmethods#composed_of()",
    "activesupport::gzip::compress()",
    "actionview::helpers::asseturlhelper#compute_asset_extname()",
    "actionview::helpers::asseturlhelper#compute_asset_host()",
    "actionview::helpers::asseturlhelper#compute_asset_path()",
    "activerecord::reflection::macroreflection#compute_class()",
    "rails::rack::logger#compute_tags()",
    "activerecord::inheritance::classmethods#compute_type()",
    "actionview::helpers::texthelper#concat()",
    "activerecord::associations::collectionproxy#concat()",
    "activesupport::safebuffer#concat()",
    "rails::paths::path#concat()",
    "actiondispatch::routing::mapper::concerns#concern()",
    "kernel#concern()",
    "module::concerning#concern()",
    "module::concerning#concerning()",
    "actiondispatch::routing::mapper::concerns#concerns()",
    "actionview::testcase::behavior#config()",
    "activerecord::databaseconfigurations::hashconfig#config()",
    "activesupport::configurable#config()",
    "activesupport::configurable::classmethods#config()",
    "activesupport::encryptedconfiguration#config()",
    "rails::appbuilder#config()",
    "rails::dbconsole#config()",
    "rails::engine#config()",
    "rails::pluginbuilder#config()",
    "rails::railtie#config()",
    "activesupport::configurable::classmethods#config_accessor()",
    "rails::application#config_for()",
    "rails::appbuilder#config_target_version()",
    "rails::appbuilder#config_when_updating()",
    "rails::appbuilder#configru()",
    "activerecord::databaseconfigurations#configs_for()",
    "rails::configuration()",
    "activerecord::core::configurations()",
    "rails::dbconsole#configurations()",
    "activerecord::core::configurations=()",
    "activestorage::service::configure()",
    "activesupport::configurable::classmethods#configure()",
    "rails::railtie::configure()",
    "rails::railtie::configurable::classmethods#configure()",
    "rails::api::task#configure_rdoc_files()",
    "rails::api::repotask#configure_sdoc()",
    "rails::api::task#configure_sdoc()",
    "actioncable::channel::channelstub#confirmed?()",
    "actioncable::connection::testcase::behavior#connect()",
    "activerecord::connectionadapters::connectionhandler#connected?()",
    "activerecord::connectionadapters::connectionpool#connected?()",
    "activerecord::connectionhandling#connected?()",
    "activerecord::connectionhandling#connected_to()",
    "activerecord::connectionhandling#connected_to?()",
    "activerecord::connectionhandling#connected_to_many()",
    "activerecord::connectionhandling#connecting_to()",
    "activerecord::connectionadapters::connectionpool#connection()",
    "activerecord::connectionhandling#connection()",
    "activerecord::migration#connection()",
    "actioncable::connection::testcase::behavior::classmethods#connection_class()",
    "activerecord::core::connection_class()",
    "activerecord::connectionhandling#connection_config()",
    "activerecord::connectionhandling#connection_db_config()",
    "activerecord::core::connection_handler()",
    "activerecord::core#connection_handler()",
    "activerecord::core::connection_handler=()",
    "activerecord::core::connection_handlers()",
    "activerecord::core::connection_handlers=()",
    "actioncable::connection::identification#connection_identifier()",
    "actioncable::server::base#connection_identifiers()",
    "activerecord::connectionhandling#connection_pool()",
    "activerecord::connectionadapters::connectionhandler#connection_pool_list()",
    "activerecord::connectionadapters::connectionhandler#connection_pools()",
    "activerecord::connectionhandling#connection_specification_name()",
    "activerecord::connectionadapters::connectionpool#connections()",
    "activerecord::connectionhandling#connects_to()",
    "rails::application#console()",
    "rails::railtie::console()",
    "activesupport::deprecation::deprecatedconstantaccessor#const_missing()",
    "activesupport::inflector#constantize()",
    "string#constantize()",
    "actiondispatch::routing::mapper::scoping#constraints()",
    "actiondispatch::routing::routewrapper#constraints()",
    "activerecord::modelschema::classmethods#content_columns()",
    "actionview::helpers::capturehelper#content_for()",
    "actionview::helpers::capturehelper#content_for?()",
    "actiondispatch::request#content_length()",
    "actiondispatch::http::mimenegotiation#content_mime_type()",
    "actioncontroller::contentsecuritypolicy::classmethods#content_security_policy()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy()",
    "rails::application::configuration#content_security_policy()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy=()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_directives()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_directives=()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_generator()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy_nonce_generator=()",
    "actioncontroller::contentsecuritypolicy::classmethods#content_security_policy_report_only()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy_report_only()",
    "actiondispatch::contentsecuritypolicy::request#content_security_policy_report_only=()",
    "actionview::helpers::activemodelinstancetag#content_tag()",
    "actionview::helpers::taghelper#content_tag()",
    "actiondispatch::http::mimenegotiation#content_type()",
    "actiondispatch::requestencoder::identityencoder#content_type()",
    "actiondispatch::response#content_type()",
    "activestorage::variation#content_type()",
    "actiondispatch::response#content_type=()",
    "activerecord::fixtureset::context_class()",
    "rails::initializable::initializer#context_class()",
    "actiondispatch::routing::mapper::scoping#controller()",
    "actiondispatch::routing::routewrapper#controller()",
    "rails::consolemethods#controller()",
    "actioncontroller::testcase::behavior::classmethods#controller_class()",
    "actiondispatch::request#controller_class()",
    "actioncontroller::testcase::behavior::classmethods#controller_class=()",
    "actiondispatch::request#controller_class_for()",
    "actioncontroller::testcase::behavior#controller_class_name()",
    "actioncontroller::metal::controller_name()",
    "actioncontroller::metal#controller_name()",
    "abstractcontroller::base::controller_path()",
    "abstractcontroller::base#controller_path()",
    "actionmailer::base::controller_path()",
    "actionview::testcase::testcontroller#controller_path=()",
    "actioncontroller::parameters#converted_arrays()",
    "actiondispatch::request#cookie_jar()",
    "actioncable::connection::base#cookies()",
    "actioncable::connection::testcase::behavior#cookies()",
    "actioncontroller::cookies#cookies()",
    "actiondispatch::integration::session#cookies()",
    "actiondispatch::response#cookies()",
    "actiondispatch::testprocess#cookies()",
    "activerecord::migration#copy()",
    "abstractcontroller::actionnotfound::correction#corrections()",
    "actioncontroller::parametermissing::correction#corrections()",
    "actioncontroller::urlgenerationerror::correction#corrections()",
    "activerecord::associationnotfounderror::correction#corrections()",
    "activerecord::hasmanythroughassociationnotfounderror::correction#corrections()",
    "activerecord::inverseofassociationnotfounderror::correction#corrections()",
    "activerecord::associations::collectionproxy#count()",
    "activerecord::calculations#count()",
    "activerecord::querying#count_by_sql()",
    "activesupport::timezone::country_zones()",
    "activesupport::comparewithrange#cover?()",
    "activesupport::notifications::event#cpu_time()",
    "actiondispatch::response::create()",
    "actiondispatch::testrequest::create()",
    "actionmailbox::ingresses::mailgun::inboundemailscontroller#create()",
    "actionmailbox::ingresses::mandrill::inboundemailscontroller#create()",
    "actionmailbox::ingresses::postmark::inboundemailscontroller#create()",
    "actionmailbox::ingresses::relay::inboundemailscontroller#create()",
    "actionmailbox::ingresses::sendgrid::inboundemailscontroller#create()",
    "actionview::digestor::node::create()",
    "activerecord::associations::collectionproxy#create()",
    "activerecord::connectionadapters::databasestatements#create()",
    "activerecord::persistence::classmethods#create()",
    "activerecord::relation#create()",
    "activerecord::tasks::databasetasks#create()",
    "activestorage::directuploadscontroller#create()",
    "activesupport::timezone::create()",
    "rails::application::create()",
    "rails::rails::conductor::actionmailbox::inboundemails::sourcescontroller#create()",
    "rails::rails::conductor::actionmailbox::inboundemailscontroller#create()",
    "rails::rails::conductor::actionmailbox::reroutescontroller#create()",
    "activerecord::associations::collectionproxy#create!()",
    "activerecord::persistence::classmethods#create!()",
    "activerecord::relation#create!()",
    "activestorage::blob::create_after_upload!()",
    "activerecord::tasks::databasetasks#create_all()",
    "actionmailbox::inboundemail::messageid#create_and_extract_message_id!()",
    "activestorage::blob::create_and_upload!()",
    "activestorage::blob::create_before_direct_upload!()",
    "activerecord::tasks::databasetasks#create_current()",
    "activerecord::connectionadapters::abstractmysqladapter#create_database()",
    "activerecord::connectionadapters::postgresql::schemastatements#create_database()",
    "actiontext::htmlconversion#create_element()",
    "activerecord::fixtureset::create_fixtures()",
    "rails::generators::testing::behaviour#create_generated_attribute()",
    "actionmailbox::testhelper#create_inbound_email_from_fixture()",
    "actionmailbox::testhelper#create_inbound_email_from_mail()",
    "actionmailbox::testhelper#create_inbound_email_from_source()",
    "activerecord::connectionadapters::schemastatements#create_join_table()",
    "rails::generators::migration#create_migration()",
    "activerecord::relation#create_or_find_by()",
    "activerecord::relation#create_or_find_by!()",
    "activerecord::connectionadapters::savepoints#create_savepoint()",
    "activerecord::connectionadapters::postgresql::schemastatements#create_schema()",
    "actiondispatch::integration::runner#create_session()",
    "activerecord::connectionadapters::schemastatements#create_table()",
    "activerecord::connectionadapters::postgresqladapter::create_unlogged_tables()",
    "activerecord::querymethods#create_with()",
    "rails::appbuilder#credentials()",
    "rails::application#credentials()",
    "actionview::helpers::csphelper#csp_meta_tag()",
    "actionview::helpers::csrfhelper#csrf_meta_tag()",
    "actionview::helpers::csrfhelper#csrf_meta_tags()",
    "actioncontroller::requestforgeryprotection#csrf_token_hmac()",
    "activerecord::connectionadapters::postgresql::schemastatements#ctype()",
    "date::current()",
    "datetime::current()",
    "time::current()",
    "activerecord::tasks::databasetasks#current_config()",
    "actionview::helpers::texthelper#current_cycle()",
    "activerecord::connectionadapters::abstractmysqladapter#current_database()",
    "activerecord::connectionadapters::postgresql::schemastatements#current_database()",
    "activesupport::xmlmini_libxmlsax::hashbuilder#current_hash()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#current_hash()",
    "actionview::helpers::urlhelper#current_page?()",
    "activerecord::core::current_preventing_writes()",
    "activerecord::core::current_role()",
    "activerecord::connectionadapters::savepoints#current_savepoint_name()",
    "activerecord::connectionadapters::postgresql::schemastatements#current_schema()",
    "activerecord::core::current_shard()",
    "activerecord::migration::current_version()",
    "actioncontroller::mimeresponds::collector#custom()",
    "actionmailer::collector#custom()",
    "actionview::helpers::texthelper#cycle()",
    "activerecord::attributemethods::primarykey::classmethods#dangerous_attribute_method?()",
    "activerecord::attributemethods::classmethods#dangerous_class_method?()",
    "activesupport::inflector#dasherize()",
    "string#dasherize()",
    "actionview::fixtureresolver#data()",
    "activerecord::connectionadapters::schemacache#data_source_exists?()",
    "activerecord::connectionadapters::schemastatements#data_source_exists?()",
    "activerecord::connectionadapters::schemacache#data_sources()",
    "activerecord::connectionadapters::schemastatements#data_sources()",
    "activerecord::databaseconfigurations::hashconfig#database()",
    "rails::dbconsole#database()",
    "rails::application::configuration#database_configuration()",
    "activerecord::connectionadapters::abstractadapter::database_exists?()",
    "activerecord::connectionadapters::mysql2adapter::database_exists?()",
    "activerecord::connectionadapters::postgresqladapter::database_exists?()",
    "activerecord::connectionadapters::sqlite3adapter::database_exists?()",
    "rails::appbuilder#database_yml()",
    "actiondispatch::http::cache::response#date()",
    "actiondispatch::http::cache::response#date=()",
    "actiondispatch::http::cache::response#date?()",
    "actionview::helpers::formbuilder#date_field()",
    "actionview::helpers::formhelper#date_field()",
    "actionview::helpers::formtaghelper#date_field_tag()",
    "actionview::helpers::datehelper#date_select()",
    "actionview::helpers::formbuilder#date_select()",
    "activerecord::connectionadapters::postgresql::columnmethods#daterange()",
    "actionview::helpers::formbuilder#datetime_field()",
    "actionview::helpers::formhelper#datetime_field()",
    "actionview::helpers::formtaghelper#datetime_field_tag()",
    "actionview::helpers::formbuilder#datetime_local_field()",
    "actionview::helpers::formhelper#datetime_local_field()",
    "actionview::helpers::formtaghelper#datetime_local_field_tag()",
    "actionview::helpers::datehelper#datetime_select()",
    "actionview::helpers::formbuilder#datetime_select()",
    "numeric#day()",
    "numeric#days()",
    "dateandtime::calculations#days_ago()",
    "time::days_in_month()",
    "time::days_in_year()",
    "dateandtime::calculations#days_since()",
    "dateandtime::calculations#days_to_week_start()",
    "rails::appbuilder#db()",
    "rails::dbconsole#db_config()",
    "activerecord::tasks::databasetasks#db_dir()",
    "actionview::digestor::nulllogger::debug()",
    "actionview::helpers::debughelper#debug()",
    "rails::application::configuration#debug_exception_response_format()",
    "activestorage::variation::decode()",
    "activesupport::json::decode()",
    "actioncontroller::httpauthentication::basic#decode_credentials()",
    "actioncontroller::httpauthentication::digest#decode_credentials()",
    "actioncontroller::httpauthentication::digest#decode_credentials_header()",
    "activesupport::multibyte::chars#decompose()",
    "activesupport::multibyte::unicode#decompose()",
    "activesupport::gzip::decompress()",
    "activesupport::inflector#deconstantize()",
    "string#deconstantize()",
    "activerecord::persistence#decrement()",
    "activesupport::cache::filestore#decrement()",
    "activesupport::cache::memcachestore#decrement()",
    "activesupport::cache::memorystore#decrement()",
    "activesupport::cache::nullstore#decrement()",
    "activesupport::cache::rediscachestore#decrement()",
    "activesupport::cache::store#decrement()",
    "activerecord::persistence#decrement!()",
    "activerecord::countercache::classmethods#decrement_counter()",
    "activesupport::messageencryptor#decrypt_and_verify()",
    "activesupport::messages::rotator::encryptor#decrypt_and_verify()",
    "activerecord::connectionadapters::deduplicable#deduplicate()",
    "actioncontroller::parameters#deep_dup()",
    "array#deep_dup()",
    "hash#deep_dup()",
    "object#deep_dup()",
    "hash#deep_merge()",
    "hash#deep_merge!()",
    "activesupport::hashwithindifferentaccess#deep_stringify_keys()",
    "hash#deep_stringify_keys()",
    "activesupport::hashwithindifferentaccess#deep_stringify_keys!()",
    "hash#deep_stringify_keys!()",
    "activesupport::hashwithindifferentaccess#deep_symbolize_keys()",
    "hash#deep_symbolize_keys()",
    "hash#deep_symbolize_keys!()",
    "actioncontroller::parameters#deep_transform_keys()",
    "hash#deep_transform_keys()",
    "actioncontroller::parameters#deep_transform_keys!()",
    "hash#deep_transform_keys!()",
    "hash#deep_transform_values()",
    "hash#deep_transform_values!()",
    "actionmailer::base::default()",
    "activesupport::hashwithindifferentaccess#default()",
    "rails::generators::base::default_aliases_for_option()",
    "rails::command::base::default_command_root()",
    "rails::generators::base::default_for_option()",
    "actioncontroller::formbuilder#default_form_builder()",
    "actioncontroller::formbuilder::classmethods#default_form_builder()",
    "rails::generators::base::default_generator_root()",
    "activerecord::databaseconfigurations#default_hash()",
    "actionmailer::base#default_i18n_subject()",
    "date#default_inspect()",
    "datetime#default_inspect()",
    "rails::application::configuration#default_log_file()",
    "activesupport::multibyte::unicode#default_normalization_form()",
    "activesupport::multibyte::unicode#default_normalization_form=()",
    "rails::server#default_options()",
    "actionmailer::base::default_options=()",
    "activerecord::scoping::default::classmethods#default_scope()",
    "activerecord::scoping::named::classmethods#default_scoped()",
    "activerecord::connectionadapters::databasestatements#default_sequence_name()",
    "rails::generators::base::default_source_root()",
    "activerecord::type::internal::timezone#default_timezone()",
    "activestorage::variation#default_to()",
    "actiondispatch::integration::runner#default_url_options()",
    "actiondispatch::routing::mapper::base#default_url_options()",
    "actiondispatch::integration::runner#default_url_options=()",
    "actiondispatch::routing::mapper::base#default_url_options=()",
    "rails::generators::base::default_value_for_option()",
    "actiondispatch::routing::mapper::scoping#defaults()",
    "actioncable::channel::base#defer_subscription_confirmation!()",
    "actioncable::channel::base#defer_subscription_confirmation?()",
    "activerecord::dynamicmatchers::method#define()",
    "activerecord::schema::define()",
    "activerecord::attributes::classmethods#define_attribute()",
    "activemodel::attributemethods::classmethods#define_attribute_method()",
    "activemodel::attributemethods::classmethods#define_attribute_methods()",
    "activesupport::callbacks::classmethods#define_callbacks()",
    "activemodel::callbacks#define_model_callbacks()",
    "activemodel::validations::acceptancevalidator::lazilydefineattributes#define_on()",
    "module#delegate()",
    "module#delegate_missing_to()",
    "actionview::template::types::delegate_to()",
    "activerecord::delegatedtype#delegated_type()",
    "actioncontroller::parameters#delete()",
    "actioncontroller::testcase::behavior#delete()",
    "actiondispatch::flash::flashhash#delete()",
    "actiondispatch::integration::requesthelpers#delete()",
    "actiondispatch::middlewarestack#delete()",
    "actiondispatch::routing::mapper::httphelpers#delete()",
    "activemodel::deprecationhandlingmessagehash#delete()",
    "activemodel::errors#delete()",
    "activerecord::associations::collectionproxy#delete()",
    "activerecord::connectionadapters::connectionpool::queue#delete()",
    "activerecord::connectionadapters::databasestatements#delete()",
    "activerecord::persistence#delete()",
    "activerecord::persistence::classmethods#delete()",
    "activestorage::blob#delete()",
    "activestorage::service#delete()",
    "activestorage::service::azurestorageservice#delete()",
    "activestorage::service::diskservice#delete()",
    "activestorage::service::gcsservice#delete()",
    "activestorage::service::mirrorservice#delete()",
    "activestorage::service::s3service#delete()",
    "activesupport::cache::store#delete()",
    "activesupport::hashwithindifferentaccess#delete()",
    "activesupport::inflector::inflections::uncountables#delete()",
    "rails::configuration::middlewarestackproxy#delete()",
    "activerecord::associations::collectionproxy#delete_all()",
    "activerecord::batches::batchenumerator#delete_all()",
    "activerecord::relation#delete_all()",
    "activerecord::relation#delete_by()",
    "activesupport::cache::strategy::localcache::localstore#delete_entry()",
    "actiondispatch::response#delete_header()",
    "actioncontroller::parameters#delete_if()",
    "mime::mimes#delete_if()",
    "activesupport::cache::filestore#delete_matched()",
    "activesupport::cache::memorystore#delete_matched()",
    "activesupport::cache::nullstore#delete_matched()",
    "activesupport::cache::rediscachestore#delete_matched()",
    "activesupport::cache::store#delete_matched()",
    "activesupport::cache::store#delete_multi()",
    "activestorage::service#delete_prefixed()",
    "activestorage::service::azurestorageservice#delete_prefixed()",
    "activestorage::service::diskservice#delete_prefixed()",
    "activestorage::service::gcsservice#delete_prefixed()",
    "activestorage::service::mirrorservice#delete_prefixed()",
    "activestorage::service::s3service#delete_prefixed()",
    "actiondispatch::session::cachestore#delete_session()",
    "actiondispatch::session::cookiestore#delete_session()",
    "actionmailer::logsubscriber#deliver()",
    "actionmailer::messagedelivery#deliver_later()",
    "actionmailer::messagedelivery#deliver_later!()",
    "actionmailer::messagedelivery#deliver_now()",
    "actionmailer::messagedelivery#deliver_now!()",
    "activesupport::inflector#demodulize()",
    "string#demodulize()",
    "actionview::digestor::node#dependency_digest()",
    "module#deprecate()",
    "activesupport::deprecation::deprecatedconstantaccessor#deprecate_constant()",
    "activesupport::deprecation::methodwrapper#deprecate_methods()",
    "activesupport::deprecation::reporting#deprecation_warning()",
    "rails::api::task#desc()",
    "rails::command::base::desc()",
    "rails::generators::base::desc()",
    "activesupport::descendantstracker::descendants()",
    "activesupport::descendantstracker#descendants()",
    "class#descendants()",
    "activerecord::inheritance::classmethods#descends_from_active_record?()",
    "activejob::arguments#deserialize()",
    "activejob::core#deserialize()",
    "activejob::core::classmethods#deserialize()",
    "activejob::serializers::objectserializer#deserialize()",
    "activemodel::type::value#deserialize()",
    "activerecord::type::json#deserialize()",
    "rails::generators::testing::behaviour::classmethods#destination()",
    "activerecord::associations::collectionproxy#destroy()",
    "activerecord::persistence#destroy()",
    "activerecord::persistence::classmethods#destroy()",
    "rails::generators::activemodel#destroy()",
    "activerecord::persistence#destroy!()",
    "activerecord::associations::collectionproxy#destroy_all()",
    "activerecord::batches::batchenumerator#destroy_all()",
    "activerecord::relation#destroy_all()",
    "activerecord::relation#destroy_by()",
    "activerecord::persistence#destroyed?()",
    "activerecord::autosaveassociation#destroyed_by_association()",
    "activerecord::autosaveassociation#destroyed_by_association=()",
    "actioncable::connection::streameventloop#detach()",
    "activestorage::attached::many#detach()",
    "activestorage::attached::one#detach()",
    "activesupport::subscriber::detach_from()",
    "activemodel::error#detail()",
    "actionview::lookupcontext::viewpaths#detail_args_for()",
    "activemodel::error#details()",
    "activemodel::errors#details()",
    "actionview::viewpaths#details_for_lookup()",
    "actioncable::channel::testcase::behavior::classmethods#determine_default_channel()",
    "actioncable::connection::testcase::behavior::classmethods#determine_default_connection()",
    "actioncontroller::testcase::behavior::classmethods#determine_default_controller_class()",
    "actionview::testcase::behavior::classmethods#determine_default_helper_class()",
    "actionmailer::testcase::behavior::classmethods#determine_default_mailer()",
    "actioncontroller::parameters#dig()",
    "activesupport::hashwithindifferentaccess#dig()",
    "actionview::digestor::digest()",
    "actionview::digestor::injected#digest()",
    "actionview::digestor::missing#digest()",
    "actionview::digestor::node#digest()",
    "activestorage::variation#digest()",
    "actiondispatch::routing::mapper::customurls#direct()",
    "activesupport::descendantstracker::direct_descendants()",
    "activesupport::descendantstracker#direct_descendants()",
    "rails::sourceannotationextractor::annotation::directories()",
    "activerecord::connectionadapters::querycache::dirties_query_cache()",
    "actionview::lookupcontext::detailscache#disable_cache()",
    "activerecord::migration::disable_ddl_transaction!()",
    "activerecord::connectionadapters::abstractadapter#disable_extension()",
    "activerecord::connectionadapters::postgresqladapter#disable_extension()",
    "activerecord::connectionadapters::querycache#disable_query_cache!()",
    "activerecord::connectionadapters::querycache::connectionpoolconfiguration#disable_query_cache!()",
    "activerecord::connectionadapters::abstractadapter#disable_referential_integrity()",
    "activejob::testhelper::testqueueadapter::classmethods#disable_test_adapter()",
    "activesupport::deprecation::behavior#disallowed_behavior()",
    "activesupport::deprecation::behavior#disallowed_behavior=()",
    "activesupport::deprecation::disallowed#disallowed_warnings()",
    "actiondispatch::flash::flashhash#discard()",
    "activerecord::connectionadapters::abstractadapter#discard!()",
    "activejob::exceptions::classmethods#discard_on()",
    "actioncable::connection::testcase::behavior#disconnect()",
    "actioncable::remoteconnections::remoteconnection#disconnect()",
    "actioncable::server::base#disconnect()",
    "activerecord::connectionadapters::connectionpool#disconnect()",
    "activerecord::connectionadapters::abstractadapter#disconnect!()",
    "activerecord::connectionadapters::connectionpool#disconnect!()",
    "activerecord::connectionadapters::mysql2adapter#disconnect!()",
    "activerecord::connectionadapters::postgresqladapter#disconnect!()",
    "activerecord::connectionadapters::sqlite3adapter#disconnect!()",
    "actioncontroller::metal::dispatch()",
    "rails::sourceannotationextractor#display()",
    "actionview::helpers::datehelper#distance_of_time_in_words()",
    "actionview::helpers::datehelper#distance_of_time_in_words_to_now()",
    "activerecord::associations::collectionproxy#distinct()",
    "activerecord::querymethods#distinct()",
    "actiondispatch::integrationtest::behavior#document_root_element()",
    "actionview::recordidentifier#dom_class()",
    "actionview::recordidentifier#dom_id()",
    "actiondispatch::http::url#domain()",
    "activesupport::dependencies::interlock#done_running()",
    "activesupport::dependencies::interlock#done_unloading()",
    "activerecord::migration#down()",
    "activestorage::blob#download()",
    "activestorage::preview#download()",
    "activestorage::service#download()",
    "activestorage::service::azurestorageservice#download()",
    "activestorage::service::diskservice#download()",
    "activestorage::service::gcsservice#download()",
    "activestorage::service::s3service#download()",
    "activestorage::variant#download()",
    "activestorage::analyzer#download_blob_to_tempfile()",
    "activestorage::previewer#download_blob_to_tempfile()",
    "activestorage::service#download_chunk()",
    "activestorage::service::azurestorageservice#download_chunk()",
    "activestorage::service::diskservice#download_chunk()",
    "activestorage::service::gcsservice#download_chunk()",
    "activestorage::service::s3service#download_chunk()",
    "actiondispatch::routing::mapper::resources#draw()",
    "activestorage::previewer#draw()",
    "actiondispatch::systemtestcase::driven_by()",
    "activerecord::tasks::databasetasks#drop()",
    "activerecord::tasks::databasetasks#drop_all()",
    "activerecord::tasks::databasetasks#drop_current()",
    "activerecord::connectionadapters::schemastatements#drop_join_table()",
    "activerecord::connectionadapters::postgresql::schemastatements#drop_schema()",
    "activerecord::connectionadapters::abstractmysqladapter#drop_table()",
    "activerecord::connectionadapters::schemastatements#drop_table()",
    "activesupport::timewithzone#dst?()",
    "actiontext::serialization#dump()",
    "activerecord::tasks::databasetasks#dump_filename()",
    "activerecord::tasks::databasetasks#dump_schema_cache()",
    "activerecord::connectionadapters::schemacache#dump_to()",
    "activerecord::core#dup()",
    "activesupport::hashwithindifferentaccess#dup()",
    "method#duplicable?()",
    "object#duplicable?()",
    "unboundmethod#duplicable?()",
    "activesupport::notifications::event#duration()",
    "actioncontroller::parameters#each()",
    "actiondispatch::flash::flashhash#each()",
    "actiondispatch::http::headers#each()",
    "actiondispatch::middlewarestack#each()",
    "actiondispatch::response#each()",
    "actiondispatch::response::rackbody#each()",
    "activemodel::errors#each()",
    "activerecord::batches::batchenumerator#each()",
    "activerecord::fixtureset#each()",
    "activerecord::result#each()",
    "activesupport::dependencies::watchstack#each()",
    "mime::mimes#each()",
    "rails::engine::railties#each()",
    "rails::paths::path#each()",
    "actioncontroller::parameters#each_key()",
    "actioncontroller::parameters#each_nested_attribute()",
    "actioncontroller::parameters#each_pair()",
    "activerecord::batches::batchenumerator#each_record()",
    "actioncontroller::parameters#each_value()",
    "activesupport::autoload#eager_autoload()",
    "activerecord::querymethods#eager_load()",
    "rails::paths::root#eager_load()",
    "activesupport::autoload#eager_load!()",
    "rails::application#eager_load!()",
    "rails::engine#eager_load!()",
    "rails::railtie::configuration#eager_load_namespaces()",
    "rails::engine::configuration#eager_load_paths()",
    "activerecord::relation#eager_loading?()",
    "rails::generators::namedbase#edit_helper()",
    "actionview::helpers::tags::actiontext#editable_value()",
    "actionmailer::base::email_address_with_name()",
    "actionmailer::base#email_address_with_name()",
    "actionmailer::preview::email_exists?()",
    "actionview::helpers::formbuilder#email_field()",
    "actionview::helpers::formhelper#email_field()",
    "actionview::helpers::formtaghelper#email_field_tag()",
    "actionmailer::preview::emails()",
    "actiondispatch::request::empty()",
    "actioncontroller::parameters#empty?()",
    "actiondispatch::flash::flashhash#empty?()",
    "activerecord::associations::collectionproxy#empty?()",
    "activerecord::databaseconfigurations#empty?()",
    "activerecord::relation#empty?()",
    "activerecord::result#empty?()",
    "activesupport::dependencies::classcache#empty?()",
    "activerecord::connectionadapters::abstractmysqladapter#empty_insert_statement_value()",
    "activerecord::connectionadapters::databasestatements#empty_insert_statement_value()",
    "activerecord::connectionadapters::abstractmysqladapter::emulate_booleans()",
    "activerecord::connectionadapters::abstractadapter#enable_extension()",
    "activerecord::connectionadapters::postgresqladapter#enable_extension()",
    "activerecord::connectionadapters::querycache#enable_query_cache!()",
    "activerecord::connectionadapters::querycache::connectionpoolconfiguration#enable_query_cache!()",
    "activejob::testhelper::testqueueadapter::classmethods#enable_test_adapter()",
    "kernel#enable_warnings()",
    "activestorage::variation::encode()",
    "activesupport::json::encode()",
    "actionview::template#encode!()",
    "actioncontroller::httpauthentication::basic#encode_credentials()",
    "actioncontroller::httpauthentication::digest#encode_credentials()",
    "actioncontroller::httpauthentication::token#encode_credentials()",
    "actiondispatch::requestencoder::identityencoder#encode_params()",
    "activerecord::connectionadapters::schemacache#encode_with()",
    "activerecord::core#encode_with()",
    "activerecord::relation#encode_with()",
    "activesupport::orderedhash#encode_with()",
    "activesupport::safebuffer#encode_with()",
    "activerecord::connectionadapters::postgresql::schemastatements#encoding()",
    "activerecord::connectionadapters::sqlite3adapter#encoding()",
    "rails::application::configuration#encoding=()",
    "activesupport::messageencryptor#encrypt_and_sign()",
    "actioncable::connection::testcookiejar#encrypted()",
    "actiondispatch::cookies::chainedcookiejars#encrypted()",
    "rails::application#encrypted()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#end_document()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#end_element()",
    "date#end_of_day()",
    "datetime#end_of_day()",
    "time#end_of_day()",
    "datetime#end_of_hour()",
    "time#end_of_hour()",
    "datetime#end_of_minute()",
    "time#end_of_minute()",
    "dateandtime::calculations#end_of_month()",
    "dateandtime::calculations#end_of_quarter()",
    "dateandtime::calculations#end_of_week()",
    "dateandtime::calculations#end_of_year()",
    "symbol#end_with?()",
    "actiondispatch::routing::routewrapper#endpoint()",
    "rails::engine::endpoint()",
    "rails::engine#endpoint()",
    "symbol#ends_with?()",
    "actiondispatch::routing::routewrapper#engine?()",
    "rails::command::base::engine?()",
    "activerecord::testfixtures#enlist_fixture_connections()",
    "activejob::enqueuing#enqueue()",
    "activejob::queueadapters::testadapter#enqueued_jobs()",
    "actioncable::channel::base#ensure_confirmation_sent()",
    "activerecord::enum#enum()",
    "rails::sourceannotationextractor::enumerate()",
    "actiondispatch::http::headers#env()",
    "activerecord::tasks::databasetasks#env()",
    "rails::env()",
    "rails::env=()",
    "rails::application#env_config()",
    "rails::engine#env_config()",
    "actiondispatch::http::filterparameters#env_filter()",
    "rails::console#environment()",
    "rails::dbconsole#environment()",
    "rails::generators::actions#environment()",
    "rails::console#environment?()",
    "actiondispatch::http::uploadedfile#eof?()",
    "actioncontroller::parameters#eql?()",
    "actionview::filesystemresolver#eql?()",
    "activemodel::name#eql?()",
    "activemodel::type::value#eql?()",
    "activerecord::core#eql?()",
    "activesupport::duration#eql?()",
    "activesupport::timewithzone#eql?()",
    "mime::type#eql?()",
    "time#eql?()",
    "time#eql_with_coercion()",
    "time#eql_without_coercion()",
    "actionview::digestor::nulllogger::error()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#error()",
    "actionview::helpers::activemodelinstancetag#error_message()",
    "activerecord::connectionadapters::mysql2adapter#error_number()",
    "actionview::helpers::activemodelinstancetag#error_wrapping()",
    "activemodel::validations#errors()",
    "rails::generators::activemodel#errors()",
    "activerecord::connectionadapters::postgresql::quoting#escape_bytea()",
    "actionview::helpers::javascripthelper#escape_javascript()",
    "actionview::helpers::taghelper#escape_once()",
    "activerecord::connectionadapters::connectionhandler#establish_connection()",
    "activerecord::connectionhandling#establish_connection()",
    "actioncontroller::conditionalget::classmethods#etag()",
    "actiondispatch::http::cache::response#etag=()",
    "actiondispatch::http::cache::response#etag?()",
    "actiondispatch::http::cache::request#etag_matches?()",
    "actioncable::server::base#event_loop()",
    "numeric#exabyte()",
    "numeric#exabytes()",
    "actioncontroller::parameters#except()",
    "activerecord::spawnmethods#except()",
    "activesupport::hashwithindifferentaccess#except()",
    "hash#except()",
    "hash#except!()",
    "actiondispatch::exceptionwrapper#exception_trace()",
    "actionview::helpers::texthelper#excerpt()",
    "enumerable#exclude?()",
    "string#exclude?()",
    "array#excluding()",
    "enumerable#excluding()",
    "activesupport::concurrency::sharelock#exclusive()",
    "activerecord::connectionadapters::databasestatements#exec_delete()",
    "activerecord::connectionadapters::mysql::databasestatements#exec_delete()",
    "activerecord::connectionadapters::postgresql::databasestatements#exec_delete()",
    "activerecord::connectionadapters::sqlite3::databasestatements#exec_delete()",
    "activerecord::connectionadapters::databasestatements#exec_insert()",
    "activerecord::connectionadapters::postgresql::databasestatements#exec_insert()",
    "activerecord::migration#exec_migration()",
    "activerecord::relation::recordfetchwarning#exec_queries()",
    "activerecord::connectionadapters::databasestatements#exec_query()",
    "activerecord::connectionadapters::mysql::databasestatements#exec_query()",
    "activerecord::connectionadapters::postgresql::databasestatements#exec_query()",
    "activerecord::connectionadapters::sqlite3::databasestatements#exec_query()",
    "activerecord::connectionadapters::postgresql::databasestatements#exec_rollback_db_transaction()",
    "activerecord::connectionadapters::savepoints#exec_rollback_to_savepoint()",
    "activerecord::connectionadapters::databasestatements#exec_update()",
    "activerecord::connectionadapters::mysql::databasestatements#exec_update()",
    "activerecord::connectionadapters::postgresql::databasestatements#exec_update()",
    "activerecord::connectionadapters::sqlite3::databasestatements#exec_update()",
    "rails::command::base::executable()",
    "activemodel::attributemethods::classmethods::codegenerator#execute()",
    "activerecord::connectionadapters::abstractmysqladapter#execute()",
    "activerecord::connectionadapters::databasestatements#execute()",
    "activerecord::connectionadapters::mysql::databasestatements#execute()",
    "activerecord::connectionadapters::postgresql::databasestatements#execute()",
    "activesupport::fileupdatechecker#execute()",
    "rails::generators::actions#execute_command()",
    "activesupport::fileupdatechecker#execute_if_updated()",
    "actiondispatch::railsentitystore#exist?()",
    "activestorage::service#exist?()",
    "activestorage::service::azurestorageservice#exist?()",
    "activestorage::service::diskservice#exist?()",
    "activestorage::service::gcsservice#exist?()",
    "activestorage::service::s3service#exist?()",
    "activesupport::cache::store#exist?()",
    "rails::paths::path#existent()",
    "rails::paths::path#existent_directories()",
    "actionmailer::preview::exists?()",
    "actionview::lookupcontext::viewpaths#exists?()",
    "activerecord::findermethods#exists?()",
    "activesupport::cache::expand_cache_key()",
    "rails::paths::path#expanded()",
    "actioncontroller::httpauthentication::digest#expected_response()",
    "activerecord::connectionadapters::abstractadapter#expire()",
    "abstractcontroller::caching::fragments#expire_fragment()",
    "actioncontroller::conditionalget#expires_in()",
    "actioncontroller::conditionalget#expires_now()",
    "activerecord::connectionadapters::mysql::databasestatements#explain()",
    "activerecord::connectionadapters::postgresql::databasestatements#explain()",
    "activerecord::connectionadapters::sqlite3::databasestatements#explain()",
    "activerecord::relation#explain()",
    "activesupport::perthreadregistry::extended()",
    "activerecord::querymethods#extending()",
    "activestorage::filename#extension()",
    "activerecord::connectionadapters::postgresqladapter#extension_available?()",
    "activerecord::connectionadapters::postgresqladapter#extension_enabled?()",
    "activestorage::filename#extension_with_delimiter()",
    "activestorage::filename#extension_without_delimiter()",
    "activerecord::connectionadapters::abstractadapter#extensions()",
    "activerecord::connectionadapters::postgresqladapter#extensions()",
    "rails::sourceannotationextractor::annotation::extensions()",
    "rails::generators::actions#extify()",
    "actioncontroller::parameters#extract!()",
    "array#extract!()",
    "hash#extract!()",
    "rails::sourceannotationextractor#extract_annotations_from()",
    "activerecord::querymethods#extract_associated()",
    "actiondispatch::http::url::extract_domain()",
    "rails::generators::base#extract_last_module()",
    "actionmailbox::inboundemail::messageid#extract_message_id()",
    "array#extract_options!()",
    "actiondispatch::session::stalesessioncheck#extract_session_id()",
    "actiondispatch::http::url::extract_subdomain()",
    "actiondispatch::http::url::extract_subdomains()",
    "activesupport::hashwithindifferentaccess#extractable_options?()",
    "activesupport::orderedhash#extractable_options?()",
    "activesupport::orderedoptions#extractable_options?()",
    "hash#extractable_options?()",
    "actionmailbox::relayer::result#failure?()",
    "rails::generators::fallbacks()",
    "actionview::helpers::assettaghelper#favicon_link_tag()",
    "actioncontroller::parameters#fetch()",
    "actiondispatch::http::headers#fetch()",
    "activesupport::cache::store#fetch()",
    "activesupport::hashwithindifferentaccess#fetch()",
    "mime::fetch()",
    "activesupport::cache::store#fetch_multi()",
    "activesupport::hashwithindifferentaccess#fetch_values()",
    "activestorage::previewer::videopreviewer::ffmpeg_exists?()",
    "activestorage::previewer::videopreviewer::ffmpeg_path()",
    "actionview::helpers::formtaghelper#field_set_tag()",
    "actionview::helpers::formbuilder#fields()",
    "actionview::helpers::formhelper#fields()",
    "actionview::helpers::formbuilder#fields_for()",
    "actionview::helpers::formhelper#fields_for()",
    "activerecord::associations::collectionproxy#fifth()",
    "activerecord::findermethods#fifth()",
    "array#fifth()",
    "activerecord::findermethods#fifth!()",
    "actionview::helpers::formbuilder#file_field()",
    "actionview::helpers::formhelper#file_field()",
    "actionview::helpers::formtaghelper#file_field_tag()",
    "activesupport::testing::filefixtures#file_fixture()",
    "rails::command::file_lookup_paths()",
    "rails::generators::file_lookup_paths()",
    "rails::generators::namedbase#file_path()",
    "activestorage::blob#filename()",
    "activestorage::variant#filename()",
    "actiontext::systemtesthelper#fill_in_rich_text_area()",
    "activesupport::backtracecleaner#filter()",
    "activesupport::parameterfilter#filter()",
    "minitest::backtracefilterwithfallback#filter()",
    "activerecord::core::classmethods#filter_attributes()",
    "rails::console::backtracecleaner#filter_backtrace()",
    "activesupport::parameterfilter#filter_param()",
    "actiondispatch::remoteip::getip#filter_proxies()",
    "actiondispatch::http::filterparameters#filtered_env()",
    "actiondispatch::http::filterparameters#filtered_parameters()",
    "actiondispatch::http::filterparameters#filtered_path()",
    "actiondispatch::http::filterparameters#filtered_query_string()",
    "activerecord::connectionadapters::transactionstate#finalized?()",
    "actionmailer::preview::find()",
    "actionview::lookupcontext::viewpaths#find()",
    "activerecord::associations::collectionproxy#find()",
    "activerecord::findermethods#find()",
    "rails::engine::find()",
    "rails::generators::activemodel::find()",
    "rails::sourceannotationextractor#find()",
    "actiontext::fragment#find_all()",
    "actionview::lookupcontext::viewpaths#find_all()",
    "actionview::resolver#find_all()",
    "actiontext::attachmentgallery::find_attachment_gallery_nodes()",
    "date::find_beginning_of_week!()",
    "activerecord::findermethods#find_by()",
    "activerecord::findermethods#find_by!()",
    "activerecord::querying#find_by_sql()",
    "rails::dbconsole#find_cmd_and_exec()",
    "activerecord::databaseconfigurations#find_db_config()",
    "activerecord::batches#find_each()",
    "rails::sourceannotationextractor#find_in()",
    "activerecord::batches#find_in_batches()",
    "activerecord::relation#find_or_create_by()",
    "activerecord::relation#find_or_create_by!()",
    "activerecord::relation#find_or_initialize_by()",
    "rails::application::find_root()",
    "rails::engine::find_root()",
    "actiondispatch::session::cachestore#find_session()",
    "activerecord::signedid::classmethods#find_signed()",
    "activestorage::blob::find_signed()",
    "activerecord::signedid::classmethods#find_signed!()",
    "activestorage::blob::find_signed!()",
    "actionview::lookupcontext::viewpaths#find_template()",
    "activesupport::timezone::find_tzinfo()",
    "time::find_zone()",
    "time::find_zone!()",
    "activerecord::dynamicmatchers::findby#finder()",
    "activerecord::dynamicmatchers::findbybang#finder()",
    "activesupport::logsubscriber#finish()",
    "activesupport::notifications::fanout#finish()",
    "activesupport::notifications::fanout::subscribers::eventobject#finish()",
    "activesupport::notifications::instrumenter#finish()",
    "activesupport::subscriber#finish()",
    "activesupport::notifications::event#finish!()",
    "activesupport::notifications::instrumenter#finish_with_state()",
    "activerecord::associations::collectionproxy#first()",
    "activerecord::findermethods#first()",
    "rails::paths::path#first()",
    "string#first()",
    "activerecord::findermethods#first!()",
    "actionview::partialiteration#first?()",
    "activesupport::securityutils::fixed_length_secure_compare()",
    "rails::generators::namedbase#fixture_file_name()",
    "actiondispatch::testprocess::fixturefile#fixture_file_upload()",
    "activerecord::fixtureset::fixture_is_cached?()",
    "activerecord::testfixtures::classmethods#fixtures()",
    "activerecord::tasks::databasetasks#fixtures_path()",
    "actiondispatch::flash::requestmethods#flash()",
    "actiondispatch::testprocess#flash()",
    "actiondispatch::flash::requestmethods#flash=()",
    "time#floor()",
    "activerecord::connectionadapters::connectionpool#flush()",
    "activesupport::logsubscriber::testhelper::mocklogger#flush()",
    "activesupport::taggedlogging#flush()",
    "activerecord::connectionadapters::connectionpool#flush!()",
    "activesupport::logsubscriber::flush_all!()",
    "activerecord::connectionadapters::connectionhandler#flush_idle_connections!()",
    "actiondispatch::integration::requesthelpers#follow_redirect!()",
    "actionview::helpers::asseturlhelper#font_path()",
    "actionview::helpers::asseturlhelper#font_url()",
    "actioncontroller::renderer::for()",
    "activerecord::tasks::databasetasks#for_each()",
    "activerecord::connectionadapters::table#foreign_key()",
    "activesupport::inflector#foreign_key()",
    "string#foreign_key()",
    "activerecord::connectionadapters::schemastatements#foreign_key_exists?()",
    "activerecord::connectionadapters::table#foreign_key_exists?()",
    "activerecord::connectionadapters::abstractmysqladapter#foreign_keys()",
    "activerecord::connectionadapters::postgresql::schemastatements#foreign_keys()",
    "activerecord::connectionadapters::sqlite3adapter#foreign_keys()",
    "activerecord::connectionadapters::schemastatements#foreign_keys()",
    "activerecord::connectionadapters::postgresql::schemastatements#foreign_table_exists?()",
    "activerecord::connectionadapters::postgresql::schemastatements#foreign_tables()",
    "activesupport::forktracker::coreext#fork()",
    "activesupport::testing::isolation::forking_env?()",
    "actioncontroller::requestforgeryprotection#form_authenticity_param()",
    "actiondispatch::request#form_data?()",
    "actionview::helpers::formhelper#form_for()",
    "actionview::helpers::formtaghelper#form_tag()",
    "actionview::helpers::formhelper#form_with()",
    "actiondispatch::http::mimenegotiation#format()",
    "activestorage::variation#format()",
    "actiondispatch::http::mimenegotiation#format=()",
    "actiondispatch::http::mimenegotiation#format_from_path_extension()",
    "actionmailer::mailhelper#format_paragraph()",
    "abstractcontroller::base#formats()",
    "actiondispatch::http::mimenegotiation#formats()",
    "actiondispatch::http::mimenegotiation#formats=()",
    "activesupport::timewithzone#formatted_offset()",
    "activesupport::timezone#formatted_offset()",
    "datetime#formatted_offset()",
    "time#formatted_offset()",
    "numeric#fortnight()",
    "numeric#fortnights()",
    "activerecord::associations::collectionproxy#forty_two()",
    "activerecord::findermethods#forty_two()",
    "array#forty_two()",
    "activerecord::findermethods#forty_two!()",
    "activerecord::associations::collectionproxy#fourth()",
    "activerecord::findermethods#fourth()",
    "array#fourth()",
    "activerecord::findermethods#fourth!()",
    "actiontext::attachmentgallery::fragment_by_canonicalizing_attachment_galleries()",
    "actiontext::attachment::fragment_by_canonicalizing_attachments()",
    "actiontext::content::fragment_by_canonicalizing_content()",
    "actiontext::attachments::trixconversion#fragment_by_converting_trix_attachments()",
    "actiontext::attachments::minification#fragment_by_minifying_attachments()",
    "actiontext::attachmentgallery::fragment_by_replacing_attachment_gallery_nodes()",
    "abstractcontroller::caching::fragments::classmethods#fragment_cache_key()",
    "abstractcontroller::caching::fragments#fragment_exist?()",
    "actiontext::htmlconversion#fragment_for_html()",
    "actiondispatch::exceptionwrapper#framework_trace()",
    "activerecord::core#freeze()",
    "activesupport::timewithzone#freeze()",
    "activesupport::testing::timehelpers#freeze_time()",
    "actiondispatch::http::cache::request#fresh?()",
    "actioncontroller::conditionalget#fresh_when()",
    "activerecord::querymethods#from()",
    "array#from()",
    "string#from()",
    "mail::message#from_address()",
    "actiontext::attachment::from_attachable()",
    "actiontext::attachable::from_attachable_sgid()",
    "actiontext::attachable#from_attachable_sgid()",
    "actiontext::attachment::from_attachables()",
    "actiontext::attachment::from_attributes()",
    "actiontext::trixattachment::from_attributes()",
    "actiondispatch::http::headers::from_hash()",
    "actiontext::fragment::from_html()",
    "activemodel::serializers::json#from_json()",
    "actiontext::attachable::from_node()",
    "actiontext::attachables::contentattachment::from_node()",
    "actiontext::attachables::remoteimage::from_node()",
    "actiontext::attachment::from_node()",
    "actiontext::attachmentgallery::from_node()",
    "activesupport::duration#from_now()",
    "actionview::logsubscriber#from_rails_root()",
    "actiondispatch::testresponse::from_response()",
    "mail::from_source()",
    "actiontext::attachments::trixconversion#from_trix_attachment()",
    "hash::from_trusted_xml()",
    "hash::from_xml()",
    "activerecord::core#frozen?()",
    "actiontext::attachment#full_attributes()",
    "activerecord::connectionadapters::transactionstate#full_commit!()",
    "activemodel::error#full_message()",
    "activemodel::errors#full_message()",
    "activemodel::errors#full_messages()",
    "activemodel::errors#full_messages_for()",
    "activerecord::connectionadapters::transactionstate#full_rollback!()",
    "activerecord::connectionadapters::savepointtransaction#full_rollback?()",
    "actiondispatch::exceptionwrapper#full_trace()",
    "actiondispatch::http::url::full_url_for()",
    "actiondispatch::request#fullpath()",
    "activerecord::connectionadapters::transactionstate#fully_committed?()",
    "activerecord::connectionadapters::transactionstate#fully_completed?()",
    "activerecord::connectionadapters::transactionstate#fully_rolledback?()",
    "activesupport::timewithzone#future?()",
    "dateandtime::calculations#future?()",
    "actiontext::content#gallery_attachments()",
    "rails::generators::actions#gem()",
    "rails::generators::actions#gem_group()",
    "actioncable::gem_version()",
    "actionmailbox::gem_version()",
    "actionmailer::gem_version()",
    "actiontext::gem_version()",
    "actionview::gem_version()",
    "activejob::gem_version()",
    "activemodel::gem_version()",
    "activerecord::gem_version()",
    "activestorage::gem_version()",
    "activesupport::gem_version()",
    "rails::gem_version()",
    "rails::appbuilder#gemfile()",
    "rails::pluginbuilder#gemfile()",
    "rails::pluginbuilder#gemfile_entry()",
    "rails::pluginbuilder#gemspec()",
    "activesupport::messageverifier#generate()",
    "rails::generators::actions#generate()",
    "activesupport::cachingkeygenerator#generate_key()",
    "activesupport::encryptedfile::generate_key()",
    "activesupport::keygenerator#generate_key()",
    "rails::generators::benchmarkgenerator#generate_layout()",
    "activemodel::errors#generate_message()",
    "abstractcontroller::collector::generate_method_for_mime()",
    "actionmailbox::inboundemail::messageid#generate_missing_message_id()",
    "actiondispatch::session::abstractsecurestore#generate_sid()",
    "actiondispatch::session::compatibility#generate_sid()",
    "rails::pluginbuilder#generate_test_dummy()",
    "activerecord::securetoken::classmethods#generate_unique_secure_token()",
    "activestorage::blob::generate_unique_secure_token()",
    "actioncontroller::testcase::behavior#generated_path()",
    "rails::engine::updater::generator()",
    "rails::generators::testing::behaviour#generator()",
    "rails::generators::base::generator_name()",
    "rails::application#generators()",
    "rails::engine::configuration#generators()",
    "rails::railtie::generators()",
    "actioncontroller::testcase::behavior#get()",
    "actiondispatch::integration::requesthelpers#get()",
    "actiondispatch::routing::mapper::httphelpers#get()",
    "activesupport::dependencies::classcache#get()",
    "actiondispatch::response#get_header()",
    "activesupport::timewithzone#getgm()",
    "datetime#getgm()",
    "activesupport::timewithzone#getlocal()",
    "datetime#getlocal()",
    "activesupport::timewithzone#getutc()",
    "datetime#getutc()",
    "numeric#gigabyte()",
    "numeric#gigabytes()",
    "rails::generators::actions#git()",
    "rails::appbuilder#gitattributes()",
    "rails::generators::actions#github()",
    "rails::generators::appbase::gemfileentry::github()",
    "rails::appbuilder#gitignore()",
    "rails::pluginbuilder#gitignore()",
    "actioncontroller::requestforgeryprotection#global_csrf_token()",
    "activesupport::timewithzone#gmt?()",
    "activesupport::timewithzone#gmt_offset()",
    "activesupport::timewithzone#gmtime()",
    "datetime#gmtime()",
    "activesupport::timewithzone#gmtoff()",
    "activesupport::multibyte::chars#grapheme_length()",
    "activerecord::querymethods#group()",
    "activemodel::errors#group_by_attribute()",
    "actionview::helpers::formbuilder#grouped_collection_select()",
    "actionview::helpers::formoptionshelper#grouped_collection_select()",
    "actionview::helpers::formoptionshelper#grouped_options_for_select()",
    "rails::groups()",
    "erb::util::h()",
    "actioncontroller::httpauthentication::digest#ha1()",
    "actioncontroller::logsubscriber#halted_callback()",
    "actioncontroller::requestforgeryprotection#handle_unverified_request()",
    "actioncontroller::requestforgeryprotection::protectionmethods::exception#handle_unverified_request()",
    "actioncontroller::requestforgeryprotection::protectionmethods::nullsession#handle_unverified_request()",
    "actioncontroller::requestforgeryprotection::protectionmethods::resetsession#handle_unverified_request()",
    "actionview::template::handlers::erb#handles_encoding?()",
    "activerecord::associations::classmethods#has_and_belongs_to_many()",
    "activerecord::attributemethods#has_attribute?()",
    "activerecord::attributemethods::classmethods#has_attribute?()",
    "actioncontroller::httpauthentication::basic#has_basic_credentials?()",
    "activerecord::attributemethods::dirty#has_changes_to_save?()",
    "actiondispatch::response#has_header?()",
    "actioncontroller::parameters#has_key?()",
    "activemodel::errors#has_key?()",
    "activesupport::hashwithindifferentaccess#has_key?()",
    "activerecord::associations::classmethods#has_many()",
    "activestorage::attached::model#has_many_attached()",
    "actiondispatch::routing::mapper::base#has_named_route?()",
    "activerecord::associations::classmethods#has_one()",
    "activestorage::attached::model#has_one_attached()",
    "actiontext::attribute#has_rich_text()",
    "activemodel::securepassword::classmethods#has_secure_password()",
    "activerecord::securetoken::classmethods#has_secure_token()",
    "actioncontroller::parameters#has_value?()",
    "actioncontroller::parameters#hash()",
    "activemodel::type::value#hash()",
    "activerecord::core#hash()",
    "activesupport::duration#hash()",
    "activesupport::timewithzone#hash()",
    "activerecord::querymethods#having()",
    "actioncontroller::head#head()",
    "actioncontroller::testcase::behavior#head()",
    "actiondispatch::integration::requesthelpers#head()",
    "actiondispatch::routing::consoleformatter::base#header()",
    "actiondispatch::routing::consoleformatter::sheet#header()",
    "actiondispatch::routing::htmltableformatter#header()",
    "actiondispatch::request#headers()",
    "actionmailer::base#headers()",
    "activestorage::service#headers_for_direct_upload()",
    "activestorage::service::azurestorageservice#headers_for_direct_upload()",
    "activestorage::service::diskservice#headers_for_direct_upload()",
    "activestorage::service::gcsservice#headers_for_direct_upload()",
    "activestorage::service::s3service#headers_for_direct_upload()",
    "actionmailbox::ingresses::mandrill::inboundemailscontroller#health_check()",
    "rails::command::base#help()",
    "rails::generators::help()",
    "abstractcontroller::helpers::classmethods#helper()",
    "rails::consolemethods#helper()",
    "actioncontroller::helpers::classmethods#helper_attr()",
    "actionview::testcase::behavior::classmethods#helper_class()",
    "abstractcontroller::helpers::classmethods#helper_method()",
    "actionview::testcase::behavior::classmethods#helper_method()",
    "actioncontroller::helpers#helpers()",
    "actioncontroller::helpers::classmethods#helpers()",
    "rails::engine#helpers()",
    "rails::engine#helpers_paths()",
    "activerecord::connectionadapters::postgresql::oid::bit::data#hex?()",
    "actionview::helpers::formbuilder#hidden_field()",
    "actionview::helpers::formhelper#hidden_field()",
    "actionview::helpers::formtaghelper#hidden_field_tag()",
    "rails::generators::hidden_namespaces()",
    "rails::generators::base::hide!()",
    "rails::command::base::hide_command!()",
    "rails::generators::hide_namespace()",
    "rails::generators::hide_namespaces()",
    "actionview::helpers::texthelper#highlight()",
    "rails::generators::base::hook_for()",
    "actiondispatch::http::url#host()",
    "actiondispatch::integration::session#host()",
    "activerecord::databaseconfigurations::hashconfig#host()",
    "actiondispatch::testrequest#host=()",
    "actiondispatch::http::url#host_with_port()",
    "numeric#hour()",
    "numeric#hours()",
    "activerecord::connectionadapters::postgresql::columnmethods#hstore()",
    "mime::alltype#html?()",
    "mime::type#html?()",
    "actiondispatch::assertions#html_document()",
    "erb::util::html_escape()",
    "erb::util::html_escape_once()",
    "string#html_safe()",
    "activesupport::safebuffer#html_safe?()",
    "numeric#html_safe?()",
    "object#html_safe?()",
    "actiondispatch::request#http_auth_salt()",
    "actioncontroller::httpauthentication::basic::controllermethods#http_basic_authenticate_or_request_with()",
    "actioncontroller::httpauthentication::basic::controllermethods::classmethods#http_basic_authenticate_with()",
    "actioncontroller::conditionalget#http_cache_forever()",
    "activesupport::timewithzone#httpdate()",
    "actiondispatch::integration::session#https!()",
    "actiondispatch::integration::session#https?()",
    "activemodel::name#human()",
    "activesupport::inflector::inflections#human()",
    "activemodel::translation#human_attribute_name()",
    "rails::generators::namedbase#human_name()",
    "activesupport::inflector#humanize()",
    "string#humanize()",
    "activemodel::translation#i18n_scope()",
    "rails::generators::namedbase#i18n_scope()",
    "activerecord::attributemethods::primarykey#id()",
    "activerecord::attributemethods::primarykey#id=()",
    "activerecord::attributemethods::primarykey#id?()",
    "activerecord::attributemethods::primarykey#id_before_type_cast()",
    "activerecord::attributemethods::primarykey#id_in_database()",
    "activerecord::attributemethods::primarykey#id_was()",
    "activestorage::blob::identifiable#identified?()",
    "actioncable::connection::identification::classmethods#identified_by()",
    "actioncable::subscriptionadapter::base#identifier()",
    "activerecord::fixtureset::identify()",
    "activestorage::blob::identifiable#identify()",
    "activestorage::blob::identifiable#identify_without_saving()",
    "activesupport::notifications::event#idle_time()",
    "activerecord::databaseconfigurations::hashconfig#idle_timeout()",
    "activerecord::calculations#ids()",
    "actiondispatch::http::cache::request#if_modified_since()",
    "actiondispatch::testrequest#if_modified_since=()",
    "actiondispatch::http::cache::request#if_none_match()",
    "actiondispatch::testrequest#if_none_match=()",
    "actiondispatch::http::cache::request#if_none_match_etags()",
    "activerecord::modelschema::classmethods#ignored_columns()",
    "activerecord::modelschema::classmethods#ignored_columns=()",
    "activestorage::preview#image()",
    "activestorage::variant#image()",
    "activestorage::variantwithrecord#image()",
    "activestorage::blob#image?()",
    "actionview::helpers::asseturlhelper#image_path()",
    "actionview::helpers::formtaghelper#image_submit_tag()",
    "actionview::helpers::assettaghelper#image_tag()",
    "actionview::helpers::asseturlhelper#image_url()",
    "activerecord::modelschema::immutable_strings_by_default=()",
    "activerecord::modelschema::implicit_order_column()",
    "activerecord::modelschema::implicit_order_column=()",
    "activemodel::errors#import()",
    "activesupport::timewithzone#in()",
    "date#in()",
    "datetime#in()",
    "time#in()",
    "object#in?()",
    "activerecord::batches#in_batches()",
    "activerecord::connectionadapters::databaselimits#in_clause_length()",
    "activesupport::duration#in_days()",
    "array#in_groups()",
    "array#in_groups_of()",
    "activesupport::duration#in_hours()",
    "numeric#in_milliseconds()",
    "activesupport::duration#in_minutes()",
    "activesupport::duration#in_months()",
    "actionview::base#in_rendering_context()",
    "activesupport::duration#in_seconds()",
    "activesupport::timewithzone#in_time_zone()",
    "dateandtime::zones#in_time_zone()",
    "string#in_time_zone()",
    "activesupport::duration#in_weeks()",
    "activesupport::duration#in_years()",
    "actionmailbox::inboundemail::incineratable#incinerate()",
    "actionmailbox::inboundemail::incineratable#incinerate_later()",
    "actioncontroller::parameters#include?()",
    "actiondispatch::http::headers#include?()",
    "activemodel::errors#include?()",
    "activerecord::associations::collectionproxy#include?()",
    "activerecord::findermethods#include?()",
    "activesupport::comparewithrange#include?()",
    "activesupport::hashwithindifferentaccess#include?()",
    "activemodel::validations::acceptancevalidator::lazilydefineattributes#included()",
    "activesupport::concern#included()",
    "activesupport::deprecation::deprecatedconstantaccessor::included()",
    "activerecord::querymethods#includes()",
    "activerecord::result#includes_column?()",
    "array#including()",
    "enumerable#including()",
    "activerecord::persistence#increment()",
    "activesupport::cache::filestore#increment()",
    "activesupport::cache::memcachestore#increment()",
    "activesupport::cache::memorystore#increment()",
    "activesupport::cache::nullstore#increment()",
    "activesupport::cache::rediscachestore#increment()",
    "activesupport::cache::store#increment()",
    "activerecord::persistence#increment!()",
    "activerecord::countercache::classmethods#increment_counter()",
    "rails::generators::base#indent()",
    "string#indent()",
    "string#indent!()",
    "rails::generators::actions#indentation()",
    "activerecord::connectionadapters::table#index()",
    "activerecord::connectionadapters::tabledefinition#index()",
    "rails::rails::conductor::actionmailbox::inboundemailscontroller#index()",
    "activerecord::connectionadapters::abstractadapter#index_algorithms()",
    "activerecord::connectionadapters::abstractmysqladapter#index_algorithms()",
    "activerecord::connectionadapters::postgresqladapter#index_algorithms()",
    "enumerable#index_by()",
    "activerecord::connectionadapters::schemastatements#index_exists?()",
    "activerecord::connectionadapters::table#index_exists?()",
    "rails::generators::namedbase#index_helper()",
    "activerecord::connectionadapters::postgresql::schemastatements#index_name_exists?()",
    "activerecord::connectionadapters::schemastatements#index_name_exists?()",
    "activerecord::connectionadapters::databaselimits#index_name_length()",
    "enumerable#index_with()",
    "activerecord::connectionadapters::schemacache#indexes()",
    "activerecord::connectionadapters::schemastatements#indexes()",
    "activerecord::connectionadapters::postgresql::columnmethods#inet()",
    "activesupport::inflector#inflections()",
    "activesupport::inheritableoptions#inheritable_copy()",
    "activerecord::modelschema::classmethods#inheritance_column()",
    "activerecord::modelschema::classmethods#inheritance_column=()",
    "abstractcontroller::helpers::classmethods#inherited()",
    "actioncontroller::paramswrapper::options::classmethods#inherited()",
    "actioncontroller::railties::helpers#inherited()",
    "actioncontroller::rendering::classmethods#inherited()",
    "activejob::callbacks::classmethods#inherited()",
    "activerecord::inheritance::classmethods#inherited()",
    "activesupport::descendantstracker#inherited()",
    "rails::application::inherited()",
    "rails::engine::inherited()",
    "rails::railtie::configurable::classmethods#inherited()",
    "activerecord::connectionadapters::schemacache#init_with()",
    "activerecord::core#init_with()",
    "actiondispatch::contentsecuritypolicy#initialize_copy()",
    "actiondispatch::flash::flashhash#initialize_copy()",
    "actiondispatch::middlewarestack#initialize_copy()",
    "actiondispatch::permissionspolicy#initialize_copy()",
    "activerecord::relation#initialize_copy()",
    "activerecord::result#initialize_copy()",
    "activesupport::safebuffer#initialize_copy()",
    "activerecord::connectionadapters::schemacache#initialize_dup()",
    "activerecord::inheritance#initialize_dup()",
    "activerecord::modelschema::classmethods#initialize_load_schema_monitor()",
    "actiondispatch::session::compatibility#initialize_sid()",
    "rails::application#initialized?()",
    "rails::application#initializer()",
    "rails::generators::actions#initializer()",
    "rails::initializable::classmethods#initializer()",
    "rails::initializable#initializers()",
    "rails::initializable::classmethods#initializers()",
    "rails::initializable::classmethods#initializers_chain()",
    "rails::initializable::classmethods#initializers_for()",
    "actionmailer::base::lateattachmentsproxy#inline()",
    "array#inquiry()",
    "string#inquiry()",
    "actiondispatch::middlewarestack#insert()",
    "activerecord::connectionadapters::databasestatements#insert()",
    "activerecord::persistence::classmethods#insert()",
    "activesupport::safebuffer#insert()",
    "rails::configuration::middlewarestackproxy#insert()",
    "activerecord::persistence::classmethods#insert!()",
    "actiondispatch::middlewarestack#insert_after()",
    "rails::configuration::middlewarestackproxy#insert_after()",
    "activerecord::persistence::classmethods#insert_all()",
    "activerecord::persistence::classmethods#insert_all!()",
    "actiondispatch::middlewarestack#insert_before()",
    "rails::configuration::middlewarestackproxy#insert_before()",
    "activerecord::connectionadapters::databasestatements#insert_fixture()",
    "activerecord::connectionadapters::databasestatements#insert_fixtures_set()",
    "rails::generators::namedbase#inside_template()",
    "rails::generators::namedbase#inside_template?()",
    "actioncontroller::parameters#inspect()",
    "actiondispatch::middlewarestack::middleware#inspect()",
    "actiondispatch::routing::pathredirect#inspect()",
    "actiontext::attachment#inspect()",
    "actiontext::attachmentgallery#inspect()",
    "actiontext::content#inspect()",
    "actionview::base::inspect()",
    "actionview::template#inspect()",
    "activerecord::core#inspect()",
    "activerecord::relation#inspect()",
    "activesupport::cache::rediscachestore#inspect()",
    "activesupport::deprecation::deprecatedconstantproxy#inspect()",
    "activesupport::orderedoptions#inspect()",
    "activesupport::timewithzone#inspect()",
    "date#inspect()",
    "datetime#inspect()",
    "rails::info::inspect()",
    "activerecord::querycache::install_executor_hooks()",
    "activesupport::currentattributes::instance()",
    "activesupport::inflector::inflections::instance()",
    "activesupport::perthreadregistry#instance()",
    "rails::application::instance()",
    "rails::railtie::instance()",
    "rails::railtie::configurable::classmethods#instance()",
    "activerecord::attributemethods::classmethods#instance_method_already_implemented?()",
    "activerecord::attributemethods::primarykey::classmethods#instance_method_already_implemented?()",
    "object#instance_values()",
    "object#instance_variable_names()",
    "activerecord::persistence::classmethods#instantiate()",
    "activerecord::fixtureset::instantiate_all_loaded_fixtures()",
    "activerecord::fixtureset::instantiate_fixtures()",
    "actionview::template#instrument()",
    "activesupport::notifications::instrument()",
    "activesupport::notifications::instrumenter#instrument()",
    "activesupport::notifications::instrumenter()",
    "activerecord::connectionadapters::postgresql::columnmethods#int4range()",
    "activerecord::connectionadapters::postgresql::columnmethods#int8range()",
    "actiondispatch::integration::runner#integration_session()",
    "actiondispatch::routing::routewrapper#internal?()",
    "activerecord::modelschema::internal_metadata_table_name()",
    "activerecord::modelschema::internal_metadata_table_name=()",
    "abstractcontroller::base::internal_methods()",
    "activerecord::connectionadapters::postgresql::columnmethods#interval()",
    "activemodel::validations#invalid?()",
    "activerecord::migration::commandrecorder#inverse_of()",
    "rails::command::invoke()",
    "rails::generators::invoke()",
    "actioncable::subscriptionadapter::async::asyncsubscribermap#invoke_callback()",
    "actioncable::subscriptionadapter::postgresql::listener#invoke_callback()",
    "actioncable::subscriptionadapter::redis::listener#invoke_callback()",
    "actioncable::subscriptionadapter::subscribermap#invoke_callback()",
    "actiondispatch::request#ip()",
    "actiondispatch::remoteip::getip#ips_from()",
    "activesupport::inflector::inflections#irregular()",
    "activesupport::timewithzone#is_a?()",
    "loaderror#is_missing?()",
    "activerecord::type::internal::timezone#is_utc?()",
    "string#is_utf8?()",
    "activesupport::timewithzone#isdst()",
    "activesupport::duration#iso8601()",
    "activesupport::timewithzone#iso8601()",
    "activesupport::timezone#iso8601()",
    "rails::application#isolate_namespace()",
    "rails::engine::isolate_namespace()",
    "actionview::helpers::javascripthelper#j()",
    "actionview::helpers::assettaghelper#javascript_include_tag()",
    "actionview::helpers::asseturlhelper#javascript_path()",
    "actionview::helpers::javascripthelper#javascript_tag()",
    "actionview::helpers::asseturlhelper#javascript_url()",
    "activejob::enqueuing::classmethods#job_or_instantiate()",
    "activerecord::relation#joined_includes_values()",
    "activerecord::querymethods#joins()",
    "rails::generators::namedbase#js_template()",
    "erb::util::json_escape()",
    "activerecord::connectionadapters::postgresql::columnmethods#jsonb()",
    "actiondispatch::flash::flashhash#keep()",
    "actioncontroller::parameters#keep_if()",
    "activestorage::blob#key()",
    "activestorage::preview#key()",
    "activestorage::variant#key()",
    "activestorage::variation#key()",
    "activesupport::encryptedfile#key()",
    "actioncontroller::parameters#key?()",
    "actiondispatch::flash::flashhash#key?()",
    "actiondispatch::http::headers#key?()",
    "actiondispatch::request#key?()",
    "activemodel::errors#key?()",
    "activesupport::dependencies::classcache#key?()",
    "activesupport::hashwithindifferentaccess#key?()",
    "rails::application#key_generator()",
    "activesupport::messageencryptor::key_len()",
    "activesupport::cache::store#key_matcher()",
    "actioncontroller::parameters#keys()",
    "actiondispatch::flash::flashhash#keys()",
    "activemodel::errors#keys()",
    "rails::paths::root#keys()",
    "numeric#kilobyte()",
    "numeric#kilobytes()",
    "activemodel::validator::kind()",
    "activemodel::validator#kind()",
    "activesupport::timewithzone#kind_of?()",
    "activejob::serializers::objectserializer#klass()",
    "activerecord::reflection::macroreflection#klass()",
    "abstractcontroller::translation#l()",
    "actionview::helpers::translationhelper#l()",
    "actionview::helpers::formbuilder#label()",
    "actionview::helpers::formhelper#label()",
    "actionview::helpers::formtaghelper#label_tag()",
    "actiondispatch::middlewarestack#last()",
    "activerecord::associations::collectionproxy#last()",
    "activerecord::findermethods#last()",
    "activerecord::result#last()",
    "rails::paths::path#last()",
    "string#last()",
    "activerecord::findermethods#last!()",
    "actionview::partialiteration#last?()",
    "actiondispatch::http::cache::response#last_modified()",
    "actiondispatch::http::cache::response#last_modified=()",
    "actiondispatch::http::cache::response#last_modified?()",
    "dateandtime::calculations#last_month()",
    "dateandtime::calculations#last_quarter()",
    "dateandtime::calculations#last_week()",
    "dateandtime::calculations#last_weekday()",
    "dateandtime::calculations#last_year()",
    "actionview::layouts::classmethods#layout()",
    "activerecord::connectionadapters::abstractadapter#lease()",
    "activerecord::querymethods#left_joins()",
    "activerecord::querymethods#left_outer_joins()",
    "activerecord::associations::collectionproxy#length()",
    "activerecord::result#length()",
    "rails::appbuilder#lib()",
    "rails::generators::actions#lib()",
    "rails::pluginbuilder#lib()",
    "rails::pluginbuilder#license()",
    "activerecord::querymethods#limit()",
    "activesupport::multibyte::chars#limit()",
    "activerecord::connectionadapters::postgresql::columnmethods#line()",
    "actionview::helpers::urlhelper#link_to()",
    "actionview::helpers::urlhelper#link_to_if()",
    "actionview::helpers::urlhelper#link_to_unless()",
    "actionview::helpers::urlhelper#link_to_unless_current()",
    "actiontext::content#links()",
    "actioncable::subscriptionadapter::postgresql::listener#listen()",
    "actioncable::subscriptionadapter::redis::listener#listen()",
    "activesupport::notifications::fanout#listeners_for()",
    "activesupport::notifications::fanout#listening?()",
    "actiontext::serialization#load()",
    "activerecord::relation#load()",
    "rails::engine#load_config_initializer()",
    "rails::engine#load_console()",
    "rails::application::configuration#load_defaults()",
    "activerecord::connectionadapters::schemacache::load_from()",
    "rails::command::actions#load_generators()",
    "rails::engine#load_generators()",
    "activesupport::dependencies::load_interlock()",
    "rails::paths::root#load_paths()",
    "activerecord::relation#load_records()",
    "rails::engine#load_runner()",
    "activerecord::tasks::databasetasks#load_schema_current()",
    "activerecord::migration::load_schema_if_pending!()",
    "activerecord::tasks::databasetasks#load_seed()",
    "rails::engine#load_seed()",
    "rails::engine#load_server()",
    "actiondispatch::session::cookiestore#load_session()",
    "actiondispatch::session::stalesessioncheck#load_session()",
    "activerecord::associations::collectionproxy#load_target()",
    "rails::command::actions#load_tasks()",
    "rails::engine#load_tasks()",
    "activerecord::associations::collectionproxy#loaded()",
    "activerecord::associations::collectionproxy#loaded?()",
    "activesupport::dependencies::interlock#loading()",
    "activesupport::timezone#local()",
    "actiondispatch::request#local?()",
    "actionview::template#local_assigns()",
    "activesupport::timezone#local_to_utc()",
    "abstractcontroller::translation#localize()",
    "actionview::helpers::translationhelper#localize()",
    "actionview::testcase::behavior::renderedviewscollection#locals_for()",
    "activesupport::timewithzone#localtime()",
    "datetime#localtime()",
    "activerecord::querymethods#lock()",
    "activerecord::locking::pessimistic#lock!()",
    "activerecord::connectionadapters::connectionpool#lock_thread=()",
    "activerecord::locking::optimistic::classmethods#locking_column()",
    "activerecord::locking::optimistic::classmethods#locking_column=()",
    "activerecord::locking::optimistic::classmethods#locking_enabled?()",
    "actioncable::connection::taggedloggerproxy#log()",
    "activerecord::connectionadapters::abstractadapter#log()",
    "rails::appbuilder#log()",
    "rails::generators::actions#log()",
    "actioncontroller::logging::classmethods#log_at()",
    "activesupport::logsubscriber::log_subscribers()",
    "activesupport::logsubscriber::testhelper::mocklogger#logged()",
    "actioncable::server::base::logger()",
    "actioncontroller::logsubscriber#logger()",
    "actiondispatch::request#logger()",
    "actionmailer::logsubscriber#logger()",
    "actionview::digestor::logger()",
    "actionview::logsubscriber#logger()",
    "activestorage::analyzer#logger()",
    "activestorage::logsubscriber#logger()",
    "activestorage::previewer#logger()",
    "activesupport::logsubscriber::logger()",
    "activesupport::logsubscriber#logger()",
    "activesupport::logger::logger_outputs_to?()",
    "activerecord::connectionadapters::mysql::columnmethods#longblob()",
    "activerecord::connectionadapters::mysql::columnmethods#longtext()",
    "activejob::queueadapters::lookup()",
    "mime::type::lookup()",
    "activemodel::translation#lookup_ancestors()",
    "mime::type::lookup_by_extension()",
    "actionview::viewpaths#lookup_context()",
    "rails::command::lookup_paths()",
    "rails::generators::lookup_paths()",
    "activesupport::cache::lookup_store()",
    "activerecord::connectionadapters::postgresql::columnmethods#lseg()",
    "activerecord::connectionadapters::postgresql::columnmethods#ltree()",
    "activerecord::connectionadapters::postgresql::columnmethods#macaddr()",
    "actionmailbox::inboundemail#mail()",
    "actionmailer::base#mail()",
    "actionview::helpers::urlhelper#mail_to()",
    "actionmailbox::router::route#mailbox_class()",
    "actionmailbox::router#mailbox_for()",
    "actionmailbox::routing#mailbox_for()",
    "actionmailer::mailhelper#mailer()",
    "actionmailer::testcase::behavior::classmethods#mailer_class()",
    "actionmailer::base::mailer_name()",
    "actionmailer::base#mailer_name()",
    "actioncontroller::defaultheaders::classmethods#make_response!()",
    "actioncontroller::live::classmethods#make_response!()",
    "actioncontroller::metal::make_response!()",
    "activerecord::associations::collectionproxy#many?()",
    "activerecord::relation#many?()",
    "enumerable#many?()",
    "activerecord::autosaveassociation#mark_for_destruction()",
    "actioncontroller::requestforgeryprotection#mark_for_same_origin_verification!()",
    "activerecord::autosaveassociation#marked_for_destruction?()",
    "actioncontroller::requestforgeryprotection#marked_for_same_origin_verification?()",
    "activerecord::connectionadapters::schemacache#marshal_dump()",
    "activesupport::timewithzone#marshal_dump()",
    "activerecord::connectionadapters::schemacache#marshal_load()",
    "activesupport::timewithzone#marshal_load()",
    "actioncontroller::requestforgeryprotection#mask_token()",
    "actioncontroller::requestforgeryprotection#masked_authenticity_token()",
    "rails::appbuilder#master_key()",
    "actiondispatch::routing::mapper::base#match()",
    "actiondispatch::routing::mapper::resources#match()",
    "activerecord::dynamicmatchers::method::match()",
    "actionmailbox::router::route#match?()",
    "activemodel::error#match?()",
    "activemodel::name#match?()",
    "activesupport::timezone#match?()",
    "mime::type#match?()",
    "activemodel::validations::acceptancevalidator::lazilydefineattributes#matches?()",
    "activerecord::connectionadapters::realtransaction#materialize!()",
    "activerecord::connectionadapters::savepointtransaction#materialize!()",
    "module#mattr_accessor()",
    "module#mattr_reader()",
    "module#mattr_writer()",
    "activerecord::connectionadapters::postgresqladapter#max_identifier_length()",
    "activerecord::calculations#maximum()",
    "string#mb_chars()",
    "actiondispatch::request#media_type()",
    "actiondispatch::response#media_type()",
    "activerecord::connectionadapters::mysql::columnmethods#mediumblob()",
    "activerecord::connectionadapters::mysql::columnmethods#mediumtext()",
    "numeric#megabyte()",
    "numeric#megabytes()",
    "actiondispatch::routing::mapper::resources#member()",
    "actioncontroller::parameters#member?()",
    "activerecord::findermethods#member?()",
    "activesupport::hashwithindifferentaccess#member?()",
    "actioncontroller::parameters#merge()",
    "actiondispatch::http::headers#merge()",
    "activerecord::spawnmethods#merge()",
    "activesupport::hashwithindifferentaccess#merge()",
    "actioncontroller::parameters#merge!()",
    "actiondispatch::http::headers#merge!()",
    "activemodel::errors#merge!()",
    "activesupport::hashwithindifferentaccess#merge!()",
    "actiondispatch::response::merge_default_headers()",
    "actiondispatch::response#message()",
    "actionmailer::mailhelper#message()",
    "actionmailer::messagedelivery#message()",
    "actionview::syntaxerrorintemplate#message()",
    "activemodel::error#message()",
    "rails::application#message_verifier()",
    "activemodel::errors#messages()",
    "activemodel::errors#messages_for()",
    "activestorage::analyzer#metadata()",
    "activestorage::analyzer::imageanalyzer#metadata()",
    "activestorage::analyzer::videoanalyzer#metadata()",
    "actiondispatch::request#method()",
    "abstractcontroller::base::method_added()",
    "actioncable::channel::base::method_added()",
    "activesupport::subscriber::method_added()",
    "actiondispatch::assertions::routingassertions#method_missing()",
    "activemodel::attributemethods#method_missing()",
    "activerecord::migration#method_missing()",
    "activesupport::logsubscriber::testhelper::mocklogger#method_missing()",
    "activesupport::multibyte::chars#method_missing()",
    "activesupport::orderedoptions#method_missing()",
    "activesupport::timewithzone#method_missing()",
    "actiondispatch::request#method_symbol()",
    "date#midday()",
    "datetime#midday()",
    "time#midday()",
    "date#middle_of_day()",
    "datetime#middle_of_day()",
    "time#middle_of_day()",
    "actioncontroller::metal::middleware()",
    "activesupport::cache::strategy::localcache#middleware()",
    "rails::server#middleware()",
    "date#midnight()",
    "datetime#midnight()",
    "time#midnight()",
    "activerecord::migration::migrate()",
    "activerecord::migration#migrate()",
    "activerecord::tasks::databasetasks#migrate()",
    "activerecord::tasks::databasetasks#migrate_status()",
    "rails::generators::migration#migration_template()",
    "activerecord::databaseconfigurations::hashconfig#migrations_paths()",
    "activerecord::tasks::databasetasks#migrations_paths()",
    "activerecord::calculations#minimum()",
    "time#minus_with_coercion()",
    "time#minus_without_coercion()",
    "time#minus_without_duration()",
    "numeric#minute()",
    "numeric#minutes()",
    "activestorage::service::mirrorservice#mirror()",
    "activerecord::querymethods::wherechain#missing()",
    "nameerror#missing_name()",
    "nameerror#missing_name?()",
    "activemodel::naming#model_name()",
    "rails::generators::namedbase#model_resource_name()",
    "rails::generators::base#module_namespacing()",
    "module#module_parent()",
    "module#module_parent_name()",
    "module#module_parents()",
    "abstractcontroller::helpers::classmethods#modules_for_helpers()",
    "actioncontroller::helpers::classmethods#modules_for_helpers()",
    "activesupport::concurrency::loadinterlockawaremonitor#mon_enter()",
    "dateandtime::calculations#monday()",
    "activerecord::connectionadapters::postgresql::columnmethods#money()",
    "activesupport::notifications::monotonic_subscribe()",
    "integer#month()",
    "actionview::helpers::formbuilder#month_field()",
    "actionview::helpers::formhelper#month_field()",
    "actionview::helpers::formtaghelper#month_field_tag()",
    "integer#months()",
    "dateandtime::calculations#months_ago()",
    "dateandtime::calculations#months_since()",
    "actiondispatch::routing::mapper::base#mount()",
    "rails::generators::namedbase#mountable_engine?()",
    "actiondispatch::middlewarestack#move()",
    "rails::configuration::middlewarestackproxy#move()",
    "actiondispatch::middlewarestack#move_after()",
    "rails::configuration::middlewarestackproxy#move_after()",
    "actiondispatch::middlewarestack#move_before()",
    "rails::configuration::middlewarestackproxy#move_before()",
    "benchmark::ms()",
    "regexp#multiline?()",
    "actionview::helpers::formbuilder#multipart=()",
    "integer#multiple_of?()",
    "activesupport::cache::store#mute()",
    "activestorage::previewer::mupdfpreviewer::mutool_exists?()",
    "activestorage::previewer::mupdfpreviewer::mutool_path()",
    "actiondispatch::middlewarestack::middleware#name()",
    "actiondispatch::routing::routewrapper#name()",
    "activerecord::tasks::databasetasks#name()",
    "activesupport::timewithzone::name()",
    "actiondispatch::routing::mapper::resources#namespace()",
    "actiondispatch::routing::mapper::scoping#namespace()",
    "rails::command::base::namespace()",
    "rails::generators::base::namespace()",
    "rails::generators::base#namespace()",
    "rails::generators::base#namespaced?()",
    "rails::generators::namedbase#namespaced_class_path()",
    "rails::generators::base#namespaced_path()",
    "activerecord::connectionadapters::abstractmysqladapter#native_database_types()",
    "activerecord::connectionadapters::schemastatements#native_database_types()",
    "actioncontroller::mimeresponds::collector#negotiate_format()",
    "actiondispatch::http::mimenegotiation#negotiate_mime()",
    "actiondispatch::routing::mapper::resources#nested()",
    "actioncontroller::parameters#nested_attributes?()",
    "activesupport::hashwithindifferentaccess#nested_under_indifferent_access()",
    "activesupport::orderedhash#nested_under_indifferent_access()",
    "hash#nested_under_indifferent_access()",
    "abstractcontroller::actionnotfound::new()",
    "abstractcontroller::actionnotfound::correction::new()",
    "abstractcontroller::doublerendererror::new()",
    "abstractcontroller::helpers::missinghelpererror::new()",
    "actioncable::channel::base::new()",
    "actioncable::channel::connectionstub::new()",
    "actioncable::channel::noninferrablechannelerror::new()",
    "actioncable::connection::base::new()",
    "actioncable::connection::noninferrableconnectionerror::new()",
    "actioncable::connection::streameventloop::new()",
    "actioncable::connection::taggedloggerproxy::new()",
    "actioncable::connection::testconnection::new()",
    "actioncable::remoteconnections::new()",
    "actioncable::remoteconnections::remoteconnection::new()",
    "actioncable::server::base::new()",
    "actioncable::server::broadcasting::broadcaster::new()",
    "actioncable::server::configuration::new()",
    "actioncable::subscriptionadapter::async::asyncsubscribermap::new()",
    "actioncable::subscriptionadapter::base::new()",
    "actioncable::subscriptionadapter::postgresql::listener::new()",
    "actioncable::subscriptionadapter::redis::listener::new()",
    "actioncable::subscriptionadapter::subscribermap::new()",
    "actioncontroller::live::sse::new()",
    "actioncontroller::metal::new()",
    "actioncontroller::mimeresponds::collector::new()",
    "actioncontroller::missingrenderer::new()",
    "actioncontroller::parametermissing::correction::new()",
    "actioncontroller::parameters::new()",
    "actioncontroller::renderer#new()",
    "actioncontroller::renderer::new()",
    "actioncontroller::requestforgeryprotection::protectionmethods::exception::new()",
    "actioncontroller::requestforgeryprotection::protectionmethods::nullsession::new()",
    "actioncontroller::requestforgeryprotection::protectionmethods::resetsession::new()",
    "actioncontroller::respondtomismatcherror::new()",
    "actioncontroller::urlgenerationerror::correction::new()",
    "actiondispatch::assertionresponse::new()",
    "actiondispatch::callbacks::new()",
    "actiondispatch::contentsecuritypolicy::new()",
    "actiondispatch::contentsecuritypolicy::middleware::new()",
    "actiondispatch::cookies::new()",
    "actiondispatch::debugexceptions::new()",
    "actiondispatch::debuglocks::new()",
    "actiondispatch::exceptionwrapper::new()",
    "actiondispatch::executor::new()",
    "actiondispatch::filehandler::new()",
    "actiondispatch::flash::new()",
    "actiondispatch::hostauthorization::new()",
    "actiondispatch::http::filterparameters::new()",
    "actiondispatch::http::parameters::parseerror::new()",
    "actiondispatch::http::url::new()",
    "actiondispatch::integration::runner::new()",
    "actiondispatch::integration::session::new()",
    "actiondispatch::middlewarestack::new()",
    "actiondispatch::middlewarestack::instrumentationproxy::new()",
    "actiondispatch::middlewarestack::middleware::new()",
    "actiondispatch::permissionspolicy::new()",
    "actiondispatch::permissionspolicy::middleware::new()",
    "actiondispatch::publicexceptions::new()",
    "actiondispatch::railsentitystore::new()",
    "actiondispatch::railsmetastore::new()",
    "actiondispatch::remoteip::new()",
    "actiondispatch::remoteip::getip::new()",
    "actiondispatch::request::new()",
    "actiondispatch::requestid::new()",
    "actiondispatch::response::new()",
    "actiondispatch::response::rackbody::new()",
    "actiondispatch::routing::consoleformatter::base::new()",
    "actiondispatch::routing::consoleformatter::expanded::new()",
    "actiondispatch::routing::htmltableformatter::new()",
    "actiondispatch::routing::mapper::resources#new()",
    "actiondispatch::routing::urlfor::new()",
    "actiondispatch::session::cachestore::new()",
    "actiondispatch::session::compatibility::new()",
    "actiondispatch::session::cookiestore::new()",
    "actiondispatch::session::cookiestore::sessionid::new()",
    "actiondispatch::session::memcachestore::new()",
    "actiondispatch::showexceptions::new()",
    "actiondispatch::static::new()",
    "actionmailbox::base::new()",
    "actionmailbox::inboundemail::incineratable::incineration::new()",
    "actionmailbox::ingresses::mailgun::inboundemailscontroller::authenticator::new()",
    "actionmailbox::ingresses::mandrill::inboundemailscontroller::authenticator::new()",
    "actionmailbox::relayer::new()",
    "actionmailbox::router::new()",
    "actionmailbox::router::route::new()",
    "actionmailer::base::new()",
    "actionmailer::collector::new()",
    "actionmailer::noninferrablemailererror::new()",
    "actionmailer::preview::new()",
    "actiontext::attachables::remoteimage::new()",
    "actiontext::attachment::new()",
    "actiontext::attachmentgallery::new()",
    "actiontext::content::new()",
    "actiontext::fragment::new()",
    "actiontext::trixattachment::new()",
    "actionview::abstractrenderer::renderedcollection::emptycollection::new()",
    "actionview::cacheexpiry::new()",
    "actionview::cacheexpiry::executor::new()",
    "actionview::digestor::node::new()",
    "actionview::filesystemresolver::new()",
    "actionview::fixtureresolver::new()",
    "actionview::helpers::formbuilder::new()",
    "actionview::helpers::numberhelper::invalidnumbererror::new()",
    "actionview::logsubscriber::new()",
    "actionview::partialiteration::new()",
    "actionview::partialrenderer::new()",
    "actionview::renderer::new()",
    "actionview::rendering::new()",
    "actionview::resolver::new()",
    "actionview::resolver::cache::smallcache::new()",
    "actionview::resolver::path::new()",
    "actionview::syntaxerrorintemplate::new()",
    "actionview::template::new()",
    "actionview::template::sources::file::new()",
    "actionview::template::types::type::new()",
    "actionview::testcase::behavior::classmethods#new()",
    "actionview::testcase::behavior::renderedviewscollection::new()",
    "actionview::testcase::testcontroller::new()",
    "actionview::unboundtemplate::new()",
    "activejob::core::new()",
    "activejob::queueadapters::asyncadapter::new()",
    "activejob::queueadapters::sneakersadapter::new()",
    "activemodel::attributemethods::classmethods::codegenerator::new()",
    "activemodel::deprecationhandlingdetailshash::new()",
    "activemodel::deprecationhandlingmessagearray::new()",
    "activemodel::deprecationhandlingmessagehash::new()",
    "activemodel::error::new()",
    "activemodel::errors::new()",
    "activemodel::model::new()",
    "activemodel::name::new()",
    "activemodel::nestederror::new()",
    "activemodel::securepassword::instancemethodsonactivation::new()",
    "activemodel::type::value::new()",
    "activemodel::unknownattributeerror::new()",
    "activemodel::validationerror::new()",
    "activemodel::validations::acceptancevalidator::lazilydefineattributes::new()",
    "activemodel::validator::new()",
    "activerecord::associationnotfounderror::correction::new()",
    "activerecord::associations::collectionproxy#new()",
    "activerecord::attributeassignmenterror::new()",
    "activerecord::attributemethods::serialization::columnnotserializableerror::new()",
    "activerecord::connectionadapters::abstractadapter::version::new()",
    "activerecord::connectionadapters::abstractmysqladapter::new()",
    "activerecord::connectionadapters::connectionhandler::new()",
    "activerecord::connectionadapters::connectionpool::new()",
    "activerecord::connectionadapters::connectionpool::queue::new()",
    "activerecord::connectionadapters::connectionpool::reaper::new()",
    "activerecord::connectionadapters::databasestatements::new()",
    "activerecord::connectionadapters::deduplicable::classmethods#new()",
    "activerecord::connectionadapters::mysql::tabledefinition::new()",
    "activerecord::connectionadapters::mysql2adapter::new()",
    "activerecord::connectionadapters::postgresql::altertable::new()",
    "activerecord::connectionadapters::postgresql::oid::bit::data::new()",
    "activerecord::connectionadapters::postgresql::tabledefinition::new()",
    "activerecord::connectionadapters::postgresqladapter::new()",
    "activerecord::connectionadapters::querycache::new()",
    "activerecord::connectionadapters::querycache::connectionpoolconfiguration::new()",
    "activerecord::connectionadapters::sqlite3adapter::new()",
    "activerecord::connectionadapters::savepointtransaction::new()",
    "activerecord::connectionadapters::schemacache::new()",
    "activerecord::connectionadapters::table::new()",
    "activerecord::connectionadapters::tabledefinition::new()",
    "activerecord::connectionadapters::transactionstate::new()",
    "activerecord::core::new()",
    "activerecord::databaseconfigurations::new()",
    "activerecord::databaseconfigurations::hashconfig::new()",
    "activerecord::databaseconfigurations::urlconfig::new()",
    "activerecord::dynamicmatchers::method::new()",
    "activerecord::eagerloadpolymorphicerror::new()",
    "activerecord::environmentmismatcherror::new()",
    "activerecord::fixtureset::new()",
    "activerecord::fixtureset::classcache::new()",
    "activerecord::hasmanythroughassociationnotfounderror::correction::new()",
    "activerecord::inheritance::classmethods#new()",
    "activerecord::inverseofassociationnotfounderror::correction::new()",
    "activerecord::middleware::databaseselector::new()",
    "activerecord::migration::new()",
    "activerecord::migration::checkpending::new()",
    "activerecord::migration::commandrecorder::new()",
    "activerecord::mismatchedforeignkey::new()",
    "activerecord::multiparameterassignmenterrors::new()",
    "activerecord::querymethods::wherechain::new()",
    "activerecord::recordinvalid::new()",
    "activerecord::recordnotdestroyed::new()",
    "activerecord::recordnotfound::new()",
    "activerecord::recordnotsaved::new()",
    "activerecord::reflection::macroreflection::new()",
    "activerecord::relation::new()",
    "activerecord::relation#new()",
    "activerecord::result::new()",
    "activerecord::staleobjecterror::new()",
    "activerecord::statementcache::partialquerycollector::new()",
    "activerecord::statementinvalid::new()",
    "activerecord::unknownprimarykey::new()",
    "activestorage::analyzer::new()",
    "activestorage::attached::new()",
    "activestorage::filename::new()",
    "activestorage::preview::new()",
    "activestorage::previewer::new()",
    "activestorage::service::azurestorageservice::new()",
    "activestorage::service::diskservice::new()",
    "activestorage::service::gcsservice::new()",
    "activestorage::service::mirrorservice::new()",
    "activestorage::service::s3service::new()",
    "activestorage::transformers::transformer::new()",
    "activestorage::variant::new()",
    "activestorage::variantwithrecord::new()",
    "activestorage::variation::new()",
    "activesupport::backtracecleaner::new()",
    "activesupport::cache::filestore::new()",
    "activesupport::cache::memcachestore::new()",
    "activesupport::cache::memorystore::new()",
    "activesupport::cache::rediscachestore::new()",
    "activesupport::cache::store::new()",
    "activesupport::cache::strategy::localcache::localstore::new()",
    "activesupport::cachingkeygenerator::new()",
    "activesupport::callbacks::conditionals::value::new()",
    "activesupport::concurrency::sharelock::new()",
    "activesupport::currentattributes::new()",
    "activesupport::dependencies::classcache::new()",
    "activesupport::dependencies::watchstack::new()",
    "activesupport::deprecation::new()",
    "activesupport::deprecation::deprecatedconstantproxy::new()",
    "activesupport::deprecation::deprecatedinstancevariableproxy::new()",
    "activesupport::deprecation::deprecatedobjectproxy::new()",
    "activesupport::encryptedconfiguration::new()",
    "activesupport::encryptedfile::new()",
    "activesupport::encryptedfile::invalidkeylengtherror::new()",
    "activesupport::encryptedfile::missingcontenterror::new()",
    "activesupport::encryptedfile::missingkeyerror::new()",
    "activesupport::fileupdatechecker::new()",
    "activesupport::gzip::stream::new()",
    "activesupport::hashwithindifferentaccess::new()",
    "activesupport::inflector::inflections::new()",
    "activesupport::inflector::inflections::uncountables::new()",
    "activesupport::inheritableoptions::new()",
    "activesupport::keygenerator::new()",
    "activesupport::logsubscriber::testhelper::mocklogger::new()",
    "activesupport::logger::new()",
    "activesupport::messageencryptor::new()",
    "activesupport::messageverifier::new()",
    "activesupport::multibyte::chars::new()",
    "activesupport::notifications::event::new()",
    "activesupport::notifications::fanout::new()",
    "activesupport::notifications::instrumenter::new()",
    "activesupport::parameterfilter::new()",
    "activesupport::reloader::new()",
    "activesupport::safebuffer::new()",
    "activesupport::safebuffer::safeconcaterror::new()",
    "activesupport::securecomparerotator::new()",
    "activesupport::subscriber::new()",
    "activesupport::taggedlogging::new()",
    "activesupport::testing::parallelization::server::new()",
    "activesupport::testing::parallelization::worker::new()",
    "activesupport::timewithzone::new()",
    "activesupport::timezone::new()",
    "activesupport::xmlconverter::disallowedtype::new()",
    "mime::alltype::new()",
    "mime::mimes::new()",
    "mime::type::new()",
    "minitest::backtracefilterwithfallback::new()",
    "rails::api::task::new()",
    "rails::application::new()",
    "rails::application::configuration::new()",
    "rails::application::defaultmiddlewarestack::new()",
    "rails::application::finisher::mutexhook::new()",
    "rails::application::routesreloader::new()",
    "rails::backtracecleaner::new()",
    "rails::configuration::middlewarestackproxy::new()",
    "rails::console::new()",
    "rails::dbconsole::new()",
    "rails::engine::new()",
    "rails::engine::configuration::new()",
    "rails::engine::railties::new()",
    "rails::generators::activemodel::new()",
    "rails::generators::appbase::gemfileentry::new()",
    "rails::initializable::initializer::new()",
    "rails::paths::path::new()",
    "rails::paths::root::new()",
    "rails::rack::logger::new()",
    "rails::rails::conductor::actionmailbox::inboundemails::sourcescontroller#new()",
    "rails::rails::conductor::actionmailbox::inboundemailscontroller#new()",
    "rails::railtie::configuration::new()",
    "rails::secrets::missingkeyerror::new()",
    "rails::server::new()",
    "rails::sourceannotationextractor::new()",
    "activerecord::connectionadapters::mysql2adapter::new_client()",
    "activerecord::connectionadapters::postgresqladapter::new_client()",
    "activesupport::dependencies::watchstack#new_constants()",
    "rails::generators::namedbase#new_helper()",
    "activerecord::persistence#new_record?()",
    "rails::consolemethods#new_session()",
    "time#next_day()",
    "activesupport::timewithzone#next_day?()",
    "dateandtime::calculations#next_day?()",
    "activerecord::migration#next_migration_number()",
    "time#next_month()",
    "dateandtime::calculations#next_occurring()",
    "dateandtime::calculations#next_quarter()",
    "activerecord::modelschema::classmethods#next_sequence_value()",
    "dateandtime::calculations#next_week()",
    "dateandtime::calculations#next_weekday()",
    "time#next_year()",
    "mime::nulltype#nil?()",
    "actiondispatch::routing::consoleformatter::base#no_routes()",
    "actiondispatch::routing::htmltableformatter#no_routes()",
    "activerecord::notouching::classmethods#no_touching()",
    "activerecord::notouching#no_touching?()",
    "actiontext::htmlconversion#node_to_html()",
    "actiontext::plaintextconversion#node_to_plain_text()",
    "actioncontroller::requestforgeryprotection#non_xhr_javascript_response?()",
    "actioncontroller::httpauthentication::digest#nonce()",
    "activerecord::querymethods#none()",
    "activerecord::relation#none?()",
    "date#noon()",
    "datetime#noon()",
    "time#noon()",
    "actioncontroller::requestforgeryprotection#normalize_action_path()",
    "actiondispatch::routing::mapper::normalize_name()",
    "actiondispatch::routing::mapper::normalize_path()",
    "activerecord::querymethods::wherechain#not()",
    "actiondispatch::http::cache::request#not_modified?()",
    "actiondispatch::flash::flashhash#notice()",
    "actiondispatch::flash::flashhash#notice=()",
    "actiondispatch::flash::flashhash#now()",
    "activesupport::timezone#now()",
    "actiondispatch::flash::flashhash#now_is_loaded?()",
    "datetime#nsec()",
    "activerecord::connectionadapters::transactionstate#nullify!()",
    "activerecord::connectionadapters::connectionpool::queue#num_waiting()",
    "actionview::helpers::formbuilder#number_field()",
    "actionview::helpers::formhelper#number_field()",
    "actionview::helpers::formtaghelper#number_field_tag()",
    "actionview::helpers::numberhelper#number_to_currency()",
    "activesupport::numberhelper#number_to_currency()",
    "activesupport::numberhelper#number_to_delimited()",
    "actionview::helpers::numberhelper#number_to_human()",
    "activesupport::numberhelper#number_to_human()",
    "actionview::helpers::numberhelper#number_to_human_size()",
    "activesupport::numberhelper#number_to_human_size()",
    "actionview::helpers::numberhelper#number_to_percentage()",
    "activesupport::numberhelper#number_to_percentage()",
    "actionview::helpers::numberhelper#number_to_phone()",
    "activesupport::numberhelper#number_to_phone()",
    "activesupport::numberhelper#number_to_rounded()",
    "actionview::helpers::numberhelper#number_with_delimiter()",
    "actionview::helpers::numberhelper#number_with_precision()",
    "activerecord::connectionadapters::postgresql::columnmethods#numrange()",
    "actionview::helpers::activemodelinstancetag#object()",
    "activemodel::errors#of_kind?()",
    "activerecord::querymethods#offset()",
    "activerecord::connectionadapters::postgresql::columnmethods#oid()",
    "activesupport::xmlmini_libxmlsax::hashbuilder#on_cdata_block()",
    "activesupport::xmlmini_libxmlsax::hashbuilder#on_characters()",
    "activesupport::xmlmini_libxmlsax::hashbuilder#on_end_document()",
    "activesupport::xmlmini_libxmlsax::hashbuilder#on_end_element()",
    "activesupport::lazyloadhooks#on_load()",
    "activesupport::xmlmini_libxmlsax::hashbuilder#on_start_document()",
    "activesupport::xmlmini_libxmlsax::hashbuilder#on_start_element()",
    "actioncable::channel::callbacks::classmethods#on_subscribe()",
    "actioncable::channel::callbacks::classmethods#on_unsubscribe()",
    "dateandtime::calculations#on_weekday?()",
    "dateandtime::calculations#on_weekend?()",
    "activerecord::relation#one?()",
    "activerecord::spawnmethods#only()",
    "actioncontroller::httpauthentication::digest#opaque()",
    "actiondispatch::http::uploadedfile#open()",
    "actiondispatch::railsentitystore#open()",
    "activestorage::blob#open()",
    "activestorage::service#open()",
    "actiondispatch::integration::runner#open_session()",
    "rails::server#opt_parser()",
    "rails::generators::actions#optimize_indentation()",
    "actiondispatch::routing::urlfor#optimize_routes_generation?()",
    "activerecord::querymethods#optimizer_hints()",
    "actionview::helpers::formoptionshelper#option_groups_from_collection_for_select()",
    "actiondispatch::http::url#optional_port()",
    "actiondispatch::integration::requesthelpers#options()",
    "actiondispatch::routing::mapper::httphelpers#options()",
    "actionview::helpers::formoptionshelper#options_for_select()",
    "actionview::helpers::formoptionshelper#options_from_collection_for_select()",
    "activerecord::connectionadapters::schemastatements#options_include_default?()",
    "activerecord::querymethods#or()",
    "activerecord::querymethods#order()",
    "activesupport::inflector#ordinal()",
    "integer#ordinal()",
    "activesupport::inflector#ordinalize()",
    "integer#ordinalize()",
    "activesupport::safebuffer#original_concat()",
    "actiondispatch::request#original_fullpath()",
    "actiondispatch::request#original_url()",
    "range#overlaps?()",
    "rails::appbuilder#package_json()",
    "activesupport::testcase::parallelize()",
    "activesupport::testcase::parallelize_setup()",
    "activesupport::testcase::parallelize_teardown()",
    "actioncontroller::parameterencoding::classmethods#param_encoding()",
    "activemodel::naming::param_key()",
    "actiondispatch::http::filterparameters#parameter_filter()",
    "actiondispatch::http::filterparameters#parameter_filter_for()",
    "actiondispatch::http::parameters::classmethods#parameter_parsers=()",
    "activesupport::inflector#parameterize()",
    "string#parameterize()",
    "actiondispatch::http::parameters#parameters()",
    "actioncontroller::metal#params()",
    "actioncontroller::strongparameters#params()",
    "actiondispatch::http::parameters#params()",
    "actioncontroller::metal#params=()",
    "actioncontroller::strongparameters#params=()",
    "actioncontroller::httpauthentication::token#params_array_from()",
    "actiondispatch::http::mimenegotiation#params_readable?()",
    "activesupport::notifications::event#parent_of?()",
    "activesupport::duration::parse()",
    "activesupport::timezone#parse()",
    "mime::type::parse()",
    "rails::server::options#parse!()",
    "mime::type::parse_data_with_trailing_star()",
    "activesupport::json::parse_error()",
    "mime::type::parse_trailing_star()",
    "actiondispatch::testresponse#parsed_body()",
    "uri::parser()",
    "actionview::helpers::formbuilder#password_field()",
    "actionview::helpers::formhelper#password_field()",
    "actionview::helpers::formtaghelper#password_field_tag()",
    "activesupport::timewithzone#past?()",
    "dateandtime::calculations#past?()",
    "actioncontroller::testcase::behavior#patch()",
    "actiondispatch::integration::requesthelpers#patch()",
    "actiondispatch::routing::mapper::httphelpers#patch()",
    "actiondispatch::http::uploadedfile#path()",
    "actiondispatch::routing::pathredirect#path()",
    "actiondispatch::routing::routewrapper#path()",
    "activerecord::connectionadapters::postgresql::columnmethods#path()",
    "rails::generators::appbase::gemfileentry::path()",
    "actiondispatch::testrequest#path=()",
    "actiondispatch::http::url::path_for()",
    "actiondispatch::http::parameters#path_parameters()",
    "actionview::helpers::asseturlhelper#path_to_asset()",
    "actionview::helpers::asseturlhelper#path_to_audio()",
    "actionview::helpers::asseturlhelper#path_to_font()",
    "actionview::helpers::asseturlhelper#path_to_image()",
    "actionview::helpers::asseturlhelper#path_to_javascript()",
    "actionview::helpers::asseturlhelper#path_to_stylesheet()",
    "actionview::helpers::asseturlhelper#path_to_video()",
    "rails::application::configuration#paths()",
    "rails::engine::configuration#paths()",
    "rails::paths::path#paths()",
    "activerecord::dynamicmatchers::method::pattern()",
    "activestorage::previewer::popplerpdfpreviewer::pdftoppm_exists?()",
    "activestorage::previewer::popplerpdfpreviewer::pdftoppm_path()",
    "actioncontroller::requestforgeryprotection#per_form_csrf_token()",
    "actioncable::channel::testcase::behavior#perform()",
    "actionmailbox::incinerationjob#perform()",
    "actionmailbox::routingjob#perform()",
    "activejob::execution#perform()",
    "activerecord::destroyassociationasyncjob#perform()",
    "activestorage::analyzejob#perform()",
    "activestorage::mirrorjob#perform()",
    "activestorage::purgejob#perform()",
    "actioncable::channel::base#perform_action()",
    "activejob::testhelper#perform_enqueued_jobs()",
    "activesupport::testing::parallelization::worker#perform_job()",
    "activejob::enqueuing::classmethods#perform_later()",
    "activejob::execution#perform_now()",
    "activejob::execution::classmethods#perform_now()",
    "abstractcontroller::base#performed?()",
    "actioncontroller::metal#performed?()",
    "activejob::queueadapters::testadapter#performed_jobs()",
    "activesupport::timewithzone#period()",
    "activesupport::timezone#period_for_local()",
    "activesupport::timezone#period_for_utc()",
    "actioncable::channel::periodictimers::classmethods#periodically()",
    "actiondispatch::cookies::chainedcookiejars#permanent()",
    "actionmailbox::relayer::result#permanent_failure?()",
    "actioncontroller::permissionspolicy::classmethods#permissions_policy()",
    "actiondispatch::permissionspolicy::request#permissions_policy()",
    "rails::application::configuration#permissions_policy()",
    "actiondispatch::permissionspolicy::request#permissions_policy=()",
    "actioncontroller::parameters#permit()",
    "actioncontroller::parameters#permit!()",
    "activesupport::dependencies::interlock#permit_concurrent_loads()",
    "actioncontroller::parameters#permitted?()",
    "activemodel::model#persisted?()",
    "activerecord::persistence#persisted?()",
    "numeric#petabyte()",
    "numeric#petabytes()",
    "actionview::helpers::formbuilder#phone_field()",
    "actionview::helpers::formhelper#phone_field()",
    "actionview::helpers::formtaghelper#phone_field_tag()",
    "actionview::helpers::urlhelper#phone_to()",
    "activerecord::calculations#pick()",
    "enumerable#pick()",
    "activerecord::associations::collectionproxy#pluck()",
    "activerecord::calculations#pluck()",
    "enumerable#pluck()",
    "minitest::plugin_rails_init()",
    "minitest::plugin_rails_options()",
    "actiondispatch::contentsecuritypolicy#plugin_types()",
    "activemodel::naming::plural()",
    "activesupport::inflector::inflections#plural()",
    "rails::generators::namedbase#plural_file_name()",
    "rails::generators::namedbase#plural_name()",
    "rails::generators::namedbase#plural_route_name()",
    "rails::generators::namedbase#plural_table_name()",
    "actionview::helpers::texthelper#pluralize()",
    "activesupport::inflector#pluralize()",
    "string#pluralize()",
    "activerecord::modelschema::pluralize_table_names()",
    "activerecord::modelschema::pluralize_table_names=()",
    "rails::generators::namedbase#pluralize_table_names?()",
    "activerecord::connectionadapters::postgresql::columnmethods#point()",
    "activerecord::connectionadapters::connectionpool::queue#poll()",
    "activerecord::connectionadapters::postgresql::columnmethods#polygon()",
    "activerecord::inheritance::classmethods#polymorphic_class_for()",
    "activerecord::inheritance::classmethods#polymorphic_name()",
    "actiondispatch::routing::polymorphicroutes#polymorphic_path()",
    "actiondispatch::routing::polymorphicroutes#polymorphic_url()",
    "activerecord::databaseconfigurations::hashconfig#pool()",
    "activesupport::testing::parallelization::server#pop()",
    "actiondispatch::http::url#port()",
    "actiondispatch::testrequest#port=()",
    "actiondispatch::http::url#port_string()",
    "actioncable::connection::streameventloop#post()",
    "actioncontroller::testcase::behavior#post()",
    "actiondispatch::integration::requesthelpers#post()",
    "actiondispatch::routing::mapper::httphelpers#post()",
    "activerecord::connectionadapters::abstractadapter#prefetch_primary_key?()",
    "activerecord::modelschema::classmethods#prefetch_primary_key?()",
    "activerecord::dynamicmatchers::findby::prefix()",
    "activerecord::dynamicmatchers::findbybang::prefix()",
    "activerecord::dynamicmatchers::method::prefix()",
    "activerecord::querymethods#preload()",
    "actionview::helpers::assettaghelper#preload_link_tag()",
    "actiondispatch::response#prepare!()",
    "rails::generators::testing::behaviour#prepare_destination()",
    "activerecord::connectionadapters::abstractadapter#prepared_statements()",
    "activesupport::safebuffer#prepend()",
    "abstractcontroller::callbacks::classmethods#prepend_after_action()",
    "abstractcontroller::callbacks::classmethods#prepend_around_action()",
    "abstractcontroller::callbacks::classmethods#prepend_before_action()",
    "actionview::viewpaths#prepend_view_path()",
    "actionview::viewpaths::classmethods#prepend_view_path()",
    "activesupport::concern#prepended()",
    "activesupport::testing::setupandteardown::prepended()",
    "object#presence()",
    "object#presence_in()",
    "object#present?()",
    "activerecord::core#pretty_print()",
    "activerecord::core::inspectionmask#pretty_print()",
    "activerecord::relation#pretty_print()",
    "time#prev_day()",
    "activesupport::timewithzone#prev_day?()",
    "dateandtime::calculations#prev_day?()",
    "time#prev_month()",
    "dateandtime::calculations#prev_occurring()",
    "dateandtime::calculations#prev_quarter()",
    "dateandtime::calculations#prev_week()",
    "dateandtime::calculations#prev_weekday()",
    "time#prev_year()",
    "activerecord::connectionadapters::abstractadapter#preventing_writes?()",
    "activestorage::blob::representable#preview()",
    "activestorage::previewer#preview()",
    "activestorage::previewer::mupdfpreviewer#preview()",
    "activestorage::previewer::popplerpdfpreviewer#preview()",
    "activestorage::previewer::videopreviewer#preview()",
    "actionmailer::preview::preview_name()",
    "activestorage::blob::representable#previewable?()",
    "actiontext::attachable#previewable_attachable?()",
    "actiontext::engine#previewable_attachable?()",
    "activemodel::dirty#previous_changes()",
    "activerecord::persistence#previously_new_record?()",
    "activerecord::attributemethods::primarykey::classmethods#primary_key()",
    "activerecord::connectionadapters::columnmethods#primary_key()",
    "activerecord::connectionadapters::postgresql::columnmethods#primary_key()",
    "activerecord::connectionadapters::schemastatements#primary_key()",
    "activerecord::attributemethods::primarykey::classmethods#primary_key=()",
    "activerecord::modelschema::primary_key_prefix_type()",
    "activerecord::modelschema::primary_key_prefix_type=()",
    "activerecord::connectionadapters::schemacache#primary_keys()",
    "rails::generators::print_generators()",
    "rails::generators::print_list()",
    "rails::command::base::printing_commands()",
    "activejob::queuepriority#priority()",
    "abstractcontroller::base#process()",
    "actioncontroller::live#process()",
    "actioncontroller::testcase::behavior#process()",
    "actiondispatch::integration::session#process()",
    "actionmailbox::base#process()",
    "actionmailer::logsubscriber#process()",
    "activestorage::transformers::transformer#process()",
    "activestorage::variantwithrecord#process()",
    "abstractcontroller::callbacks#process_action()",
    "actioncontroller::instrumentation#process_action()",
    "actioncontroller::logsubscriber#process_action()",
    "activestorage::preview#processed()",
    "activestorage::variant#processed()",
    "activestorage::variantwithrecord#processed()",
    "actionmailbox::inboundemail#processed?()",
    "actionmailer::messagedelivery#processed?()",
    "activestorage::variantwithrecord#processed?()",
    "activerecord::migration#proper_table_name()",
    "rails::info::property()",
    "actioncontroller::requestforgeryprotection#protect_against_forgery?()",
    "actionview::testcase::behavior#protect_against_forgery?()",
    "actioncontroller::requestforgeryprotection::classmethods#protect_from_forgery()",
    "activerecord::modelschema::classmethods#protected_environments()",
    "activerecord::modelschema::classmethods#protected_environments=()",
    "actiondispatch::http::url#protocol()",
    "actionview::helpers::capturehelper#provide()",
    "activesupport::multibyte::proxy_class()",
    "activesupport::multibyte::proxy_class=()",
    "activesupport::cache::memorystore#prune()",
    "activesupport::cache::memorystore#pruning?()",
    "activestorage::service#public?()",
    "actionview::helpers::asseturlhelper#public_compute_asset_path()",
    "rails::appbuilder#public_directory()",
    "rails::generators::public_namespaces()",
    "rails::public_path()",
    "activesupport::notifications::publish()",
    "activesupport::notifications::fanout#publish()",
    "actioncable::server::base#pubsub()",
    "actioncable::server::configuration#pubsub_adapter()",
    "activerecord::tasks::databasetasks#purge()",
    "activestorage::attached::many#purge()",
    "activestorage::attached::model#purge()",
    "activestorage::attached::one#purge()",
    "activestorage::attachment#purge()",
    "activestorage::blob#purge()",
    "activerecord::tasks::databasetasks#purge_all()",
    "activerecord::tasks::databasetasks#purge_current()",
    "activestorage::attached::many#purge_later()",
    "activestorage::attached::model#purge_later()",
    "activestorage::attached::one#purge_later()",
    "activestorage::attachment#purge_later()",
    "activestorage::blob#purge_later()",
    "activerecord::associations::collectionproxy#push()",
    "rails::paths::path#push()",
    "actioncontroller::testcase::behavior#put()",
    "actiondispatch::integration::requesthelpers#put()",
    "actiondispatch::routing::mapper::httphelpers#put()",
    "actionview::nullresolver#query()",
    "activerecord::attributemethods::query#query_attribute()",
    "activerecord::connectionadapters::querycache::connectionpoolconfiguration#query_cache_enabled()",
    "actioncontroller::testcase::behavior#query_parameter_names()",
    "actiondispatch::request#query_parameters()",
    "activejob::queueadapter::classmethods#queue_adapter()",
    "activejob::testhelper#queue_adapter()",
    "activejob::testhelper::testqueueadapter::classmethods#queue_adapter()",
    "activejob::queueadapter::classmethods#queue_adapter=()",
    "activejob::testhelper#queue_adapter_for_test()",
    "activejob::queueadapter::classmethods#queue_adapter_name()",
    "activejob::queuename::classmethods#queue_as()",
    "activejob::queuename#queue_name()",
    "activejob::queuepriority::classmethods#queue_with_priority()",
    "activerecord::connectionadapters::quoting#quote()",
    "rails::generators::actions#quote()",
    "activerecord::connectionadapters::quoting#quote_column_name()",
    "activerecord::connectionadapters::postgresql::quoting#quote_schema_name()",
    "activerecord::connectionadapters::mysql2adapter#quote_string()",
    "activerecord::connectionadapters::quoting#quote_string()",
    "activerecord::connectionadapters::quoting#quote_table_name()",
    "activerecord::connectionadapters::postgresql::quoting#quote_table_name_for_assignment()",
    "activerecord::connectionadapters::quoting#quote_table_name_for_assignment()",
    "activerecord::connectionadapters::quoting#quoted_date()",
    "activerecord::connectionadapters::quoting#quoted_false()",
    "activerecord::attributemethods::primarykey::classmethods#quoted_primary_key()",
    "activerecord::modelschema::classmethods#quoted_table_name()",
    "activerecord::connectionadapters::quoting#quoted_true()",
    "actiondispatch::routing::routewrapper#rack_app()",
    "actionview::helpers::formbuilder#radio_button()",
    "actionview::helpers::formhelper#radio_button()",
    "actionview::helpers::formtaghelper#radio_button_tag()",
    "rails::generators::actions#rails_command()",
    "actionview::logsubscriber#rails_root()",
    "rails::api::edgetask#rails_version()",
    "rails::api::stabletask#rails_version()",
    "rails::railtie::railtie_name()",
    "rails::engine#railties()",
    "activesupport::proxyobject#raise()",
    "activerecord::tasks::databasetasks#raise_for_multi_db()",
    "activemodel::validations#raise_validation_error()",
    "rails::generators::actions#rake()",
    "rails::application#rake_tasks()",
    "rails::railtie::rake_tasks()",
    "rails::appbuilder#rakefile()",
    "rails::generators::actions#rakefile()",
    "rails::pluginbuilder#rakefile()",
    "actionview::helpers::formbuilder#range_field()",
    "actionview::helpers::formhelper#range_field()",
    "actionview::helpers::formtaghelper#range_field_tag()",
    "actionview::helpers::outputsafetyhelper#raw()",
    "activerecord::connectionadapters::abstractadapter#raw_connection()",
    "actiondispatch::http::url#raw_host_with_port()",
    "actioncontroller::httpauthentication::token#raw_params()",
    "actiondispatch::request#raw_post()",
    "actiondispatch::request#raw_request_method()",
    "actiondispatch::http::uploadedfile#read()",
    "actiondispatch::railsentitystore#read()",
    "actiondispatch::railsmetastore#read()",
    "activesupport::cache::store#read()",
    "activesupport::encryptedconfiguration#read()",
    "activesupport::encryptedfile#read()",
    "activerecord::attributemethods::read#read_attribute()",
    "activerecord::attributemethods::beforetypecast#read_attribute_before_type_cast()",
    "activesupport::cache::strategy::localcache::localstore#read_entry()",
    "abstractcontroller::caching::fragments#read_fragment()",
    "activesupport::cache::rediscachestore#read_multi()",
    "activesupport::cache::store#read_multi()",
    "activesupport::cache::strategy::localcache::localstore#read_multi_entries()",
    "activerecord::store#read_store_attribute()",
    "date#readable_inspect()",
    "datetime#readable_inspect()",
    "rails::appbuilder#readme()",
    "rails::generators::actions#readme()",
    "rails::pluginbuilder#readme()",
    "activerecord::querymethods#readonly()",
    "activerecord::core#readonly!()",
    "activerecord::core#readonly?()",
    "activerecord::readonlyattributes::classmethods#readonly_attributes()",
    "actioncontroller::requestforgeryprotection#real_csrf_token()",
    "activerecord::connectionadapters::connectionpool#reap()",
    "activerecord::databaseconfigurations::hashconfig#reaping_frequency()",
    "actionmailbox::base::receive()",
    "actionmailbox::testhelper#receive_inbound_email_from_fixture()",
    "actionmailbox::testhelper#receive_inbound_email_from_mail()",
    "actionmailbox::testhelper#receive_inbound_email_from_source()",
    "mail::message#recipients()",
    "mail::message#recipients_addresses()",
    "activerecord::connectionadapters::abstractadapter#reconnect!()",
    "activerecord::connectionadapters::mysql2adapter#reconnect!()",
    "activerecord::connectionadapters::postgresqladapter#reconnect!()",
    "activerecord::connectionadapters::sqlite3adapter#reconnect!()",
    "activerecord::migration::commandrecorder#record()",
    "activesupport::testing::parallelization::server#record()",
    "actionview::recordidentifier#record_key_for_dom_id()",
    "activerecord::connectionadapters::abstractmysqladapter#recreate_database()",
    "module#redefine_method()",
    "module#redefine_singleton_method()",
    "actiondispatch::routing::redirection#redirect()",
    "actioncontroller::redirecting#redirect_back()",
    "rails::generators::namedbase#redirect_resource_name()",
    "actioncontroller::flash#redirect_to()",
    "actioncontroller::instrumentation#redirect_to()",
    "actioncontroller::logsubscriber#redirect_to()",
    "actioncontroller::redirecting#redirect_to()",
    "actiondispatch::testprocess#redirect_to_url()",
    "activesupport::cache::rediscachestore#redis()",
    "actionview::template::types::type#ref()",
    "mime::nulltype#ref()",
    "mime::type#ref()",
    "activerecord::connectionadapters::sqlite3::tabledefinition#references()",
    "activerecord::connectionadapters::table#references()",
    "activerecord::connectionadapters::tabledefinition#references()",
    "activerecord::querymethods#references()",
    "activerecord::reflection::classmethods#reflect_on_aggregation()",
    "activerecord::reflection::classmethods#reflect_on_all_aggregations()",
    "activerecord::reflection::classmethods#reflect_on_all_associations()",
    "activestorage::reflection::activerecordextensions::classmethods#reflect_on_all_attachments()",
    "activerecord::reflection::classmethods#reflect_on_all_autosave_associations()",
    "activerecord::reflection::classmethods#reflect_on_association()",
    "activestorage::reflection::activerecordextensions::classmethods#reflect_on_attachment()",
    "activerecord::reflection::classmethods#reflections()",
    "activemodel::type::register()",
    "activerecord::type::register()",
    "mime::type::register()",
    "mime::type::register_alias()",
    "mime::type::register_callback()",
    "rails::sourceannotationextractor::annotation::register_directories()",
    "actiondispatch::integrationtest::behavior::classmethods#register_encoder()",
    "rails::sourceannotationextractor::annotation::register_extensions()",
    "activesupport::executionwrapper::register_hook()",
    "actiondispatch::debugexceptions::register_interceptor()",
    "actionmailer::base::register_interceptor()",
    "actionmailer::base::register_interceptors()",
    "actionmailer::base::register_observer()",
    "actionmailer::base::register_observers()",
    "actionmailer::previews::classmethods#register_preview_interceptor()",
    "actionmailer::previews::classmethods#register_preview_interceptors()",
    "rails::sourceannotationextractor::annotation::register_tags()",
    "activerecord::tasks::databasetasks#register_task()",
    "activerecord::connectionadapters::deduplicable::classmethods#registry()",
    "rails::generators::namedbase#regular_class_path()",
    "activesupport::hashwithindifferentaccess#regular_update()",
    "activesupport::hashwithindifferentaccess#regular_writer()",
    "actioncable::channel::base#reject()",
    "actioncontroller::parameters#reject()",
    "activesupport::hashwithindifferentaccess#reject()",
    "activesupport::orderedhash#reject()",
    "actioncontroller::parameters#reject!()",
    "actioncable::connection::authorization#reject_unauthorized_connection()",
    "actioncable::channel::channelstub#rejected?()",
    "actionmailbox::relayer#relay()",
    "activerecord::connectionadapters::connectionpool#release_connection()",
    "activerecord::connectionadapters::savepoints#release_savepoint()",
    "activesupport::reloader#release_unload_lock!()",
    "activerecord::associations::collectionproxy#reload()",
    "activerecord::attributemethods::dirty#reload()",
    "activerecord::autosaveassociation#reload()",
    "activerecord::persistence#reload()",
    "activerecord::relation#reload()",
    "activesupport::reloader::reload!()",
    "rails::application::routesreloader#reload!()",
    "rails::consolemethods#reload!()",
    "rails::application#reload_routes!()",
    "actiondispatch::testrequest#remote_addr=()",
    "actioncable::server::base#remote_connections()",
    "actiondispatch::request#remote_ip()",
    "actiondispatch::request#remote_ip=()",
    "actioncontroller::renderers::remove()",
    "activerecord::connectionadapters::connectionpool#remove()",
    "activerecord::connectionadapters::table#remove()",
    "string#remove()",
    "string#remove!()",
    "activerecord::connectionadapters::schemastatements#remove_belongs_to()",
    "activerecord::connectionadapters::table#remove_belongs_to()",
    "actioncable::subscriptionadapter::postgresql::listener#remove_channel()",
    "actioncable::subscriptionadapter::redis::listener#remove_channel()",
    "actioncable::subscriptionadapter::subscribermap#remove_channel()",
    "activerecord::connectionadapters::schemastatements#remove_check_constraint()",
    "activerecord::connectionadapters::table#remove_check_constraint()",
    "activerecord::connectionadapters::schemastatements#remove_column()",
    "activerecord::connectionadapters::tabledefinition#remove_column()",
    "activerecord::connectionadapters::schemastatements#remove_columns()",
    "activerecord::connectionadapters::connectionhandler#remove_connection()",
    "activerecord::connectionhandling#remove_connection()",
    "activerecord::connectionadapters::connectionhandler#remove_connection_pool()",
    "activesupport::subscriber::remove_event_subscriber()",
    "activesupport::backtracecleaner#remove_filters!()",
    "activerecord::connectionadapters::schemastatements#remove_foreign_key()",
    "activerecord::connectionadapters::table#remove_foreign_key()",
    "rails::generators::base::remove_hook_for()",
    "activerecord::connectionadapters::schemastatements#remove_index()",
    "activerecord::connectionadapters::table#remove_index()",
    "module#remove_possible_method()",
    "module#remove_possible_singleton_method()",
    "activerecord::connectionadapters::schemastatements#remove_reference()",
    "activerecord::connectionadapters::table#remove_references()",
    "actioncontroller::remove_renderer()",
    "activesupport::backtracecleaner#remove_silencers!()",
    "actioncable::subscriptionadapter::subscribermap#remove_subscriber()",
    "activerecord::connectionadapters::schemastatements#remove_timestamps()",
    "activerecord::connectionadapters::table#remove_timestamps()",
    "activerecord::connectionadapters::table#rename()",
    "activerecord::connectionadapters::schemastatements#rename_column()",
    "activerecord::connectionadapters::abstractmysqladapter#rename_index()",
    "activerecord::connectionadapters::postgresql::schemastatements#rename_index()",
    "activerecord::connectionadapters::schemastatements#rename_index()",
    "activerecord::connectionadapters::table#rename_index()",
    "activesupport::xmlmini#rename_key()",
    "activemodel::attributemethods::classmethods::codegenerator#rename_method()",
    "activerecord::connectionadapters::abstractmysqladapter#rename_table()",
    "activerecord::connectionadapters::postgresql::schemastatements#rename_table()",
    "activerecord::connectionadapters::sqlite3adapter#rename_table()",
    "activerecord::connectionadapters::schemastatements#rename_table()",
    "abstractcontroller::rendering#render()",
    "actioncontroller::instrumentation#render()",
    "actioncontroller::renderer#render()",
    "actionview::helpers::renderinghelper#render()",
    "actionview::helpers::tags::actiontext#render()",
    "actionview::partialrenderer#render()",
    "actionview::renderer#render()",
    "actionview::template#render()",
    "actionview::testcase::behavior#render()",
    "actionview::testcase::behavior::locals#render()",
    "actiontext::contenthelper#render_action_text_attachments()",
    "actiontext::contenthelper#render_action_text_content()",
    "actiontext::content#render_attachment_galleries()",
    "actiontext::content#render_attachments()",
    "actionview::renderer#render_body()",
    "actionview::logsubscriber#render_collection()",
    "actionview::logsubscriber#render_count()",
    "actionview::logsubscriber#render_layout()",
    "actionview::logsubscriber#render_partial()",
    "actionview::logsubscriber#render_template()",
    "abstractcontroller::rendering#render_to_body()",
    "actioncontroller::apirendering#render_to_body()",
    "actioncontroller::renderers#render_to_body()",
    "actioncontroller::rendering#render_to_body()",
    "actionview::rendering#render_to_body()",
    "abstractcontroller::rendering#render_to_string()",
    "actioncontroller::renderer#render_to_string()",
    "actioncontroller::rendering#render_to_string()",
    "abstractcontroller::rendering#rendered_format()",
    "actionview::testcase::behavior#rendered_views()",
    "actionview::testcase::behavior::renderedviewscollection#rendered_views()",
    "activerecord::querymethods#reorder()",
    "actiontext::fragment#replace()",
    "activerecord::associations::collectionproxy#replace()",
    "activesupport::hashwithindifferentaccess#replace()",
    "activesupport::safebuffer#replace()",
    "activerecord::migration::commandrecorder#replay()",
    "activerecord::connectionadapters::abstractadapter#replica?()",
    "activerecord::databaseconfigurations::hashconfig#replica?()",
    "actiondispatch::contentsecuritypolicy#report_uri()",
    "activestorage::blob::representable#representable?()",
    "activestorage::blob::representable#representation()",
    "actiondispatch::routing::routewrapper#reqs()",
    "actioncable::connection::base#request()",
    "actioncontroller::base#request()",
    "actioncontroller::requestforgeryprotection#request_authenticity_tokens()",
    "actioncontroller::httpauthentication::basic::controllermethods#request_http_basic_authentication()",
    "actioncontroller::httpauthentication::digest::controllermethods#request_http_digest_authentication()",
    "actioncontroller::httpauthentication::token::controllermethods#request_http_token_authentication()",
    "actiondispatch::request#request_id()",
    "actiondispatch::request#request_method()",
    "actiondispatch::testrequest#request_method=()",
    "actiondispatch::request#request_method_symbol()",
    "actiondispatch::request#request_parameters()",
    "actiondispatch::request#request_parameters=()",
    "actiondispatch::testrequest#request_uri=()",
    "actioncontroller::parameters#require()",
    "rails::command::actions#require_application!()",
    "rails::command::actions#require_application_and_environment!()",
    "activesupport::dependencies::loadable#require_dependency()",
    "actionview::template::handlers::builder#require_engine()",
    "rails::command::actions#require_environment!()",
    "actiondispatch::contentsecuritypolicy#require_sri_for()",
    "activesupport::reloader#require_unload_lock!()",
    "actioncontroller::parameters#required()",
    "activerecord::connectionadapters::abstractadapter#requires_reloading?()",
    "activerecord::connectionadapters::sqlite3adapter#requires_reloading?()",
    "activesupport::rescuable::classmethods#rescue_from()",
    "actiondispatch::exceptionwrapper#rescue_template()",
    "activesupport::rescuable#rescue_with_handler()",
    "activesupport::rescuable::classmethods#rescue_with_handler()",
    "activerecord::querymethods#reselect()",
    "activerecord::associations::collectionproxy#reset()",
    "activerecord::relation#reset()",
    "activesupport::currentattributes#reset()",
    "actiondispatch::integration::runner#reset!()",
    "actiondispatch::integration::session#reset!()",
    "activerecord::connectionadapters::abstractadapter#reset!()",
    "activerecord::connectionadapters::mysql2adapter#reset!()",
    "activerecord::connectionadapters::postgresqladapter#reset!()",
    "actiondispatch::response#reset_body!()",
    "activerecord::fixtureset::reset_cache()",
    "activesupport::callbacks::classmethods#reset_callbacks()",
    "activerecord::modelschema::classmethods#reset_column_information()",
    "activerecord::countercache::classmethods#reset_counters()",
    "actionview::helpers::texthelper#reset_cycle()",
    "activerecord::locking::optimistic::classmethods#reset_locking_column()",
    "activerecord::logsubscriber::reset_runtime()",
    "activerecord::connectionadapters::databasestatements#reset_sequence!()",
    "actioncontroller::metal#reset_session()",
    "actiondispatch::request#reset_session()",
    "activesupport::currentattributes::resets()",
    "actiondispatch::railsentitystore::resolve()",
    "actiondispatch::railsmetastore::resolve()",
    "actiondispatch::routing::mapper::customurls#resolve()",
    "actiondispatch::routing::mapper::resources#resource()",
    "actiondispatch::routing::mapper::resources#resources()",
    "actiondispatch::routing::mapper::resources#resources_path_names()",
    "actioncontroller::mimeresponds#respond_to()",
    "actiondispatch::response::rackbody#respond_to?()",
    "activemodel::attributemethods#respond_to?()",
    "activerecord::attributemethods#respond_to?()",
    "activesupport::timewithzone#respond_to?()",
    "rails::railtie::configurable::classmethods#respond_to?()",
    "rails::railtie::configuration#respond_to?()",
    "activesupport::multibyte::chars#respond_to_missing?()",
    "activesupport::orderedoptions#respond_to_missing?()",
    "activesupport::timewithzone#respond_to_missing?()",
    "activemodel::attributemethods#respond_to_without_attributes?()",
    "actioncontroller::base#response()",
    "actioncontroller::mimeresponds::collector#response()",
    "abstractcontroller::base#response_body()",
    "actioncontroller::live#response_body=()",
    "actioncontroller::metal#response_body=()",
    "actiondispatch::response#response_code()",
    "actiondispatch::requestencoder::identityencoder#response_parser()",
    "actiondispatch::testresponse#response_parser()",
    "actioncable::server::base#restart()",
    "activemodel::dirty#restore_attributes()",
    "actiondispatch::routing::consoleformatter::base#result()",
    "actiondispatch::routing::htmltableformatter#result()",
    "activerecord::connectionhandling#retrieve_connection()",
    "activerecord::connectionadapters::connectionhandler#retrieve_connection_pool()",
    "activejob::exceptions#retry_job()",
    "activejob::exceptions::classmethods#retry_on()",
    "actiondispatch::response::return_only_media_type_on_content_type()",
    "actiondispatch::response::return_only_media_type_on_content_type=()",
    "activesupport::multibyte::chars#reverse()",
    "actioncontroller::parameters#reverse_merge()",
    "activesupport::hashwithindifferentaccess#reverse_merge()",
    "hash#reverse_merge()",
    "actioncontroller::parameters#reverse_merge!()",
    "activesupport::hashwithindifferentaccess#reverse_merge!()",
    "hash#reverse_merge!()",
    "activerecord::querymethods#reverse_order()",
    "hash#reverse_update()",
    "activerecord::migration#reversible()",
    "activerecord::migration#revert()",
    "activerecord::migration::commandrecorder#revert()",
    "activerecord::migration#reverting?()",
    "activerecord::querymethods#rewhere()",
    "actiondispatch::http::uploadedfile#rewind()",
    "actioncontroller::httpauthentication::token#rewrite_param_values()",
    "activesupport::timewithzone#rfc2822()",
    "activesupport::timewithzone#rfc3339()",
    "activesupport::timezone#rfc3339()",
    "time::rfc3339()",
    "activesupport::timewithzone#rfc822()",
    "actionview::helpers::formbuilder#rich_text_area()",
    "actionview::helpers::formhelper#rich_text_area()",
    "actiontext::taghelper#rich_text_area_tag()",
    "activerecord::connectionadapters::realtransaction#rollback()",
    "activerecord::connectionadapters::savepointtransaction#rollback()",
    "activerecord::connectionadapters::transactionstate#rollback!()",
    "activerecord::connectionadapters::databasestatements#rollback_db_transaction()",
    "activerecord::connectionadapters::databasestatements#rollback_to_savepoint()",
    "activerecord::connectionadapters::transactionstate#rolledback?()",
    "actiondispatch::routing::mapper::resources#root()",
    "activerecord::tasks::databasetasks#root()",
    "rails::root()",
    "rails::command::root()",
    "rails::engine::configuration#root=()",
    "actionmailbox::inboundemail::routable#route()",
    "actionmailbox::router#route()",
    "actionmailbox::routing#route()",
    "rails::generators::actions#route()",
    "actiondispatch::routing::urlfor#route_for()",
    "activemodel::naming::route_key()",
    "actionmailbox::inboundemail::routable#route_later()",
    "rails::generators::namedbase#route_url()",
    "rails::engine#routes()",
    "actionmailbox::routing#routing()",
    "activejob::arguments::hash::ruby2_keywords_hash()",
    "activejob::arguments::hash::ruby2_keywords_hash?()",
    "rails::appbuilder#ruby_version()",
    "actionmailbox::inboundemail::incineratable::incineration#run()",
    "activerecord::connectionadapters::connectionpool::reaper#run()",
    "activerecord::migration#run()",
    "activerecord::querycache::run()",
    "activesupport::testing::isolation#run()",
    "rails::application::finisher::interlockhook::run()",
    "rails::application::finisher::mutexhook#run()",
    "rails::engine::updater::run()",
    "rails::initializable::initializer#run()",
    "activesupport::executionwrapper::run!()",
    "activesupport::callbacks#run_callbacks()",
    "activesupport::testing::parallelization::worker#run_cleanup()",
    "rails::generators::testing::behaviour#run_generator()",
    "activesupport::testing::isolation::forking#run_in_isolation()",
    "activesupport::testing::isolation::subprocess#run_in_isolation()",
    "activerecord::testfixtures#run_in_transaction?()",
    "rails::initializable#run_initializers()",
    "activesupport::dependencies::run_interlock()",
    "activesupport::lazyloadhooks#run_load_hooks()",
    "rails::application#runner()",
    "rails::railtie::runner()",
    "activesupport::dependencies::interlock#running()",
    "activerecord::logsubscriber::runtime()",
    "activerecord::logsubscriber::runtime=()",
    "actionview::helpers::texthelper#safe_concat()",
    "activesupport::safebuffer#safe_concat()",
    "activesupport::inflector#safe_constantize()",
    "string#safe_constantize()",
    "activesupport::dependencies::classcache#safe_get()",
    "actionview::helpers::outputsafetyhelper#safe_join()",
    "activesupport::testing::parallelization::worker#safe_record()",
    "actiondispatch::contentsecuritypolicy#sandbox()",
    "rails::console#sandbox?()",
    "actionview::helpers::sanitizehelper#sanitize()",
    "actiontext::contenthelper#sanitize_action_text_content()",
    "actionview::helpers::sanitizehelper#sanitize_css()",
    "activerecord::connectionadapters::databasestatements#sanitize_limit()",
    "activerecord::sanitization::classmethods#sanitize_sql()",
    "activerecord::sanitization::classmethods#sanitize_sql_array()",
    "activerecord::sanitization::classmethods#sanitize_sql_for_assignment()",
    "activerecord::sanitization::classmethods#sanitize_sql_for_conditions()",
    "activerecord::sanitization::classmethods#sanitize_sql_for_order()",
    "activerecord::sanitization::classmethods#sanitize_sql_hash_for_assignment()",
    "activerecord::sanitization::classmethods#sanitize_sql_like()",
    "activestorage::filename#sanitized()",
    "activerecord::persistence#save()",
    "activerecord::validations#save()",
    "rails::generators::activemodel#save()",
    "activerecord::persistence#save!()",
    "activerecord::validations#save!()",
    "activerecord::attributemethods::dirty#saved_change_to_attribute()",
    "activerecord::attributemethods::dirty#saved_change_to_attribute?()",
    "activerecord::attributemethods::dirty#saved_changes()",
    "activerecord::attributemethods::dirty#saved_changes?()",
    "activerecord::migration#say()",
    "activerecord::migration#say_with_time()",
    "actionmailbox::incinerationjob::schedule()",
    "activerecord::connectionadapters::abstractadapter#schema_cache()",
    "activerecord::connectionadapters::abstractadapter#schema_cache=()",
    "activerecord::databaseconfigurations::hashconfig#schema_cache_path()",
    "activerecord::connectionadapters::postgresql::schemastatements#schema_exists?()",
    "activerecord::tasks::databasetasks#schema_file()",
    "activerecord::tasks::databasetasks#schema_file_type()",
    "activerecord::modelschema::schema_migrations_table_name()",
    "activerecord::modelschema::schema_migrations_table_name=()",
    "activerecord::connectionadapters::postgresql::schemastatements#schema_names()",
    "activerecord::connectionadapters::postgresql::schemastatements#schema_search_path()",
    "activerecord::connectionadapters::postgresql::schemastatements#schema_search_path=()",
    "activerecord::tasks::databasetasks#schema_up_to_date?()",
    "actiondispatch::routing::mapper::scoping#scope()",
    "activerecord::associations::collectionproxy#scope()",
    "activerecord::scoping::named::classmethods#scope()",
    "activerecord::reflection::macroreflection#scope_for()",
    "activerecord::relation#scope_for_create()",
    "activerecord::relation#scoping()",
    "actionview::helpers::formbuilder#search_field()",
    "actionview::helpers::formhelper#search_field()",
    "actionview::helpers::formtaghelper#search_field_tag()",
    "time#sec_fraction()",
    "activerecord::associations::collectionproxy#second()",
    "activerecord::findermethods#second()",
    "array#second()",
    "numeric#second()",
    "activerecord::findermethods#second!()",
    "activerecord::associations::collectionproxy#second_to_last()",
    "activerecord::findermethods#second_to_last()",
    "array#second_to_last()",
    "activerecord::findermethods#second_to_last!()",
    "numeric#seconds()",
    "datetime#seconds_since_midnight()",
    "time#seconds_since_midnight()",
    "activesupport::timezone::seconds_to_utc_offset()",
    "datetime#seconds_until_end_of_day()",
    "time#seconds_until_end_of_day()",
    "rails::application#secret_key_base()",
    "actioncontroller::httpauthentication::digest#secret_token()",
    "rails::application#secrets()",
    "actiondispatch::routing::consoleformatter::base#section()",
    "actiondispatch::routing::consoleformatter::expanded#section()",
    "actiondispatch::routing::consoleformatter::sheet#section()",
    "actiondispatch::routing::htmltableformatter#section()",
    "actiondispatch::routing::consoleformatter::base#section_title()",
    "actiondispatch::routing::consoleformatter::expanded#section_title()",
    "actiondispatch::routing::consoleformatter::sheet#section_title()",
    "actiondispatch::routing::htmltableformatter#section_title()",
    "activesupport::securityutils::secure_compare()",
    "activesupport::securecomparerotator#secure_compare!()",
    "activerecord::tasks::databasetasks#seed_loader()",
    "actioncontroller::parameters#select()",
    "actionview::helpers::formbuilder#select()",
    "actionview::helpers::formoptionshelper#select()",
    "activerecord::associations::collectionproxy#select()",
    "activerecord::querymethods#select()",
    "activesupport::hashwithindifferentaccess#select()",
    "activesupport::orderedhash#select()",
    "actioncontroller::parameters#select!()",
    "activerecord::connectionadapters::databasestatements#select_all()",
    "activerecord::connectionadapters::querycache#select_all()",
    "actionview::helpers::datehelper#select_date()",
    "actionview::helpers::datehelper#select_datetime()",
    "actionview::helpers::datehelper#select_day()",
    "actionview::helpers::datehelper#select_hour()",
    "actionview::helpers::datehelper#select_minute()",
    "actionview::helpers::datehelper#select_month()",
    "activerecord::connectionadapters::databasestatements#select_one()",
    "activerecord::connectionadapters::databasestatements#select_rows()",
    "actionview::helpers::datehelper#select_second()",
    "actionview::helpers::formtaghelper#select_tag()",
    "actionview::helpers::datehelper#select_time()",
    "activerecord::connectionadapters::databasestatements#select_value()",
    "activerecord::connectionadapters::databasestatements#select_values()",
    "actionview::helpers::datehelper#select_year()",
    "actioncable::connection::base#send_async()",
    "actioncontroller::datastreaming#send_data()",
    "actioncontroller::instrumentation#send_data()",
    "actioncontroller::logsubscriber#send_data()",
    "actiondispatch::request#send_early_hints()",
    "actioncontroller::datastreaming#send_file()",
    "actioncontroller::instrumentation#send_file()",
    "actioncontroller::logsubscriber#send_file()",
    "actiondispatch::response#send_file()",
    "actiondispatch::response#sending!()",
    "actiondispatch::response#sending?()",
    "actiondispatch::response#sending_file=()",
    "actiondispatch::response#sent!()",
    "actiondispatch::response#sent?()",
    "activerecord::modelschema::classmethods#sequence_name()",
    "activerecord::modelschema::classmethods#sequence_name=()",
    "activerecord::connectionadapters::postgresql::columnmethods#serial()",
    "activerecord::connectionadapters::postgresql::schemastatements#serial_sequence()",
    "activemodel::type::value#serializable?()",
    "activemodel::serialization#serializable_hash()",
    "activerecord::serialization#serializable_hash()",
    "activejob::arguments#serialize()",
    "activejob::core#serialize()",
    "activejob::serializers::objectserializer#serialize()",
    "activemodel::type::value#serialize()",
    "activerecord::attributemethods::serialization::classmethods#serialize()",
    "activerecord::type::json#serialize()",
    "activerecord::type::time#serialize()",
    "activejob::serializers::objectserializer#serialize?()",
    "rails::server#served_url()",
    "rails::application#server()",
    "rails::railtie::server()",
    "actiondispatch::http::url#server_port()",
    "actiondispatch::request#server_software()",
    "activestorage::blob#service()",
    "activestorage::logsubscriber#service_delete()",
    "activestorage::logsubscriber#service_delete_prefixed()",
    "activestorage::logsubscriber#service_download()",
    "activestorage::logsubscriber#service_exist()",
    "activestorage::blob#service_headers_for_direct_upload()",
    "activestorage::logsubscriber#service_mirror()",
    "activestorage::logsubscriber#service_streaming_download()",
    "activestorage::logsubscriber#service_upload()",
    "activestorage::blob#service_url()",
    "activestorage::logsubscriber#service_url()",
    "activestorage::preview#service_url()",
    "activestorage::variant#service_url()",
    "activestorage::blob#service_url_for_direct_upload()",
    "actiondispatch::testprocess#session()",
    "activerecord::connectionadapters::postgresqladapter#session_auth=()",
    "actiondispatch::request#session_options=()",
    "rails::application::configuration#session_store()",
    "activejob::core::classmethods#set()",
    "activesupport::currentattributes#set()",
    "rails::command::actions#set_application_directory!()",
    "activesupport::callbacks::classmethods#set_callback()",
    "actionmailer::base#set_content_type()",
    "rails::server#set_environment()",
    "rails::console#set_environment!()",
    "activerecord::testfixtures::classmethods#set_fixture_class()",
    "actiondispatch::response#set_header()",
    "activesupport::logsubscriber::testhelper#set_logger()",
    "actiondispatch::routing::mapper::resources#set_member_mappings_for_resource()",
    "rails::generators::migration#set_migration_assigns!()",
    "activerecord::connectionadapters::postgresqladapter#set_standard_conforming_strings()",
    "activesupport::testing::setupandteardown::classmethods#setup()",
    "actioncontroller::testcase::behavior#setup_controller_request_and_response()",
    "activerecord::testfixtures::classmethods#setup_fixture_accessors()",
    "activerecord::testfixtures#setup_fixtures()",
    "rails::api::task#setup_horo_variables()",
    "activerecord::tasks::databasetasks#setup_initial_database_yaml()",
    "actionview::testcase::behavior#setup_with_controller()",
    "actiondispatch::routing::mapper::resources#shallow()",
    "actiondispatch::routing::mapper::resources#shallow?()",
    "activesupport::concurrency::sharelock#sharing()",
    "actionview::template#short_identifier()",
    "actiondispatch::http::mimenegotiation#should_apply_vary_header?()",
    "activestorage::blobs::proxycontroller#show()",
    "activestorage::blobs::redirectcontroller#show()",
    "activestorage::diskcontroller#show()",
    "activestorage::representations::proxycontroller#show()",
    "activestorage::representations::redirectcontroller#show()",
    "rails::rails::conductor::actionmailbox::inboundemailscontroller#show()",
    "actioncontroller::rescue#show_detailed_exceptions?()",
    "rails::generators::namedbase#show_helper()",
    "activerecord::connectionadapters::abstractmysqladapter#show_variable()",
    "actioncable::subscriptionadapter::base#shutdown()",
    "actioncable::subscriptionadapter::postgresql::listener#shutdown()",
    "actioncable::subscriptionadapter::redis::listener#shutdown()",
    "activesupport::testing::parallelization::server#shutdown()",
    "actioncable::connection::testcookiejar#signed()",
    "actiondispatch::cookies::chainedcookiejars#signed()",
    "activerecord::fixtureset::signed_global_id()",
    "activerecord::signedid#signed_id()",
    "activestorage::blob#signed_id()",
    "activerecord::signedid::classmethods#signed_id_verifier()",
    "activerecord::signedid::classmethods#signed_id_verifier=()",
    "actiondispatch::cookies::chainedcookiejars#signed_or_encrypted()",
    "activesupport::deprecation::reporting#silence()",
    "activesupport::loggersilence#silence()",
    "activesupport::cache::store#silence!()",
    "module#silence_redefinition_of_method()",
    "kernel#silence_warnings()",
    "activesupport::deprecation::reporting#silenced()",
    "actionview::helpers::texthelper#simple_format()",
    "activesupport::duration#since()",
    "activesupport::timewithzone#since()",
    "date#since()",
    "datetime#since()",
    "time#since()",
    "activemodel::naming::singular()",
    "activesupport::inflector::inflections#singular()",
    "rails::generators::namedbase#singular_name()",
    "activemodel::naming::singular_route_key()",
    "rails::generators::namedbase#singular_route_name()",
    "rails::generators::namedbase#singular_table_name()",
    "activesupport::inflector#singularize()",
    "string#singularize()",
    "actiondispatch::http::uploadedfile#size()",
    "actiondispatch::middlewarestack#size()",
    "actiontext::attachmentgallery#size()",
    "activerecord::associations::collectionproxy#size()",
    "activerecord::connectionadapters::schemacache#size()",
    "activerecord::fixtureset#size()",
    "activerecord::relation#size()",
    "abstractcontroller::callbacks::classmethods#skip_after_action()",
    "abstractcontroller::callbacks::classmethods#skip_around_action()",
    "abstractcontroller::callbacks::classmethods#skip_before_action()",
    "activesupport::callbacks::classmethods#skip_callback()",
    "actioncontroller::requestforgeryprotection::classmethods#skip_forgery_protection()",
    "actioncontroller::parameterencoding::classmethods#skip_parameter_encoding()",
    "actioncontroller::parameters#slice()",
    "activerecord::core#slice()",
    "activesupport::hashwithindifferentaccess#slice()",
    "actioncontroller::parameters#slice!()",
    "activemodel::errors#slice!()",
    "activesupport::hashwithindifferentaccess#slice!()",
    "activesupport::multibyte::chars#slice!()",
    "hash#slice!()",
    "actionview::helpers::urlhelper#sms_to()",
    "rails::generators::sorted_groups()",
    "actionmailbox::inboundemail#source()",
    "actionview::template#source()",
    "actiondispatch::exceptionwrapper#source_extracts()",
    "rails::generators::base::source_root()",
    "actiondispatch::exceptionwrapper#source_to_show_id()",
    "activerecord::tasks::databasetasks#spec()",
    "activesupport::multibyte::chars#split()",
    "array#split()",
    "activerecord::logsubscriber#sql()",
    "arel::sql()",
    "string#squish()",
    "string#squish!()",
    "actiondispatch::request#ssl?()",
    "actioncontroller::conditionalget#stale?()",
    "actiondispatch::session::stalesessioncheck#stale_session_check!()",
    "actiondispatch::http::url#standard_port()",
    "actiondispatch::http::url#standard_port?()",
    "actionview::logsubscriber#start()",
    "activesupport::logsubscriber#start()",
    "activesupport::notifications::fanout#start()",
    "activesupport::notifications::fanout::subscribers::eventobject#start()",
    "activesupport::notifications::instrumenter#start()",
    "activesupport::subscriber#start()",
    "activesupport::testing::parallelization::worker#start()",
    "rails::console::start()",
    "rails::console#start()",
    "rails::dbconsole::start()",
    "rails::dbconsole#start()",
    "rails::server#start()",
    "activesupport::notifications::event#start!()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#start_document()",
    "activesupport::xmlmini_nokogirisax::hashbuilder#start_element()",
    "activesupport::concurrency::sharelock#start_exclusive()",
    "actioncable::channel::channelstub#start_periodic_timers()",
    "actioncontroller::logsubscriber#start_processing()",
    "activesupport::dependencies::interlock#start_running()",
    "activesupport::concurrency::sharelock#start_sharing()",
    "activesupport::dependencies::interlock#start_unloading()",
    "symbol#start_with?()",
    "activesupport::testing::parallelization::server#start_worker()",
    "rails::rack::logger#started_request_message()",
    "symbol#starts_with?()",
    "activerecord::connectionadapters::connectionpool#stat()",
    "actioncable::connection::base#statistics()",
    "activesupport::cache::memcachestore#stats()",
    "actiondispatch::response#status=()",
    "actiondispatch::exceptionwrapper#status_code()",
    "actiondispatch::exceptionwrapper::status_code_for_exception()",
    "actiondispatch::response#status_message()",
    "activerecord::inheritance::classmethods#sti_class_for()",
    "activerecord::inheritance::classmethods#sti_name()",
    "actioncable::connection::streameventloop#stop()",
    "actioncable::channel::channelstub#stop_all_streams()",
    "actioncable::channel::streams#stop_all_streams()",
    "activesupport::concurrency::sharelock#stop_exclusive()",
    "actioncable::channel::channelstub#stop_periodic_timers()",
    "activesupport::concurrency::sharelock#stop_sharing()",
    "actioncable::channel::streams#stop_stream_for()",
    "actioncable::channel::streams#stop_stream_from()",
    "activesupport::testing::parallelization::server#stop_worker()",
    "rails::appbuilder#storage()",
    "activerecord::store::classmethods#store()",
    "activesupport::dependencies::classcache#store()",
    "activesupport::hashwithindifferentaccess#store()",
    "activerecord::store::classmethods#store_accessor()",
    "activesupport::descendantstracker::store_inherited()",
    "activerecord::store::classmethods#stored_attributes()",
    "actioncable::channel::streams#stream_for()",
    "actioncable::channel::channelstub#stream_from()",
    "actioncable::channel::streams#stream_from()",
    "actioncable::channel::streams#stream_or_reject_for()",
    "actioncable::channel::channelstub#streams()",
    "activesupport::timewithzone#strftime()",
    "activerecord::querymethods#strict_loading()",
    "activerecord::core#strict_loading!()",
    "activerecord::core#strict_loading?()",
    "activerecord::logsubscriber#strict_loading_violation()",
    "activemodel::error#strict_match?()",
    "activerecord::connectionadapters::abstractmysqladapter#strict_mode?()",
    "actiondispatch::flash::flashhash#stringify_array()",
    "activesupport::hashwithindifferentaccess#stringify_keys()",
    "hash#stringify_keys()",
    "activesupport::hashwithindifferentaccess#stringify_keys!()",
    "hash#stringify_keys!()",
    "string#strip_heredoc()",
    "actionview::helpers::sanitizehelper#strip_links()",
    "actionview::helpers::sanitizehelper#strip_tags()",
    "actiondispatch::http::cache::response#strong_etag=()",
    "actiondispatch::http::cache::response#strong_etag?()",
    "activesupport::timezone#strptime()",
    "activerecord::tasks::databasetasks#structure_dump()",
    "activerecord::tasks::databasetasks::structure_dump_flags()",
    "activerecord::tasks::databasetasks#structure_load()",
    "activerecord::tasks::databasetasks::structure_load_flags()",
    "actioncable::channel::testcase::behavior#stub_connection()",
    "actionview::helpers::assettaghelper#stylesheet_link_tag()",
    "actionview::helpers::asseturlhelper#stylesheet_path()",
    "actionview::helpers::asseturlhelper#stylesheet_url()",
    "rails::pluginbuilder#stylesheets()",
    "activesupport::descendantstracker::subclasses()",
    "activesupport::descendantstracker#subclasses()",
    "class#subclasses()",
    "rails::railtie::subclasses()",
    "actiondispatch::http::url#subdomain()",
    "actiondispatch::http::url#subdomains()",
    "actionview::helpers::formbuilder#submit()",
    "actionview::helpers::formtaghelper#submit_tag()",
    "actioncable::channel::testcase::behavior#subscribe()",
    "actioncable::subscriptionadapter::base#subscribe()",
    "activesupport::notifications::subscribe()",
    "activesupport::notifications::fanout#subscribe()",
    "actioncable::channel::base#subscribe_to_channel()",
    "actioncable::channel::base#subscribed()",
    "activesupport::notifications::subscribed()",
    "activesupport::subscriber::subscribers()",
    "actioncable::channel::base#subscription_confirmation_sent?()",
    "actioncable::channel::base#subscription_rejected?()",
    "datetime#subsec()",
    "actionmailbox::relayer::result#success?()",
    "activerecord::dynamicmatchers::findbybang::suffix()",
    "activerecord::dynamicmatchers::method::suffix()",
    "activerecord::calculations#sum()",
    "enumerable#sum()",
    "dateandtime::calculations#sunday()",
    "activerecord::connectionadapters::abstractadapter#supports_advisory_locks?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_advisory_locks?()",
    "activerecord::connectionadapters::postgresqladapter#supports_advisory_locks?()",
    "activerecord::connectionadapters::abstractadapter#supports_bulk_alter?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_bulk_alter?()",
    "activerecord::connectionadapters::postgresqladapter#supports_bulk_alter?()",
    "activesupport::cache::filestore::supports_cache_versioning?()",
    "activesupport::cache::memcachestore::supports_cache_versioning?()",
    "activesupport::cache::memorystore::supports_cache_versioning?()",
    "activesupport::cache::nullstore::supports_cache_versioning?()",
    "activesupport::cache::rediscachestore::supports_cache_versioning?()",
    "activerecord::connectionadapters::abstractadapter#supports_check_constraints?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_check_constraints?()",
    "activerecord::connectionadapters::postgresqladapter#supports_check_constraints?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_check_constraints?()",
    "activerecord::connectionadapters::abstractadapter#supports_comments?()",
    "activerecord::connectionadapters::mysql2adapter#supports_comments?()",
    "activerecord::connectionadapters::postgresqladapter#supports_comments?()",
    "activerecord::connectionadapters::abstractadapter#supports_comments_in_create?()",
    "activerecord::connectionadapters::mysql2adapter#supports_comments_in_create?()",
    "activerecord::connectionadapters::abstractadapter#supports_common_table_expressions?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_common_table_expressions?()",
    "activerecord::connectionadapters::postgresqladapter#supports_common_table_expressions?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_common_table_expressions?()",
    "activerecord::connectionadapters::abstractadapter#supports_datetime_with_precision?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_datetime_with_precision?()",
    "activerecord::connectionadapters::postgresqladapter#supports_datetime_with_precision?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_datetime_with_precision?()",
    "activerecord::connectionadapters::abstractadapter#supports_ddl_transactions?()",
    "activerecord::connectionadapters::postgresqladapter#supports_ddl_transactions?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_ddl_transactions?()",
    "activerecord::connectionadapters::abstractadapter#supports_explain?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_explain?()",
    "activerecord::connectionadapters::postgresqladapter#supports_explain?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_explain?()",
    "activerecord::connectionadapters::abstractadapter#supports_expression_index?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_expression_index?()",
    "activerecord::connectionadapters::postgresqladapter#supports_expression_index?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_expression_index?()",
    "activerecord::connectionadapters::abstractadapter#supports_extensions?()",
    "activerecord::connectionadapters::postgresqladapter#supports_extensions?()",
    "activerecord::connectionadapters::abstractadapter#supports_foreign_keys?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_foreign_keys?()",
    "activerecord::connectionadapters::postgresqladapter#supports_foreign_keys?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_foreign_keys?()",
    "activerecord::connectionadapters::abstractadapter#supports_foreign_tables?()",
    "activerecord::connectionadapters::postgresqladapter#supports_foreign_tables?()",
    "activerecord::connectionadapters::abstractadapter#supports_index_sort_order?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_index_sort_order?()",
    "activerecord::connectionadapters::postgresqladapter#supports_index_sort_order?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_index_sort_order?()",
    "activerecord::connectionadapters::abstractadapter#supports_indexes_in_create?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_indexes_in_create?()",
    "activerecord::connectionadapters::abstractadapter#supports_insert_conflict_target?()",
    "activerecord::connectionadapters::postgresqladapter#supports_insert_conflict_target?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_insert_conflict_target?()",
    "activerecord::connectionadapters::postgresqladapter#supports_insert_on_conflict?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_insert_on_conflict?()",
    "activerecord::connectionadapters::abstractadapter#supports_insert_on_duplicate_skip?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_insert_on_duplicate_skip?()",
    "activerecord::connectionadapters::postgresqladapter#supports_insert_on_duplicate_skip?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_insert_on_duplicate_skip?()",
    "activerecord::connectionadapters::abstractadapter#supports_insert_on_duplicate_update?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_insert_on_duplicate_update?()",
    "activerecord::connectionadapters::postgresqladapter#supports_insert_on_duplicate_update?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_insert_on_duplicate_update?()",
    "activerecord::connectionadapters::abstractadapter#supports_insert_returning?()",
    "activerecord::connectionadapters::postgresqladapter#supports_insert_returning?()",
    "activerecord::connectionadapters::abstractadapter#supports_json?()",
    "activerecord::connectionadapters::mysql2adapter#supports_json?()",
    "activerecord::connectionadapters::postgresqladapter#supports_json?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_json?()",
    "activerecord::connectionadapters::abstractadapter#supports_lazy_transactions?()",
    "activerecord::connectionadapters::mysql2adapter#supports_lazy_transactions?()",
    "activerecord::connectionadapters::postgresqladapter#supports_lazy_transactions?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_lazy_transactions?()",
    "activerecord::connectionadapters::abstractadapter#supports_materialized_views?()",
    "activerecord::connectionadapters::postgresqladapter#supports_materialized_views?()",
    "activerecord::connectionadapters::abstractadapter#supports_optimizer_hints?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_optimizer_hints?()",
    "activerecord::connectionadapters::postgresqladapter#supports_optimizer_hints?()",
    "activerecord::connectionadapters::abstractadapter#supports_partial_index?()",
    "activerecord::connectionadapters::postgresqladapter#supports_partial_index?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_partial_index?()",
    "activerecord::connectionadapters::abstractadapter#supports_partitioned_indexes?()",
    "activerecord::connectionadapters::postgresqladapter#supports_partitioned_indexes?()",
    "abstractcontroller::base::supports_path?()",
    "actionmailer::base::supports_path?()",
    "activerecord::connectionadapters::postgresqladapter#supports_pgcrypto_uuid?()",
    "activerecord::connectionadapters::abstractadapter#supports_savepoints?()",
    "activerecord::connectionadapters::mysql2adapter#supports_savepoints?()",
    "activerecord::connectionadapters::postgresqladapter#supports_savepoints?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_savepoints?()",
    "actionview::template#supports_streaming?()",
    "actionview::template::handlers::erb#supports_streaming?()",
    "activerecord::connectionadapters::abstractadapter#supports_transaction_isolation?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_transaction_isolation?()",
    "activerecord::connectionadapters::postgresqladapter#supports_transaction_isolation?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_transaction_isolation?()",
    "activerecord::connectionadapters::abstractadapter#supports_validate_constraints?()",
    "activerecord::connectionadapters::postgresqladapter#supports_validate_constraints?()",
    "activerecord::connectionadapters::abstractadapter#supports_views?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_views?()",
    "activerecord::connectionadapters::postgresqladapter#supports_views?()",
    "activerecord::connectionadapters::sqlite3adapter#supports_views?()",
    "activerecord::connectionadapters::abstractadapter#supports_virtual_columns?()",
    "activerecord::connectionadapters::abstractmysqladapter#supports_virtual_columns?()",
    "activerecord::suppressor::classmethods#suppress()",
    "kernel#suppress()",
    "activerecord::migration#suppress_messages()",
    "actiondispatch::middlewarestack#swap()",
    "rails::configuration::middlewarestackproxy#swap()",
    "activesupport::hashwithindifferentaccess#symbolize_keys()",
    "hash#symbolize_keys()",
    "hash#symbolize_keys!()",
    "actionview::template::types::symbols()",
    "activesupport::concurrency::loadinterlockawaremonitor#synchronize()",
    "rails::appbuilder#system_test()",
    "abstractcontroller::translation#t()",
    "actionview::helpers::translationhelper#t()",
    "activerecord::connectionadapters::schemastatements#table_alias_for()",
    "activerecord::connectionadapters::databaselimits#table_alias_length()",
    "activerecord::connectionadapters::schemastatements#table_comment()",
    "activerecord::connectionadapters::schemastatements#table_exists?()",
    "activerecord::modelschema::classmethods#table_exists?()",
    "activerecord::modelschema::classmethods#table_name()",
    "rails::generators::namedbase#table_name()",
    "activerecord::modelschema::classmethods#table_name=()",
    "activerecord::modelschema::table_name_prefix()",
    "activerecord::modelschema::table_name_prefix=()",
    "activerecord::modelschema::table_name_suffix()",
    "activerecord::modelschema::table_name_suffix=()",
    "activerecord::connectionadapters::schemastatements#table_options()",
    "activerecord::fixtureset#table_rows()",
    "activesupport::inflector#tableize()",
    "string#tableize()",
    "activerecord::connectionadapters::schemastatements#tables()",
    "actioncable::connection::taggedloggerproxy#tag()",
    "actionview::helpers::activemodelinstancetag#tag()",
    "actionview::helpers::taghelper#tag()",
    "activesupport::taggedlogging#tagged()",
    "rails::sourceannotationextractor::annotation::tags()",
    "activerecord::associations::collectionproxy#take()",
    "activerecord::findermethods#take()",
    "activerecord::findermethods#take!()",
    "actiondispatch::systemtesting::testhelpers::screenshothelper#take_failed_screenshot()",
    "actiondispatch::systemtesting::testhelpers::screenshothelper#take_screenshot()",
    "activerecord::associations::collectionproxy#target()",
    "activerecord::tasks::databasetasks#target_version()",
    "activesupport::testing::setupandteardown::classmethods#teardown()",
    "activerecord::testfixtures#teardown_fixtures()",
    "actionview::helpers::formbuilder#telephone_field()",
    "actionview::helpers::formhelper#telephone_field()",
    "actionview::helpers::formtaghelper#telephone_field_tag()",
    "rails::generators::namedbase#template()",
    "actionview::lookupcontext::viewpaths#template_exists?()",
    "numeric#terabyte()",
    "numeric#terabytes()",
    "activesupport::testing::declarative#test()",
    "rails::appbuilder#test()",
    "rails::pluginbuilder#test()",
    "rails::pluginbuilder#test_dummy_assets()",
    "rails::pluginbuilder#test_dummy_clean()",
    "rails::pluginbuilder#test_dummy_config()",
    "activemodel::lint::tests#test_errors_aref()",
    "activemodel::lint::tests#test_model_naming()",
    "activesupport::testcase::test_order()",
    "activesupport::testcase::test_order=()",
    "activemodel::lint::tests#test_persisted?()",
    "activemodel::lint::tests#test_to_key()",
    "activemodel::lint::tests#test_to_param()",
    "activemodel::lint::tests#test_to_partial_path()",
    "actioncable::channel::testcase::behavior::classmethods#tests()",
    "actioncable::connection::testcase::behavior::classmethods#tests()",
    "actioncontroller::testcase::behavior::classmethods#tests()",
    "actionmailer::testcase::behavior::classmethods#tests()",
    "actionview::testcase::behavior::classmethods#tests()",
    "rails::generators::testing::behaviour::classmethods#tests()",
    "activestorage::blob#text?()",
    "actionview::helpers::formbuilder#text_area()",
    "actionview::helpers::formhelper#text_area()",
    "actionview::helpers::formtaghelper#text_area_tag()",
    "actionview::helpers::formbuilder#text_field()",
    "actionview::helpers::formhelper#text_field()",
    "actionview::helpers::formtaghelper#text_field_tag()",
    "activerecord::associations::collectionproxy#third()",
    "activerecord::findermethods#third()",
    "array#third()",
    "activerecord::findermethods#third!()",
    "activerecord::associations::collectionproxy#third_to_last()",
    "activerecord::findermethods#third_to_last()",
    "array#third_to_last()",
    "activerecord::findermethods#third_to_last!()",
    "module#thread_cattr_accessor()",
    "module#thread_mattr_accessor()",
    "activerecord::connectionadapters::abstractadapter#throw_away!()",
    "activesupport::multibyte::chars#tidy_bytes()",
    "activesupport::multibyte::unicode#tidy_bytes()",
    "activesupport::timewithzone#time()",
    "actionview::helpers::datehelper#time_ago_in_words()",
    "actionview::helpers::formbuilder#time_field()",
    "actionview::helpers::formhelper#time_field()",
    "actionview::helpers::formtaghelper#time_field_tag()",
    "actionview::helpers::datehelper#time_select()",
    "actionview::helpers::formbuilder#time_select()",
    "actionview::helpers::datehelper#time_tag()",
    "actionview::helpers::formoptionshelper#time_zone_options_for_select()",
    "actionview::helpers::formbuilder#time_zone_select()",
    "actionview::helpers::formoptionshelper#time_zone_select()",
    "actioncable::connection::streameventloop#timer()",
    "activerecord::connectionadapters::table#timestamps()",
    "activerecord::connectionadapters::tabledefinition#timestamps()",
    "activerecord::connectionadapters::mysql::columnmethods#tinyblob()",
    "activerecord::connectionadapters::mysql::columnmethods#tinytext()",
    "activesupport::multibyte::chars#titlecase()",
    "string#titlecase()",
    "activesupport::inflector#titleize()",
    "activesupport::multibyte::chars#titleize()",
    "string#titleize()",
    "rails::appbuilder#tmp()",
    "activestorage::analyzer#tmpdir()",
    "activestorage::previewer#tmpdir()",
    "array#to()",
    "string#to()",
    "actiondispatch::response#to_a()",
    "activemodel::errors#to_a()",
    "activerecord::relation#to_a()",
    "activerecord::result#to_a()",
    "activesupport::timewithzone#to_a()",
    "rails::paths::path#to_a()",
    "mail::message#to_addresses()",
    "actiondispatch::response::rackbody#to_ary()",
    "activerecord::relation#to_ary()",
    "activerecord::result#to_ary()",
    "rails::paths::path#to_ary()",
    "activesupport::executionwrapper::to_complete()",
    "string#to_date()",
    "activesupport::timewithzone#to_datetime()",
    "string#to_datetime()",
    "activesupport::rangewithformat#to_default_s()",
    "array#to_default_s()",
    "date#to_default_s()",
    "datetime#to_default_s()",
    "time#to_default_s()",
    "actionview::digestor::node#to_dep_map()",
    "activesupport::timewithzone#to_f()",
    "datetime#to_f()",
    "activesupport::rangewithformat#to_formatted_s()",
    "activesupport::timewithzone#to_formatted_s()",
    "array#to_formatted_s()",
    "date#to_formatted_s()",
    "datetime#to_formatted_s()",
    "time#to_formatted_s()",
    "actioncontroller::parameters#to_h()",
    "activemodel::errors#to_h()",
    "activerecord::databaseconfigurations#to_h()",
    "actioncontroller::parameters#to_hash()",
    "actiondispatch::flash::flashhash#to_hash()",
    "activemodel::errors#to_hash()",
    "activesupport::hashwithindifferentaccess#to_hash()",
    "actiontext::attachment#to_html()",
    "actiontext::content#to_html()",
    "actiontext::fragment#to_html()",
    "actiontext::trixattachment#to_html()",
    "rails::info::to_html()",
    "activesupport::duration#to_i()",
    "activesupport::timewithzone#to_i()",
    "datetime#to_i()",
    "actiondispatch::http::uploadedfile#to_io()",
    "activestorage::filename#to_json()",
    "activemodel::conversion#to_key()",
    "activerecord::attributemethods::primarykey#to_key()",
    "actionview::helpers::formbuilder#to_model()",
    "activemodel::conversion#to_model()",
    "activesupport::hashwithindifferentaccess#to_options()",
    "hash#to_options()",
    "activesupport::hashwithindifferentaccess#to_options!()",
    "hash#to_options!()",
    "actioncontroller::parameters#to_param()",
    "activemodel::conversion#to_param()",
    "activerecord::integration#to_param()",
    "activerecord::integration::classmethods#to_param()",
    "activesupport::safebuffer#to_param()",
    "array#to_param()",
    "falseclass#to_param()",
    "hash#to_param()",
    "nilclass#to_param()",
    "object#to_param()",
    "trueclass#to_param()",
    "actiontext::attachables::contentattachment#to_partial_path()",
    "actiontext::attachables::missingattachable::to_partial_path()",
    "actiontext::attachables::remoteimage#to_partial_path()",
    "actionview::helpers::formbuilder#to_partial_path()",
    "activemodel::conversion#to_partial_path()",
    "actiondispatch::http::uploadedfile#to_path()",
    "actiondispatch::response::rackbody#to_path()",
    "actionview::filesystemresolver#to_path()",
    "actiontext::attachment#to_plain_text()",
    "actiontext::content#to_plain_text()",
    "actiontext::fragment#to_plain_text()",
    "actiontext::richtext#to_plain_text()",
    "activesupport::reloader::to_prepare()",
    "rails::railtie::configuration#to_prepare()",
    "rails::railtie::configuration#to_prepare_blocks()",
    "actioncontroller::parameters#to_query()",
    "array#to_query()",
    "hash#to_query()",
    "object#to_query()",
    "activesupport::timewithzone#to_r()",
    "actiontext::content#to_rendered_html_with_layout()",
    "actiontext::attachable#to_rich_text_attributes()",
    "activesupport::executionwrapper::to_run()",
    "actioncontroller::parameters#to_s()",
    "actiondispatch::remoteip::getip#to_s()",
    "actiontext::attachment#to_s()",
    "actiontext::content#to_s()",
    "actiontext::fragment#to_s()",
    "actiontext::trixattachment#to_s()",
    "actionview::filesystemresolver#to_s()",
    "actionview::fixtureresolver#to_s()",
    "actionview::resolver::path#to_s()",
    "actionview::template::sources::file#to_s()",
    "actionview::template::types::type#to_s()",
    "activemodel::name#to_s()",
    "activerecord::connectionadapters::abstractadapter::version#to_s()",
    "activerecord::connectionadapters::postgresql::oid::bit::data#to_s()",
    "activestorage::filename#to_s()",
    "activesupport::duration#to_s()",
    "activesupport::numericwithformat#to_s()",
    "activesupport::rangewithformat#to_s()",
    "activesupport::safebuffer#to_s()",
    "activesupport::timewithzone#to_s()",
    "activesupport::timezone#to_s()",
    "array#to_s()",
    "date#to_s()",
    "datetime#to_s()",
    "mime::nulltype#to_s()",
    "mime::type#to_s()",
    "rails::info::to_s()",
    "rails::sourceannotationextractor::annotation#to_s()",
    "time#to_s()",
    "actionview::helpers::outputsafetyhelper#to_sentence()",
    "array#to_sentence()",
    "activerecord::connectionadapters::databasestatements#to_sql()",
    "activerecord::relation#to_sql()",
    "actionview::resolver::path#to_str()",
    "actionview::template::types::type#to_str()",
    "activemodel::name#to_str()",
    "mime::type#to_str()",
    "actionview::template::types::type#to_sym()",
    "mime::type#to_sym()",
    "activesupport::xmlmini#to_tag()",
    "activesupport::timewithzone#to_time()",
    "date#to_time()",
    "datetime#to_time()",
    "string#to_time()",
    "time#to_time()",
    "actiontext::attachments::trixconversion#to_trix_attachment()",
    "actiontext::attachable#to_trix_content_attachment_partial_path()",
    "actiontext::attachables::contentattachment#to_trix_content_attachment_partial_path()",
    "actiontext::engine#to_trix_content_attachment_partial_path()",
    "actiontext::content#to_trix_html()",
    "actioncontroller::parameters#to_unsafe_h()",
    "actioncontroller::parameters#to_unsafe_hash()",
    "activemodel::errors#to_xml()",
    "array#to_xml()",
    "hash#to_xml()",
    "activesupport::orderedhash#to_yaml_type()",
    "activesupport::timezone#today()",
    "activesupport::timewithzone#today?()",
    "dateandtime::calculations#today?()",
    "activerecord::persistence#toggle()",
    "activerecord::persistence#toggle!()",
    "actioncontroller::httpauthentication::token#token_and_options()",
    "actionview::helpers::taghelper#token_list()",
    "actioncontroller::httpauthentication::token#token_params_from()",
    "activesupport::timezone#tomorrow()",
    "date::tomorrow()",
    "dateandtime::calculations#tomorrow()",
    "activesupport::timewithzone#tomorrow?()",
    "dateandtime::calculations#tomorrow?()",
    "activerecord::persistence#touch()",
    "activerecord::relation#touch_all()",
    "actiondispatch::exceptionwrapper#trace_to_show()",
    "actiondispatch::exceptionwrapper#traces()",
    "activerecord::connectionadapters::databasestatements#transaction()",
    "activerecord::transactions::classmethods#transaction()",
    "activerecord::connectionadapters::databasestatements#transaction_isolation_levels()",
    "activerecord::connectionadapters::databasestatements#transaction_open?()",
    "activestorage::transformers::transformer#transform()",
    "activestorage::variation#transform()",
    "actioncontroller::parameters#transform_keys()",
    "activesupport::hashwithindifferentaccess#transform_keys()",
    "actioncontroller::parameters#transform_keys!()",
    "activesupport::hashwithindifferentaccess#transform_keys!()",
    "actioncontroller::parameters#transform_values()",
    "activesupport::hashwithindifferentaccess#transform_values()",
    "actioncontroller::parameters#transform_values!()",
    "actionmailbox::relayer::result#transient_failure?()",
    "abstractcontroller::translation#translate()",
    "actionview::helpers::translationhelper#translate()",
    "activesupport::inflector#transliterate()",
    "actioncable::channel::testcase::behavior#transmissions()",
    "actioncable::channel::base#transmit()",
    "actioncable::channel::connectionstub#transmit()",
    "activesupport::testing::timehelpers#travel()",
    "activesupport::testing::timehelpers#travel_back()",
    "activesupport::testing::timehelpers#travel_to()",
    "actionview::digestor::tree()",
    "actionview::helpers::texthelper#truncate()",
    "activerecord::connectionadapters::databasestatements#truncate()",
    "string#truncate()",
    "activerecord::tasks::databasetasks#truncate_all()",
    "string#truncate_bytes()",
    "string#truncate_words()",
    "delegator#try()",
    "nilclass#try()",
    "object#try()",
    "delegator#try!()",
    "nilclass#try!()",
    "object#try!()",
    "rails::initializable::collection#tsort_each_child()",
    "activerecord::connectionadapters::postgresql::columnmethods#tsrange()",
    "activerecord::connectionadapters::postgresql::columnmethods#tstzrange()",
    "activerecord::connectionadapters::postgresql::columnmethods#tsvector()",
    "activesupport::timewithzone#tv_sec()",
    "actionview::template#type()",
    "activerecord::type::json#type()",
    "activerecord::connectionadapters::quoting#type_cast()",
    "activerecord::connectionadapters::abstractadapter::type_cast_config_to_boolean()",
    "activerecord::connectionadapters::abstractadapter::type_cast_config_to_integer()",
    "activerecord::modelschema::classmethods#type_for_attribute()",
    "activerecord::connectionadapters::querycache#uncached()",
    "activerecord::querycache::classmethods#uncached()",
    "activesupport::inflector::inflections#uncountable()",
    "activemodel::naming::uncountable?()",
    "activesupport::inflector::inflections::uncountables#uncountable?()",
    "rails::generators::namedbase#uncountable?()",
    "activemodel::attributemethods::classmethods#undefine_attribute_methods()",
    "activesupport::inflector#underscore()",
    "string#underscore()",
    "object#unescape()",
    "activerecord::connectionadapters::postgresql::quoting#unescape_bytea()",
    "activesupport::testing::timehelpers#unfreeze_time()",
    "activerecord::querymethods#uniq!()",
    "activesupport::dependencies::unload_interlock()",
    "activesupport::dependencies::interlock#unloading()",
    "actioncontroller::requestforgeryprotection#unmask_token()",
    "actioncontroller::logsubscriber#unpermitted_parameters()",
    "activerecord::connectionadapters::abstractadapter#unprepared_statement()",
    "activerecord::connectionadapters::quoting#unquoted_false()",
    "activerecord::connectionadapters::quoting#unquoted_true()",
    "mime::type::unregister()",
    "actionmailer::base::unregister_interceptor()",
    "actionmailer::base::unregister_interceptors()",
    "actionmailer::base::unregister_observer()",
    "actionmailer::base::unregister_observers()",
    "actionmailer::previews::classmethods#unregister_preview_interceptor()",
    "actionmailer::previews::classmethods#unregister_preview_interceptors()",
    "activerecord::querymethods#unscope()",
    "activerecord::scoping::default::classmethods#unscoped()",
    "actiondispatch::middlewarestack#unshift()",
    "rails::configuration::middlewarestackproxy#unshift()",
    "rails::paths::path#unshift()",
    "activerecord::connectionadapters::mysql::columnmethods#unsigned_bigint()",
    "activerecord::connectionadapters::mysql::columnmethods#unsigned_decimal()",
    "activerecord::connectionadapters::mysql::columnmethods#unsigned_float()",
    "activerecord::connectionadapters::mysql::columnmethods#unsigned_integer()",
    "actioncable::channel::testcase::behavior#unsubscribe()",
    "actioncable::subscriptionadapter::base#unsubscribe()",
    "activesupport::notifications::unsubscribe()",
    "activesupport::notifications::fanout#unsubscribe()",
    "actioncable::channel::base#unsubscribed()",
    "activesupport::duration#until()",
    "actiondispatch::exceptionwrapper#unwrapped_exception()",
    "activerecord::migration#up()",
    "activerecord::migration#up_only()",
    "activesupport::inflector#upcase_first()",
    "string#upcase_first()",
    "actiontext::fragment#update()",
    "activerecord::connectionadapters::databasestatements#update()",
    "activerecord::persistence#update()",
    "activerecord::persistence::classmethods#update()",
    "activestorage::diskcontroller#update()",
    "activesupport::hashwithindifferentaccess#update()",
    "rails::generators::activemodel#update()",
    "activerecord::persistence#update!()",
    "activerecord::batches::batchenumerator#update_all()",
    "activerecord::relation#update_all()",
    "activerecord::persistence#update_attribute()",
    "activerecord::persistence#update_column()",
    "activerecord::persistence#update_columns()",
    "activerecord::countercache::classmethods#update_counters()",
    "activerecord::locking::optimistic::classmethods#update_counters()",
    "activerecord::relation#update_counters()",
    "activestorage::service#update_metadata()",
    "activestorage::service::gcsservice#update_metadata()",
    "activesupport::fileupdatechecker#updated?()",
    "actiondispatch::contentsecuritypolicy#upgrade_insecure_requests()",
    "activestorage::blob#upload()",
    "activestorage::service#upload()",
    "activestorage::service::azurestorageservice#upload()",
    "activestorage::service::diskservice#upload()",
    "activestorage::service::gcsservice#upload()",
    "activestorage::service::mirrorservice#upload()",
    "activestorage::service::s3service#upload()",
    "activerecord::persistence::classmethods#upsert()",
    "activerecord::persistence::classmethods#upsert_all()",
    "actiondispatch::http::url#url()",
    "activestorage::blob#url()",
    "activestorage::preview#url()",
    "activestorage::service#url()",
    "activestorage::variant#url()",
    "actionview::helpers::formbuilder#url_field()",
    "actionview::helpers::formhelper#url_field()",
    "actionview::helpers::formtaghelper#url_field_tag()",
    "actioncontroller::metal#url_for()",
    "actiondispatch::http::url::url_for()",
    "actiondispatch::routing::urlfor#url_for()",
    "actionview::routingurlfor#url_for()",
    "activestorage::service#url_for_direct_upload()",
    "activestorage::service::azurestorageservice#url_for_direct_upload()",
    "activestorage::service::diskservice#url_for_direct_upload()",
    "activestorage::service::gcsservice#url_for_direct_upload()",
    "activestorage::service::s3service#url_for_direct_upload()",
    "rails::generators::namedbase#url_helper_prefix()",
    "actioncontroller::urlfor#url_options()",
    "actiondispatch::integration::session#url_options()",
    "actiondispatch::integrationtest::urloptions#url_options()",
    "actiondispatch::routing::urlfor#url_options()",
    "actionview::helpers::asseturlhelper#url_to_asset()",
    "actionview::helpers::asseturlhelper#url_to_audio()",
    "actionview::helpers::asseturlhelper#url_to_font()",
    "actionview::helpers::asseturlhelper#url_to_image()",
    "actionview::helpers::asseturlhelper#url_to_javascript()",
    "actionview::helpers::asseturlhelper#url_to_stylesheet()",
    "actionview::helpers::asseturlhelper#url_to_video()",
    "activesupport::timezone::us_zones()",
    "rails::command::base::usage_path()",
    "rails::generators::base::usage_path()",
    "actioncontroller::metal::use()",
    "actiondispatch::middlewarestack#use()",
    "rails::configuration::middlewarestackproxy#use()",
    "actiondispatch::http::mimenegotiation#use_accept_header()",
    "activerecord::connectionadapters::postgresqladapter#use_insert_returning?()",
    "activerecord::connectionadapters::abstractadapter#use_metadata_table?()",
    "actioncontroller::renderers::classmethods#use_renderer()",
    "actioncontroller::renderers::classmethods#use_renderers()",
    "time::use_zone()",
    "datetime#usec()",
    "actiondispatch::testrequest#user_agent=()",
    "actioncontroller::httpauthentication::basic#user_name_and_password()",
    "activerecord::testfixtures::classmethods#uses_transaction()",
    "activerecord::testfixtures::classmethods#uses_transaction?()",
    "activesupport::timewithzone#utc()",
    "datetime#utc()",
    "activesupport::timewithzone#utc?()",
    "datetime#utc?()",
    "activesupport::timewithzone#utc_offset()",
    "activesupport::timezone#utc_offset()",
    "datetime#utc_offset()",
    "activesupport::timezone#utc_to_local()",
    "actionview::helpers::formtaghelper#utf8_enforcer_tag()",
    "actiondispatch::request#uuid()",
    "activerecord::connectionadapters::postgresql::columnmethods#uuid()",
    "digest::uuid::uuid_from_hash()",
    "digest::uuid::uuid_v3()",
    "digest::uuid::uuid_v4()",
    "digest::uuid::uuid_v5()",
    "activemodel::validations#valid?()",
    "activerecord::dynamicmatchers::method#valid?()",
    "activerecord::validations#valid?()",
    "actiondispatch::http::mimenegotiation#valid_accept_header()",
    "actioncontroller::requestforgeryprotection#valid_authenticity_token?()",
    "activesupport::messageverifier#valid_message?()",
    "actioncontroller::requestforgeryprotection#valid_per_form_csrf_token?()",
    "actioncontroller::requestforgeryprotection#valid_request_origin?()",
    "activemodel::validations#validate()",
    "activemodel::validations::classmethods#validate()",
    "activemodel::validator#validate()",
    "activerecord::validations#validate()",
    "activemodel::validations#validate!()",
    "activerecord::connectionadapters::postgresql::schemastatements#validate_check_constraint()",
    "activerecord::connectionadapters::postgresql::altertable#validate_constraint()",
    "activerecord::connectionadapters::postgresql::schemastatements#validate_constraint()",
    "actioncontroller::httpauthentication::digest#validate_digest_response()",
    "activerecord::connectionadapters::postgresql::schemastatements#validate_foreign_key()",
    "actioncontroller::httpauthentication::digest#validate_nonce()",
    "rails::application#validate_secret_key_base()",
    "activestorage::attached::model#validate_service_configuration()",
    "activemodel::validations::classmethods#validates()",
    "activemodel::validations::classmethods#validates!()",
    "activemodel::validations::helpermethods#validates_absence_of()",
    "activerecord::validations::classmethods#validates_absence_of()",
    "activemodel::validations::helpermethods#validates_acceptance_of()",
    "activerecord::validations::classmethods#validates_associated()",
    "activemodel::validations::helpermethods#validates_confirmation_of()",
    "activemodel::validations::classmethods#validates_each()",
    "activemodel::validations::helpermethods#validates_exclusion_of()",
    "activemodel::validations::helpermethods#validates_format_of()",
    "activemodel::validations::helpermethods#validates_inclusion_of()",
    "activemodel::validations::helpermethods#validates_length_of()",
    "activerecord::validations::classmethods#validates_length_of()",
    "activemodel::validations::helpermethods#validates_numericality_of()",
    "activerecord::validations::classmethods#validates_numericality_of()",
    "activemodel::validations::helpermethods#validates_presence_of()",
    "activerecord::validations::classmethods#validates_presence_of()",
    "activemodel::validations::helpermethods#validates_size_of()",
    "activerecord::validations::classmethods#validates_size_of()",
    "activerecord::validations::classmethods#validates_uniqueness_of()",
    "activemodel::validations#validates_with()",
    "activemodel::validations::classmethods#validates_with()",
    "activemodel::validations::classmethods#validators()",
    "activemodel::validations::classmethods#validators_on()",
    "activerecord::statementcache::partialquerycollector#value()",
    "actioncontroller::parameters#value?()",
    "actioncontroller::parameters#values()",
    "activemodel::errors#values()",
    "activerecord::relation#values()",
    "rails::paths::root#values()",
    "actioncontroller::parameters#values_at()",
    "activerecord::core#values_at()",
    "activesupport::hashwithindifferentaccess#values_at()",
    "rails::paths::root#values_at()",
    "activestorage::blob::representable#variable?()",
    "actiondispatch::http::mimenegotiation#variant()",
    "activestorage::blob::representable#variant()",
    "actiondispatch::http::mimenegotiation#variant=()",
    "rails::appbuilder#vendor()",
    "rails::generators::actions#vendor()",
    "activesupport::messageverifier#verified()",
    "activesupport::messages::rotator::verifier#verified()",
    "actioncontroller::requestforgeryprotection#verified_request?()",
    "activesupport::messageverifier#verify()",
    "activerecord::connectionadapters::abstractadapter#verify!()",
    "actioncontroller::requestforgeryprotection#verify_authenticity_token()",
    "actioncontroller::requestforgeryprotection#verify_same_origin_request()",
    "actioncable::version()",
    "actionmailbox::version()",
    "actionmailer::version()",
    "actiontext::version()",
    "actionview::version()",
    "activejob::version()",
    "activemodel::version()",
    "activerecord::version()",
    "activestorage::version()",
    "activesupport::version()",
    "rails::version()",
    "rails::generators::appbase::gemfileentry::version()",
    "rails::generators::appbase::gemfileentry#version()",
    "rails::appbuilder#version_control()",
    "rails::pluginbuilder#version_control()",
    "activestorage::blob#video?()",
    "actionview::helpers::asseturlhelper#video_path()",
    "actionview::helpers::assettaghelper#video_tag()",
    "actionview::helpers::asseturlhelper#video_url()",
    "abstractcontroller::rendering#view_assigns()",
    "abstractcontroller::caching#view_cache_dependencies()",
    "abstractcontroller::caching::classmethods#view_cache_dependency()",
    "actionview::rendering#view_context()",
    "actionview::rendering#view_context_class()",
    "actionview::rendering::classmethods#view_context_class()",
    "activerecord::connectionadapters::schemastatements#view_exists?()",
    "actionview::viewpaths::classmethods#view_paths()",
    "actionview::viewpaths::classmethods#view_paths=()",
    "actionview::testcase::behavior::renderedviewscollection#view_rendered?()",
    "activerecord::connectionadapters::schemastatements#views()",
    "activesupport::logsubscriber::testhelper#wait()",
    "activesupport::notifications::fanout#wait()",
    "activesupport::deprecation::reporting#warn()",
    "activesupport::dependencies::watchstack#watch_namespaces()",
    "rails::railtie::configuration#watchable_dirs()",
    "rails::railtie::configuration#watchable_files()",
    "activesupport::dependencies::watchstack#watching?()",
    "actiondispatch::http::cache::response#weak_etag=()",
    "actiondispatch::http::cache::response#weak_etag?()",
    "numeric#week()",
    "actionview::helpers::formbuilder#week_field()",
    "actionview::helpers::formhelper#week_field()",
    "actionview::helpers::formtaghelper#week_field_tag()",
    "numeric#weeks()",
    "dateandtime::calculations#weeks_ago()",
    "dateandtime::calculations#weeks_since()",
    "actioncable::remoteconnections#where()",
    "activemodel::errors#where()",
    "activerecord::querymethods#where()",
    "activerecord::relation#where_values_hash()",
    "activerecord::connectionadapters::connectionhandler#while_preventing_writes()",
    "activerecord::connectionhandling#while_preventing_writes()",
    "activerecord::attributemethods::dirty#will_save_change_to_attribute?()",
    "abstractcontroller::railties::routeshelpers::with()",
    "actionmailer::parameterized::classmethods#with()",
    "activesupport::cache::connectionpoollike#with()",
    "activesupport::xmlmini#with_backend()",
    "activerecord::connectionadapters::connectionpool#with_connection()",
    "actioncable::server::worker::activerecordconnectionmanagement#with_database_connections()",
    "actiondispatch::routing::mapper::base#with_default_scope()",
    "actioncontroller::parameters#with_defaults()",
    "actioncontroller::renderer#with_defaults()",
    "activesupport::hashwithindifferentaccess#with_defaults()",
    "hash#with_defaults()",
    "actioncontroller::parameters#with_defaults!()",
    "activesupport::hashwithindifferentaccess#with_defaults!()",
    "hash#with_defaults!()",
    "actionview::lookupcontext::viewpaths#with_fallbacks()",
    "actiontext::attachment#with_full_attributes()",
    "rails::generators::actions#with_indentation()",
    "activesupport::hashwithindifferentaccess#with_indifferent_access()",
    "hash#with_indifferent_access()",
    "activesupport::cache::strategy::localcache#with_local_cache()",
    "activerecord::locking::pessimistic#with_lock()",
    "object#with_options()",
    "actiondispatch::assertions::routingassertions#with_routing()",
    "actiondispatch::routing::mapper::resources#with_scope_level()",
    "kernel#with_warnings()",
    "activesupport::hashwithindifferentaccess#without()",
    "array#without()",
    "enumerable#without()",
    "actioncontroller::api::without_modules()",
    "actioncontroller::base::without_modules()",
    "actionview::helpers::texthelper#word_wrap()",
    "activesupport::testing::parallelization::worker#work_from_queue()",
    "actioncable::server::base#worker_pool()",
    "actiontext::fragment::wrap()",
    "activestorage::filename::wrap()",
    "activestorage::variation::wrap()",
    "activesupport::executionwrapper::wrap()",
    "activesupport::reloader::wrap()",
    "array::wrap()",
    "mail::address::wrap()",
    "actioncontroller::paramswrapper::options::classmethods#wrap_parameters()",
    "rails::generators::base#wrap_with_namespace()",
    "actioncontroller::live::sse#write()",
    "actiondispatch::railsentitystore#write()",
    "actiondispatch::railsmetastore#write()",
    "actiondispatch::response#write()",
    "activerecord::migration#write()",
    "activesupport::cache::store#write()",
    "activesupport::encryptedconfiguration#write()",
    "activesupport::encryptedfile#write()",
    "activerecord::attributemethods::write#write_attribute()",
    "activesupport::cache::strategy::localcache::localstore#write_entry()",
    "abstractcontroller::caching::fragments#write_fragment()",
    "activesupport::cache::store#write_multi()",
    "activerecord::connectionadapters::databasestatements#write_query?()",
    "actiondispatch::session::cachestore#write_session()",
    "activerecord::store#write_store_attribute()",
    "actioncable::connection::streameventloop#writes_pending()",
    "mail::message#x_original_to_addresses()",
    "actiondispatch::request#xhr?()",
    "activerecord::connectionadapters::postgresql::columnmethods#xml()",
    "actiondispatch::request#xml_http_request?()",
    "activesupport::timewithzone#xmlschema()",
    "date#xmlschema()",
    "actioncontroller::requestforgeryprotection#xor_byte_strings()",
    "rails::appbuilder#yarn_when_updating()",
    "integer#year()",
    "integer#years()",
    "dateandtime::calculations#years_ago()",
    "dateandtime::calculations#years_since()",
    "activesupport::timezone#yesterday()",
    "date::yesterday()",
    "dateandtime::calculations#yesterday()",
    "activesupport::timewithzone#yesterday?()",
    "dateandtime::calculations#yesterday?()",
    "activesupport::concurrency::sharelock#yield_shares()",
    "activesupport::timewithzone#zone()",
    "time::zone()",
    "time::zone=()"
];
export const RAILS = trie(list);
export const VERSION = "5.2.0"